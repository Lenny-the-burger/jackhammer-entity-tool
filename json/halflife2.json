{
  "includes": [
    "base.fgd",
    "halflife2.fgd",
    "base.fgd"
  ],
  "entities": [
    {
      "name": "TalkNPC",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "UseSentence",
          "title": "Use Sentence"
        },
        {
          "type": "string",
          "name": "UnUseSentence",
          "title": "Un-Use Sentence"
        },
        {
          "type": "choices",
          "name": "DontUseSpeechSemaphore",
          "title": "Don't Use Speech Semaphore",
          "description": "Friendly NPCs are not allowed to speak if another friendly NPC is speaking. In some cases we don't want speaking NPCs to prevent other NPCs from speaking (for instance, if there is a friendly NPC speaking for a long time on a monitor). To make this NPC not prevent other NPCs from talking, make it not grab the semaphore when it speaks.",
          "deflt": 0,
          "choices": {
            "0": "No (Use speech semaphore)",
            "1": "Yes (Don't use speech semaphore)"
          }
        }
      ],
      "inputs": [
        {
          "name": "SpeakResponseConcept",
          "description": "Speak the specified response concept.",
          "type": "string"
        }
      ]
    },
    {
      "name": "PlayerCompanion",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "inputs": [
        {
          "name": "OutsideTransition",
          "description": "Use this input to teleport the NPC to a hintnode with the Player Squad Transition Point hint type.",
          "type": "void"
        },
        {
          "name": "EnableAlwaysTransition",
          "description": "Enable the 'always transition' behavior",
          "type": "void"
        },
        {
          "name": "DisableAlwaysTransition",
          "description": "Disable the 'always transition' behavior",
          "type": "void"
        },
        {
          "name": "EnableSpeakWhileScripting",
          "description": "Allow this NPC to speak responses while in a scripted sequence or while StartScripting is active.",
          "type": "void"
        },
        {
          "name": "DisableSpeakWhileScripting",
          "description": "Cancels this NPC's ability to speak responses while in a scripted sequence or while StartScripting is active if it was previously enabled by EnableSpeakWhileScripting.",
          "type": "void"
        },
        {
          "name": "MakeGameEndAlly",
          "description": "Make this NPC a game end ally.",
          "type": "void"
        },
        {
          "name": "MakeRegularAlly",
          "description": "Make this NPC a regular ally.",
          "type": "void"
        },
        {
          "name": "EnableWeaponPickup",
          "description": "Enable Weapon Pickup",
          "type": "void"
        },
        {
          "name": "DisableWeaponPickup",
          "description": "Disable Weapon Pickup",
          "type": "void"
        },
        {
          "name": "GiveWeapon",
          "description": "Gives the NPC a weapon of the specified entity name.",
          "type": "string"
        },
        {
          "name": "SetReadinessPanic",
          "description": "Set readiness to panic state (Special)",
          "type": "void"
        },
        {
          "name": "SetReadinessLow",
          "description": "Set readiness to calmest state (Bored)",
          "type": "void"
        },
        {
          "name": "SetReadinessMedium",
          "description": "Set readiness to moderate (Alert)",
          "type": "void"
        },
        {
          "name": "SetReadinessHigh",
          "description": "Set readiness to highest. (Combat imminent)",
          "type": "void"
        },
        {
          "name": "LockReadiness",
          "description": "Lock readiness at current setting for x seconds -1 = forever, 0 = unlock now",
          "type": "float"
        },
        {
          "name": "ClearAllOutputs",
          "description": "Obliterate every output that this NPC has.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "AlwaysTransition",
          "title": "Always transition",
          "description": "If yes, this NPC will always teleport to a Player Squad Transition Point if they're not within the trigger_transition volume.",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "DontPickupWeapons",
          "title": "Prevent picking up weapons?",
          "description": "If yes, this NPC will NOT be allowed to pick up weapons they find on the ground.",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "GameEndAlly",
          "title": "Is this a vital ally?",
          "description": "If yes, this NPC will cause the game to end if killed.",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "outputs": [
        {
          "name": "OnWeaponPickup",
          "description": "Fires when this NPC picks a weapon off the ground or a gun rack.",
          "type": "void"
        }
      ]
    },
    {
      "name": "RappelNPC",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "waitingtorappel",
          "title": "Waiting to Rappel?",
          "description": "If yes, this NPC spawns suspended in air and awaits a BeginRappel input. It will then spawn a zipline and slide down. When it hits the ground, NPC will cut away the line and try to move forward a few feet to make room for the next NPC. The NPC will not attempt to clear its landing space if it cannot do so by taking a few steps forward",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "BeginRappel",
          "description": "BeginRappel",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnRappelTouchdown",
          "description": "Fires when done rappeling",
          "type": "void"
        }
      ]
    },
    {
      "name": "AlyxInteractable",
      "type": "BaseClass",
      "outputs": [
        {
          "name": "OnAlyxStartedInteraction",
          "description": "Fired when Alyx begins to interact with this entity.",
          "type": "void"
        },
        {
          "name": "OnAlyxFinishedInteraction",
          "description": "Fired when Alyx has finished interacting with this entity.",
          "type": "void"
        }
      ],
      "inputs": [
        {
          "name": "InteractivePowerDown",
          "description": "Shutdown this target.",
          "type": "void"
        }
      ]
    },
    {
      "name": "CombineBallSpawners",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Origin",
            "Angles",
            "Global"
          ]
        }
      ],
      "flags": [
        {
          "title": "Start inactive",
          "value": 4096,
          "enabled": true
        },
        {
          "title": "Combine power supply",
          "value": 8192,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "ballcount",
          "title": "Ball count",
          "description": "This is how many balls will be bouncing around inside the spawner",
          "deflt": 3
        },
        {
          "type": "float",
          "name": "minspeed",
          "title": "Min ball speed",
          "description": "The minimum speed of balls that fly in the spawner",
          "deflt": "300.0"
        },
        {
          "type": "float",
          "name": "maxspeed",
          "title": "Max ball speed",
          "description": "The maximum speed of balls that fly in the spawner",
          "deflt": "600.0"
        },
        {
          "type": "float",
          "name": "ballradius",
          "title": "Ball radius",
          "description": "The radius of the energy balls",
          "deflt": "20.0"
        },
        {
          "type": "choices",
          "name": "balltype",
          "title": "Ball Type",
          "deflt": "Combine Energy Ball 1",
          "choices": {
            "0": "Combine Energy Ball 1",
            "1": "Combine Energy Ball 2",
            "2": "Combine Energy Ball 3"
          }
        },
        {
          "type": "float",
          "name": "ballrespawntime",
          "title": "Ball Respawn Time",
          "description": "The energy balls respawn time",
          "deflt": "4.0f"
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable spawning of combine balls",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable spawning of combine balls",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnBallGrabbed",
          "description": "Fired when a combine ball is grabbed from the field by a mega Gravity Gun",
          "type": "void"
        },
        {
          "name": "OnBallReinserted",
          "description": "Fired when a combine ball is reinserted into the field (only gets triggered when Combine Power supply is checked)",
          "type": "void"
        },
        {
          "name": "OnBallHitTopSide",
          "description": "Fired when a combine ball in hits the top side of the field (only gets triggered when Combine Power supply is checked)",
          "type": "void"
        },
        {
          "name": "OnBallHitBottomSide",
          "description": "Fired when a combine ball in hits the bottom side of the field (only gets triggered when Combine Power supply is checked)",
          "type": "void"
        },
        {
          "name": "OnLastBallGrabbed",
          "description": "Fired when the last combine ball is grabbed from the field by a mega Gravity Gun",
          "type": "void"
        },
        {
          "name": "OnFirstBallReinserted",
          "description": "Fired when the first combine ball is reinserted into the field (only gets triggered when Combine Power supply is checked)",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_combine_ball",
      "type": "PointClass",
      "description": "A prop that physically simulates as a single rigid body. It can be constrained to other physics objects using hinges or other constraints. It can also be configured to break when it takes enough damage.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BasePropPhysics"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "inputs": [
        {
          "name": "Explode",
          "description": "Explode",
          "type": "void"
        }
      ]
    },
    {
      "name": "trigger_physics_trap",
      "type": "SolidClass",
      "description": "A volumetric trigger that disintegrates enemies",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger",
            "Angles"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "dissolvetype",
          "title": "Dissolve Type",
          "deflt": "Energy",
          "choices": {
            "0": "Energy",
            "1": "Heavy electrical",
            "2": "Light electrical"
          }
        }
      ]
    },
    {
      "name": "trigger_weapon_dissolve",
      "type": "SolidClass",
      "description": "A volumetric trigger that dissolves all weapons within it",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "emittername",
          "title": "Emitter Name",
          "description": "Name of a single or multiple entities to use as the basis for the emitted effects.",
          "deflt": ""
        }
      ],
      "outputs": [
        {
          "name": "OnDissolveWeapon",
          "description": "Fires when one weapon is starting to dissolve in the trigger volume.",
          "type": "void"
        },
        {
          "name": "OnChargingPhyscannon",
          "description": "Fires when the trigger begins to charge the Gravity Gun.",
          "type": "void"
        }
      ],
      "inputs": [
        {
          "name": "StopSound",
          "description": "Stops all sounds.",
          "type": "void"
        }
      ]
    },
    {
      "name": "trigger_weapon_strip",
      "type": "SolidClass",
      "description": "A volumetric trigger that strips combat characters of all weapons",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "KillWeapons",
          "title": "Kill Weapons",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ]
    },
    {
      "name": "func_combine_ball_spawner",
      "type": "SolidClass",
      "description": "Spawns Combine balls.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "CombineBallSpawners"
          ]
        }
      ],
      "outputs": [
        {
          "name": "OnBallReinserted",
          "description": "Fired when a combine ball is reinserted into the field (only gets triggered when Combine Power supply is checked)",
          "type": "void"
        },
        {
          "name": "OnLastBallGrabbed",
          "description": "Fired when the last combine ball is grabbed from the field by a mega Gravity Gun",
          "type": "void"
        }
      ]
    },
    {
      "name": "point_combine_ball_launcher",
      "type": "PointClass",
      "description": "Launches Combine balls.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "CombineBallSpawners"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "launchconenoise",
          "title": "Noise to launch direction",
          "description": "Noise in degrees added to the launch direction.",
          "deflt": "0.0"
        },
        {
          "type": "string",
          "name": "bullseyename",
          "title": "Name of bullseye",
          "description": "If you select the Attach Bullseye spawnflag, you may specify a name here which will be given to the bullseye.",
          "deflt": ""
        },
        {
          "type": "integer",
          "name": "maxballbounces",
          "title": "Max number of bounces",
          "description": "Maximum number of bounces the balls are allowed to do before they are removed.",
          "deflt": 8
        }
      ],
      "flags": [
        {
          "title": "Attach Bullseye",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Balls should collide against player",
          "value": 2,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "LaunchBall",
          "description": "Launch a ball from the spawner.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_blob",
      "type": "NPCClass",
      "description": "Blob",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_soldier.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "FormPathShape",
          "description": "Tells the group to go distribute themselves along a shape defined by path corner entities",
          "type": "string"
        },
        {
          "name": "SetRadius",
          "description": "Force the group to change the radius (density)",
          "type": "float"
        }
      ]
    },
    {
      "name": "npc_grenade_frag",
      "type": "NPCClass",
      "description": "Hand Grenade",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Weapons/w_grenade.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "SetTimer",
          "description": "This input makes the grenade live, and specifies how many seconds before it explodes.",
          "type": "float"
        }
      ]
    },
    {
      "name": "npc_combine_cannon",
      "type": "NPCClass",
      "description": "Combine Cannon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "sightdist"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_soldier.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "sightdist",
          "title": "Sight radius",
          "description": "Radius distance at which the cannon is able to aquire enemies.",
          "deflt": 1024
        }
      ]
    },
    {
      "name": "npc_combine_camera",
      "type": "NPCClass",
      "description": "Combine security camera",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "innerradius"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "outerradius"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_camera/combine_camera.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Always Become Angry On New Enemy",
          "value": 32,
          "enabled": true
        },
        {
          "title": "Ignore Enemies (Scripted Targets Only)",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Start Inactive",
          "value": 128,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "innerradius",
          "title": "Inner radius",
          "description": "The camera will only lock onto enemies that are within the inner radius.",
          "deflt": 300
        },
        {
          "type": "integer",
          "name": "outerradius",
          "title": "Outer radius",
          "description": "The camera will flash amber when enemies are within the outer radius, but outside the inner radius.",
          "deflt": 450
        },
        {
          "type": "integer",
          "name": "minhealthdmg",
          "title": "Min req'd damage for hurting camera",
          "deflt": 0
        },
        {
          "type": "target_destination",
          "name": "defaulttarget",
          "title": "Default target",
          "description": "The default target is the entity that the camera follows when it has no other target to track.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Disable",
          "description": "Disables the camera. If open, the camera closes.",
          "type": "void"
        },
        {
          "name": "Enable",
          "description": "Enables the camera. If closed, the camera opens.",
          "type": "void"
        },
        {
          "name": "Toggle",
          "description": "Toggle - If open, close. If closed, open.",
          "type": "void"
        },
        {
          "name": "SetDefaultTargetEntity",
          "description": "Sets the entity for the camera to track when it has nothing better to track, by name.",
          "type": "string"
        },
        {
          "name": "SetTargetEntity",
          "description": "Sets the entity for the camera to track now, by name.",
          "type": "string"
        },
        {
          "name": "SetAngry",
          "description": "Causes the camera to become angry as if it has seen something upsetting.",
          "type": "void"
        },
        {
          "name": "SetIdle",
          "description": "Causes the camera to calm down if it is angry.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFoundPlayer",
          "description": "Fired when the player is spotted within the inner radius",
          "type": "string"
        },
        {
          "name": "OnFoundEnemy",
          "description": "Fired when a non-player enemy is spotted within the inner radius.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_turret_ground",
      "type": "PointClass",
      "description": "Combine ground turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "Parentname",
            "AlyxInteractable"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_turrets/ground_turret.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Turn turret on.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Turn turret off.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnAreaClear",
          "description": "Fires when the turret can't find any more enemies (7 second delay)",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_turret_ceiling",
      "type": "PointClass",
      "description": "Combine Ceiling Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "Studiomodel"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_turrets/ceiling_turret.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Autostart",
          "value": 32,
          "enabled": true
        },
        {
          "title": "Start Inactive",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Never Retire",
          "value": 128,
          "enabled": false
        },
        {
          "title": "Out of Ammo",
          "value": 256,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "minhealthdmg",
          "title": "Min req'd damage for hurting turret",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "If closed, open.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "If open, close.",
          "type": "void"
        },
        {
          "name": "Toggle",
          "description": "Toggle - If open, close. If closed, open.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnDeploy",
          "description": "Turret is becoming active and dangerous.",
          "type": "void"
        },
        {
          "name": "OnRetire",
          "description": "Turret is becoming inactive and harmless.",
          "type": "void"
        },
        {
          "name": "OnTipped",
          "description": "Turret has been tipped over and is inactive.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_turret_floor",
      "type": "PointClass",
      "description": "Combine Floor Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_turrets/floor_turret.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Autostart",
          "value": 32,
          "enabled": false
        },
        {
          "title": "Start Inactive",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Fast Retire",
          "value": 128,
          "enabled": false
        },
        {
          "title": "Out of Ammo",
          "value": 256,
          "enabled": false
        },
        {
          "title": "Citizen modified (Friendly)",
          "value": 512,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "SkinNumber",
          "title": "Skin Number",
          "description": "Which skin to use for this turret. Set to 0 to select randomly.",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "Toggle",
          "description": "Toggle - If open, close. If closed, open.",
          "type": "void"
        },
        {
          "name": "Enable",
          "description": "Enable the turret.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable the turret.",
          "type": "void"
        },
        {
          "name": "DepleteAmmo",
          "description": "Depletes all the ammo from a turret, causing it to dry-fire.",
          "type": "void"
        },
        {
          "name": "RestoreAmmo",
          "description": "Restores ammo to a turret, allowing it to fire live rounds again.",
          "type": "void"
        },
        {
          "name": "SelfDestruct",
          "description": "Causes the turret to warn and then explode.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnDeploy",
          "description": "Turret is becoming active and dangerous.",
          "type": "void"
        },
        {
          "name": "OnRetire",
          "description": "Turret is becoming inactive and harmless.",
          "type": "void"
        },
        {
          "name": "OnTipped",
          "description": "Turret has been tipped over and is inactive.",
          "type": "void"
        },
        {
          "name": "OnPhysGunPickup",
          "description": "Picked up with Gravity Gun",
          "type": "void"
        },
        {
          "name": "OnPhysGunDrop",
          "description": "Released by Gravity Gun",
          "type": "void"
        }
      ]
    },
    {
      "name": "VehicleDriverNPC",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "vehicle",
          "title": "Vehicle to drive"
        }
      ],
      "flags": [
        {
          "title": "Start Inactive",
          "value": 65536,
          "enabled": true
        }
      ],
      "inputs": [
        {
          "name": "StartFiring",
          "description": "Tell the driver to attack nearby enemies with the vehicle's weaponry (if any)",
          "type": "void"
        },
        {
          "name": "StopFiring",
          "description": "Tell the driver to stop attacking nearby enemies with the vehicle's weaponry.",
          "type": "void"
        },
        {
          "name": "GotoPathCorner",
          "description": "Tell the driver to go to a specific path corner and continue from there.",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_vehicledriver",
      "type": "NPCClass",
      "description": "NPC used to drive a target vehicle.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "VehicleDriverNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/roller.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "drivermaxspeed",
          "title": "Maxspeed (percentage of vehicle's maxspeed).",
          "deflt": 1
        },
        {
          "type": "float",
          "name": "driverminspeed",
          "title": "MinSpeed (percentage of vehicle's maxspeed).",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "SetDriversMaxSpeed",
          "description": "Set the Maxspeed (percentage of vehicle's maxspeed).",
          "type": "float"
        },
        {
          "name": "SetDriversMinSpeed",
          "description": "Set the Minspeed (percentage of vehicle's maxspeed).",
          "type": "float"
        },
        {
          "name": "StartForward",
          "description": "Tell the driver to start driving.",
          "type": "void"
        },
        {
          "name": "Stop",
          "description": "Tell the driver to stop driving.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_cranedriver",
      "type": "NPCClass",
      "description": "NPC used to drive cranes.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "VehicleDriverNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/roller.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "releasepause",
          "title": "Pause time before dropping a ForceDrop specified object.",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "ForcePickup",
          "description": "Force the driver to pickup the specified entity (by targetname)",
          "type": "string"
        },
        {
          "name": "ForceDrop",
          "description": "Force the driver to drop the currently held object at the specified entity's location.",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnPickedUpObject",
          "description": "Fired when the ForcePickup specified object has been picked up.",
          "type": "void"
        },
        {
          "name": "OnDroppedObject",
          "description": "Fired when the ForceDrop specified object has been dropped.",
          "type": "void"
        },
        {
          "name": "OnPausingBeforeDrop",
          "description": "Fired at the start of the pause before dropping the ForceDrop specified object.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_apcdriver",
      "type": "NPCClass",
      "description": "NPC used to drive an APC vehicle.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "VehicleDriverNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/roller.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "No Rocket Attacks",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "No Gun Attacks",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "drivermaxspeed",
          "title": "Maxspeed (percentage of vehicle's maxspeed).",
          "deflt": 1
        },
        {
          "type": "float",
          "name": "driverminspeed",
          "title": "MinSpeed (percentage of vehicle's maxspeed).",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "SetDriversMaxSpeed",
          "description": "Set the Maxspeed (percentage of vehicle's maxspeed).",
          "type": "float"
        },
        {
          "name": "SetDriversMinSpeed",
          "description": "Set the Minspeed (percentage of vehicle's maxspeed).",
          "type": "float"
        },
        {
          "name": "StartForward",
          "description": "Tell the driver to start driving.",
          "type": "void"
        },
        {
          "name": "Stop",
          "description": "Tell the driver to stop driving.",
          "type": "void"
        },
        {
          "name": "DisableFiring",
          "description": "Disables firing from happening",
          "type": "float"
        },
        {
          "name": "EnableFiring",
          "description": "Enables firing to start. Firing is enabled by default",
          "type": "float"
        }
      ]
    },
    {
      "name": "npc_rollermine",
      "type": "NPCClass",
      "description": "Roller Mine",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "AlyxInteractable"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/roller.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Friendly",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Use prop_physics collision rules",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "startburied",
          "title": "Start Buried",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "uniformsightdist",
          "title": "Sight Distance",
          "deflt": 0,
          "choices": {
            "0": "Ignore distant targets not in a vehicle (default).",
            "1": "Equal visibility for all targets."
          }
        }
      ],
      "inputs": [
        {
          "name": "TurnOn",
          "description": "Restore this rollermine to normal functionality.",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Make this rollermine completely inert. Does not run AI and NPCs will ignore it.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnPhysGunPickup",
          "description": "Picked up with Gravity Gun",
          "type": "void"
        },
        {
          "name": "OnPhysGunDrop",
          "description": "Released by Gravity Gun",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_missiledefense",
      "type": "NPCClass",
      "description": "Missile Defense",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/missile_defense.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_sniper",
      "type": "NPCClass",
      "description": "Sniper",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_soldier.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "radius",
          "title": "Patience Radius",
          "description": "Sniper will hold fire until the target is within this radius. After that, sniper will always attack, even if the target retreats outside of this radius",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "misses",
          "title": "Initial Misses",
          "description": "How many times to miss a target on purpose before beginning to fire accurately.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "beambrightness",
          "title": "Beam Brightness (0 to 255)",
          "description": "How bright the laser sight beam should be. (0 - 255)",
          "deflt": 100
        },
        {
          "type": "choices",
          "name": "shootZombiesInChest",
          "title": "Shoot zombies in chest",
          "description": "If true, aim for chest instead of headcrab. Useful when at great distance and height.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "float",
          "name": "shielddistance",
          "title": "Bullet shield distance",
          "description": "Obsolete",
          "deflt": 64
        },
        {
          "type": "float",
          "name": "shieldradius",
          "title": "Bullet shield radius",
          "description": "Obsolete",
          "deflt": 48
        },
        {
          "type": "float",
          "name": "PaintInterval",
          "title": "Paint interval",
          "description": "Sniper will keep a target painted for this many seconds before shooting. 'Faster Shooting' sniper flag multiplies this by 0.75.",
          "deflt": 1
        },
        {
          "type": "float",
          "name": "PaintIntervalVariance",
          "title": "Paint interval variance",
          "description": "When shooting at NPCs, a random number between 0 and this is added to PaintInterval for every shot.",
          "deflt": "0.75"
        }
      ],
      "inputs": [
        {
          "name": "EnableSniper",
          "description": "Enable Shooting",
          "type": "void"
        },
        {
          "name": "DisableSniper",
          "description": "Disable Shooting",
          "type": "void"
        },
        {
          "name": "SetDecoyRadius",
          "description": "Set Decoy Radius",
          "type": "integer"
        },
        {
          "name": "SweepTarget",
          "description": "Sweep a Target",
          "type": "string"
        },
        {
          "name": "SweepTargetHighestPriority",
          "description": "Drop everything and sweep this target!",
          "type": "string"
        },
        {
          "name": "SweepGroupRandomly",
          "description": "Randomly Sweep a Group",
          "type": "string"
        },
        {
          "name": "StopSweeping",
          "description": "Stop any target sweeping operation started by entity I/O",
          "type": "void"
        },
        {
          "name": "ProtectTarget",
          "description": "Protect the specified enemy. The sniper will attempt to shoot the enemy nearest the protect target at all times.",
          "type": "target_destination"
        },
        {
          "name": "SetPaintInterval",
          "description": "Set PaintInterval field.",
          "type": "float"
        },
        {
          "name": "SetPaintIntervalVariance",
          "description": "Set PaintIntervalVariance field.",
          "type": "float"
        }
      ],
      "outputs": [
        {
          "name": "OnShotFired",
          "description": "Fires when sniper fires a shot",
          "type": "void"
        }
      ],
      "flags": [
        {
          "title": "Hidden",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Laser Viewcone",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "No Corpse",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Start Disabled",
          "value": 524288,
          "enabled": false
        },
        {
          "title": "Faster shooting (Episodic)",
          "value": 1048576,
          "enabled": false
        },
        {
          "title": "No sweep away from target (Episodic)",
          "value": 2097152,
          "enabled": false
        }
      ]
    },
    {
      "name": "info_radar_target",
      "type": "PointClass",
      "description": "Jalopy Radar Beacon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "EnableDisable"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "radius"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "radius",
          "title": "Effective Radius",
          "description": "How close the Jalopy must be to detect this beacon. If this radius is -1, the range is infinite",
          "deflt": 6000
        },
        {
          "type": "choices",
          "name": "type",
          "title": "Type of target",
          "deflt": 0,
          "choices": {
            "0": "Generic Citizen Beacon",
            "1": "Magnussen RDU Beacon",
            "2": "Dog",
            "3": "Ally Installation"
          }
        },
        {
          "type": "choices",
          "name": "mode",
          "title": "Mode",
          "deflt": 0,
          "choices": {
            "0": "Default",
            "1": "Sticky - once detected, ignore effective radius."
          }
        }
      ]
    },
    {
      "name": "info_target_vehicle_transition",
      "type": "PointClass",
      "description": "Vehicle Transition Point",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "EnableDisable"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ]
    },
    {
      "name": "info_snipertarget",
      "type": "PointClass",
      "description": "Sniper Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "speed",
          "title": "Sweep to speed",
          "deflt": 2
        },
        {
          "type": "string",
          "name": "groupname",
          "title": "Group Name"
        }
      ],
      "flags": [
        {
          "title": "Shoot Me",
          "value": 1,
          "enabled": false
        },
        {
          "title": "No Interruptions",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Resume if Interrupted",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Snap to me",
          "value": 16,
          "enabled": false
        }
      ]
    },
    {
      "name": "prop_thumper",
      "type": "PointClass",
      "description": "Thumper",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/props_combine/CombineThumper002.mdl"
        },
        {
          "type": "choices",
          "name": "dustscale",
          "title": "Dust Scale",
          "deflt": "Small Thumper",
          "choices": {
            "128": "Small Thumper",
            "256": "Large Thumper"
          }
        },
        {
          "type": "integer",
          "name": "EffectRadius",
          "title": "Effect Radius",
          "description": "Radius of the thumper's sound. EPISODIC ONLY.",
          "deflt": 1000
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable Thumper",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable Thumper",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnThumped",
          "description": "Fires when thumper impacts the ground.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_antlion",
      "type": "NPCClass",
      "description": "Antlions will run away from ai_sound, type: Thumper.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/antlion.mdl"
          ]
        },
        {
          "name": "sphere",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "startburrowed",
          "title": "Start Burrowed",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "integer",
          "name": "radius",
          "title": "Alert Radius",
          "deflt": 256
        },
        {
          "type": "integer",
          "name": "eludedist",
          "title": "Distance until eluded",
          "description": "Only available when Burrow When Eluded is flagged",
          "deflt": 1024
        },
        {
          "type": "choices",
          "name": "ignorebugbait",
          "title": "Ignore Bugbait",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "unburroweffects",
          "title": "Suppress unburrow effects",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "Burrow when eluded",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Use Ground Checks",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Worker Type",
          "value": 262144,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Unburrow",
          "description": "Unburrow from the ground",
          "type": "void"
        },
        {
          "name": "Burrow",
          "description": "Burrow into the ground",
          "type": "void"
        },
        {
          "name": "BurrowAway",
          "description": "Burrow into the ground and remove the antlion",
          "type": "void"
        },
        {
          "name": "FightToPosition",
          "description": "Fight to position",
          "type": "string"
        },
        {
          "name": "EnableJump",
          "description": "Allow non-navigational jumping",
          "type": "void"
        },
        {
          "name": "DisableJump",
          "description": "Disallow non-navigational jumping",
          "type": "void"
        },
        {
          "name": "IgnoreBugbait",
          "description": "Ignore bugbait",
          "type": "void"
        },
        {
          "name": "HearBugbait",
          "description": "Hear bugbait",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnReachedFightGoal",
          "description": "Fires when the antlion reaches his specified fight-to location",
          "type": "void"
        },
        {
          "name": "OnUnBurrowed",
          "description": "Fires when the antlion unburrows",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_antlionguard",
      "type": "NPCClass",
      "description": "Antlion Guard",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/antlion_guard.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Create server-side ragdoll on death",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Use inside footsteps",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "startburrowed",
          "title": "Start Burrowed",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "allowbark",
          "title": "Allow Bark",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "cavernbreed",
          "title": "Cavern Guard Model and Texture",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "incavern",
          "title": "Use inside-Cavern Behavior",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "string",
          "name": "shovetargets",
          "title": "Shove Targets",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Unburrow",
          "description": "Unburrow from the ground",
          "type": "void"
        },
        {
          "name": "SetShoveTarget",
          "description": "Sets a shove target to attack",
          "type": "string"
        },
        {
          "name": "SetChargeTarget",
          "description": "Sets a charge target to attack.  Parameters are the name of the entity to start at and the name of the entity to charge towards, separated by a space (i.e. start target)",
          "type": "string"
        },
        {
          "name": "ClearChargeTarget",
          "description": "Clear the charge target",
          "type": "void"
        },
        {
          "name": "SetCoverFromAttack",
          "description": "Sets whether or not the creature will protect itself from attacks",
          "type": "integer"
        },
        {
          "name": "Ragdoll",
          "description": "Causes the antlion guard to die, regardless of health",
          "type": "void"
        },
        {
          "name": "EnableBark",
          "description": "Allow the antlion guard to try and summon antlions",
          "type": "void"
        },
        {
          "name": "DisableBark",
          "description": "Stop the antlion guard from trying to summon antlions",
          "type": "void"
        },
        {
          "name": "InvestigateHint",
          "description": "Sniff around at a hint group until told otherwise",
          "type": "string"
        },
        {
          "name": "StopInvestigating",
          "description": "Stop trying to sniff out the player",
          "type": "void"
        },
        {
          "name": "EnablePreferPhysicsAttack",
          "description": "Prefer to use physics attacks if at all possible, even when inside a cavern.",
          "type": "void"
        },
        {
          "name": "DisablePreferPhysicsAttack",
          "description": "Do not prefer to use physics attacks if at all possible, even when inside a cavern.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnSeeHiddenPlayer",
          "description": "Fires when the current enemy is seen while trying to hide",
          "type": "void"
        },
        {
          "name": "OnSmellHiddenPlayer",
          "description": "Fires when the current enemy is smelled while trying to hide",
          "type": "void"
        },
        {
          "name": "OnSummon",
          "description": "Antlion guard is attempting to summon antlions",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_crow",
      "type": "NPCClass",
      "description": "Crow",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/crow.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "FlyAway",
          "description": "Forces the crow to fly to the nearest crow flyto hint node.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "deaf",
          "title": "Deaf?",
          "deflt": 0,
          "choices": {
            "0": "No.",
            "1": "Yes. Ignore sounds."
          }
        }
      ]
    },
    {
      "name": "npc_seagull",
      "type": "NPCClass",
      "description": "Seagull",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/seagull.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "FlyAway",
          "description": "Forces the seagull to fly to the nearest crow flyto hint node.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "deaf",
          "title": "Deaf?",
          "deflt": 0,
          "choices": {
            "0": "No.",
            "1": "Yes. Ignore sounds."
          }
        }
      ]
    },
    {
      "name": "npc_pigeon",
      "type": "NPCClass",
      "description": "Pigeon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/pigeon.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "FlyAway",
          "description": "Forces the pigeon to fly to the nearest crow flyto hint node.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "deaf",
          "title": "Deaf?",
          "deflt": 0,
          "choices": {
            "0": "No.",
            "1": "Yes. Ignore sounds."
          }
        }
      ]
    },
    {
      "name": "npc_ichthyosaur",
      "type": "NPCClass",
      "description": "Ichthyosaur. Not fully functional",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/ichthyosaur.mdl"
          ]
        }
      ]
    },
    {
      "name": "BaseHeadcrab",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "startburrowed",
          "title": "Start burrowed",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "Start hidden",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Start hanging from ceiling",
          "value": 131072,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "StartHangingFromCeiling",
          "description": "Start hanging from ceiling.",
          "type": "void"
        },
        {
          "name": "DropFromCeiling",
          "description": "Drop if hanging from ceiling.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_headcrab",
      "type": "NPCClass",
      "description": "Headcrab",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHeadcrab",
            "Parentname"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Headcrabclassic.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_headcrab_fast",
      "type": "NPCClass",
      "description": "Fast Headcrab",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHeadcrab"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Headcrab.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_headcrab_black",
      "type": "NPCClass",
      "description": "Black Headcrab",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHeadcrab"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Headcrabblack.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_stalker",
      "type": "NPCClass",
      "description": "Stalker",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Stalker.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "BeamPower",
          "title": "Beam Power",
          "deflt": "Low",
          "choices": {
            "0": "Low",
            "1": "Medium",
            "2": "High"
          }
        }
      ]
    },
    {
      "name": "npc_bullseye",
      "type": "NPCClass",
      "description": "Bullseye",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "BaseNPC"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/bullseye.vmt"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            0,
            0
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "health",
          "title": "Health",
          "deflt": 35
        },
        {
          "type": "string",
          "name": "minangle",
          "title": "Minimum Angle",
          "description": "Angle from the bullseye required for bullseye to be a valid enemy",
          "deflt": "360"
        },
        {
          "type": "string",
          "name": "mindist",
          "title": "Minimum Distance",
          "description": "Distance from the bullseye required for bullseye to be a valid enemy",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "autoaimradius",
          "title": "Autoaim Radius",
          "description": "Radius of autoaim influence. Use ent_autoaim <picker> to visualize.",
          "deflt": "0"
        }
      ],
      "flags": [
        {
          "title": "Not Solid",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Take No Damage",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Enemy Damage Only",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Bleed",
          "value": 524288,
          "enabled": false
        },
        {
          "title": "Perfect Accuracy",
          "value": 1048576,
          "enabled": false
        },
        {
          "title": "Collide against physics objects (Creates VPhysics Shadow)",
          "value": 2097152,
          "enabled": false
        }
      ],
      "outputs": [
        {
          "name": "OnTargeted",
          "description": "Fires when targeted",
          "type": "void"
        },
        {
          "name": "OnReleased",
          "description": "Fires when no longer targeted",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_enemyfinder",
      "type": "NPCClass",
      "description": "EnemyFinder",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "BaseNPC"
          ]
        },
        {
          "name": "size",
          "values": [
            -16,
            -16,
            -16,
            16,
            16,
            16
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            150,
            0
          ]
        }
      ],
      "flags": [
        {
          "title": "Check Visibility",
          "value": 65536,
          "enabled": true
        },
        {
          "title": "APC Visibility checks",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Short memory",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Can be an enemy",
          "value": 524288,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "FieldOfView",
          "title": "FieldOfView",
          "description": "How far to look (1.0 = straight ahead, 0.0 = +/- 90 degrees, -1.0 = all directions)",
          "deflt": "0.2"
        },
        {
          "type": "integer",
          "name": "MinSearchDist",
          "title": "Min Search Dist",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "MaxSearchDist",
          "title": "Max Search Dist",
          "deflt": 2048
        },
        {
          "type": "float",
          "name": "freepass_timetotrigger",
          "title": "Player pass issue time",
          "description": "Amount of time an enemy is hidden after which a 'free pass' on reaquire is granted",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "freepass_duration",
          "title": "Player pass duration",
          "description": "After granted 'free pass', the amount of time a target is allowed before reaquire",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "freepass_movetolerance",
          "title": "Player pass move tolerance",
          "description": "After granted 'free pass', the distance the target is allowed to move before reaquire",
          "deflt": 120
        },
        {
          "type": "float",
          "name": "freepass_refillrate",
          "title": "Player pass refill rate",
          "description": "After free pass begins expiring, how much the time the target gets back for every second they hide again",
          "deflt": "0.5"
        },
        {
          "type": "float",
          "name": "freepass_peektime",
          "title": "Player pass peek time",
          "description": "How long targets in cover are allowed to peek without penalty",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "StartOn",
          "title": "Start On",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "TurnOn",
          "description": "Turn on: Look for enemies",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Turn off: Stop looking for enemies",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnLostEnemies",
          "description": "Fires when the enemy finder has no enemies.",
          "type": "void"
        },
        {
          "name": "OnAcquireEnemies",
          "description": "Fires when the enemy finder acquires enemies.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_enemyfinder_combinecannon",
      "type": "NPCClass",
      "description": "EnemyFinder Specifically for use with func_tank_combine_cannon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "BaseNPC"
          ]
        },
        {
          "name": "size",
          "values": [
            -16,
            -16,
            -16,
            16,
            16,
            16
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            150,
            0
          ]
        }
      ],
      "flags": [
        {
          "title": "Check Visibility",
          "value": 65536,
          "enabled": true
        },
        {
          "title": "APC Visibility checks",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Short memory",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Can be an enemy",
          "value": 524288,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "FieldOfView",
          "title": "FieldOfView",
          "description": "How far to look (1.0 = straight ahead, 0.0 = +/- 90 degrees, -1.0 = all directions)",
          "deflt": "0.2"
        },
        {
          "type": "integer",
          "name": "MinSearchDist",
          "title": "Min Search Dist",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "MaxSearchDist",
          "title": "Max Search Dist",
          "deflt": 2048
        },
        {
          "type": "target_destination",
          "name": "SnapToEnt",
          "title": "Name of entity to snap to",
          "description": "Since it can be hard to position these entities with respect to the func_tank brushwork, you can specify an entity name here and this enemyfinder will position itself at the center of that entity.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "freepass_timetotrigger",
          "title": "Player pass issue time",
          "description": "Amount of time an enemy is hidden after which a 'free pass' on reaquire is granted",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "freepass_duration",
          "title": "Player pass duration",
          "description": "After granted 'free pass', the amount of time a target is allowed before reaquire",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "freepass_movetolerance",
          "title": "Player pass move tolerance",
          "description": "After granted 'free pass', the distance the target is allowed to move before reaquire",
          "deflt": 120
        },
        {
          "type": "float",
          "name": "freepass_refillrate",
          "title": "Player pass refill rate",
          "description": "After free pass begins expiring, how much the time the target gets back for every second they hide again",
          "deflt": "0.5"
        },
        {
          "type": "float",
          "name": "freepass_peektime",
          "title": "Player pass peek time",
          "description": "How long targets in cover are allowed to peek without penalty",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "StartOn",
          "title": "Start On",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "TurnOn",
          "description": "Turn on: Look for enemies",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Turn off: Stop looking for enemies",
          "type": "void"
        },
        {
          "name": "SetWideFOVForSeconds",
          "description": "Gives this enemyfinder a 180 degree viewcone for the number of seconds specified in the parameter override",
          "type": "float"
        }
      ],
      "outputs": [
        {
          "name": "OnLostEnemies",
          "description": "Fires when the enemy finder has no enemies.",
          "type": "void"
        },
        {
          "name": "OnAcquireEnemies",
          "description": "Fires when the enemy finder acquires enemies.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_citizen",
      "type": "NPCClass",
      "description": "Citizen",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "Parentname",
            "TalkNPC",
            "PlayerCompanion"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "flags": [
        {
          "title": "Follow player on spawn",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Medic",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Random Head",
          "value": 262144,
          "enabled": true
        },
        {
          "title": "Ammo Resupplier",
          "value": 524288,
          "enabled": false
        },
        {
          "title": "Not Commandable",
          "value": 1048576,
          "enabled": false
        },
        {
          "title": "Don't use Speech Semaphore - OBSOLETE",
          "value": 2097152,
          "enabled": false
        },
        {
          "title": "Random male head",
          "value": 4194304,
          "enabled": false
        },
        {
          "title": "Random female head",
          "value": 8388608,
          "enabled": false
        },
        {
          "title": "Use RenderBox in ActBusies",
          "value": 16777216,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "0",
          "choices": {
            "0": "Nothing",
            "weapon_smg1": "SMG1",
            "weapon_ar2": "AR2",
            "weapon_stunstick": "Stun Stick",
            "weapon_crowbar": "Crow Bar",
            "weapon_shotgun": "Shotgun",
            "weapon_beerbottle": "Beer Bottle",
            "weapon_beerbottle2": "Beer Bottle2",
            "weapon_rpg": "RPG"
          }
        },
        {
          "type": "choices",
          "name": "ammosupply",
          "title": "Ammo to Resupply (if spawnflag set)",
          "deflt": "SMG1",
          "choices": {
            "Pistol": "Pistol",
            "SMG1": "SMG1",
            "SMG1_Grenade": "SMG1 Grenade",
            "AR2": "AR2",
            "Buckshot": "Shotgun",
            "RPG_Round": "RPG",
            "Grenade": "Grenade",
            "XBowBolt": "Crossbow Bolt"
          }
        },
        {
          "type": "integer",
          "name": "ammoamount",
          "title": "Amount of ammo to give",
          "deflt": 1
        },
        {
          "type": "choices",
          "name": "citizentype",
          "title": "Type",
          "deflt": "Default",
          "choices": {
            "0": "Default",
            "1": "Downtrodden",
            "2": "Refugee",
            "3": "Rebel",
            "4": "Unique"
          }
        },
        {
          "type": "choices",
          "name": "expressiontype",
          "title": "Expression Type",
          "deflt": "Random",
          "choices": {
            "0": "Random",
            "1": "Scared",
            "2": "Normal",
            "3": "Angry"
          }
        },
        {
          "type": "choices",
          "name": "model",
          "title": "Model",
          "deflt": "models/humans/group01/male_01.mdl",
          "choices": {
            "models/humans/group01/male_01.mdl": "Male 1",
            "models/humans/group01/male_02.mdl": "Male 2",
            "models/humans/group01/male_03.mdl": "Male 3",
            "models/humans/group01/male_04.mdl": "Male 4",
            "models/humans/group01/male_05.mdl": "Male 5",
            "models/humans/group01/male_06.mdl": "Male 6",
            "models/humans/group01/male_07.mdl": "Male 7",
            "models/humans/group01/male_08.mdl": "Male 8",
            "models/humans/group01/male_09.mdl": "Male 9",
            "models/humans/group01/female_01.mdl": "Female 1",
            "models/humans/group01/female_02.mdl": "Female 2",
            "models/humans/group01/female_03.mdl": "Female 3",
            "models/humans/group01/female_04.mdl": "Female 4",
            "models/humans/group01/female_06.mdl": "Female 5",
            "models/humans/group01/female_07.mdl": "Female 6",
            "models/humans/male_cheaple.mdl": "Cheaple Male 1",
            "models/odessa.mdl": "Odessa. DO NOT USE."
          }
        },
        {
          "type": "string",
          "name": "ExpressionOverride",
          "title": "Facial expression override"
        },
        {
          "type": "choices",
          "name": "notifynavfailblocked",
          "title": "Fire output when Nav is blocked?",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "neverleaveplayersquad",
          "title": "Permanent squad member?",
          "description": "A permanent squad member cannot leave the player's squad unless killed or explicity removed by entity I/O. Only use this if you're sure you want to override the default AI.",
          "deflt": 0,
          "choices": {
            "0": "No. This is default behavior.",
            "1": "Yes, stay in squad until death."
          }
        },
        {
          "type": "string",
          "name": "denycommandconcept",
          "title": "Deny command speech concept",
          "description": "If you want your citizens to squad with the player but not obey commands the player gives to move the squad, put a concept here and this citizen will speak the concept instead of obeying the order.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "RemoveFromPlayerSquad",
          "description": "Remove from player squad, instantly.",
          "type": "void"
        },
        {
          "name": "SetExpressionOverride",
          "description": "Set facial expression override",
          "type": "string"
        },
        {
          "name": "StartPatrolling",
          "description": "Patrol whenever I'm idle or alert.",
          "type": "void"
        },
        {
          "name": "StopPatrolling",
          "description": "Stop patrolling when I'm idle or alert.",
          "type": "void"
        },
        {
          "name": "SetCommandable",
          "description": "Make a previously uncommandable citizen commandable",
          "type": "void"
        },
        {
          "name": "SetMedicOn",
          "description": "Set the medic flag on. Will not change the model or skin of the citizen.",
          "type": "void"
        },
        {
          "name": "SetMedicOff",
          "description": "Set the medic flag off. Will not change the model or skin of the citizen.",
          "type": "void"
        },
        {
          "name": "SetAmmoResupplierOn",
          "description": "Set the ammo-resupplier flag on. Will not change the model or skin of the citizen.",
          "type": "void"
        },
        {
          "name": "SetAmmoResupplierOff",
          "description": "Set the ammo-resupplier flag off. Will not change the model or skin of the citizen.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnJoinedPlayerSquad",
          "description": "Fires when joins player squad",
          "type": "void"
        },
        {
          "name": "OnLeftPlayerSquad",
          "description": "Fires when leaves player squad",
          "type": "void"
        },
        {
          "name": "OnFollowOrder",
          "description": "Fires when ordered to follow player",
          "type": "void"
        },
        {
          "name": "OnStationOrder",
          "description": "Fires when ordered to a location by player",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fires when a player +USEs the citizen",
          "type": "void"
        },
        {
          "name": "OnNavFailBlocked",
          "description": "Fires when this Citizen's movement fails because he/she is blocked.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_fisherman",
      "type": "NPCClass",
      "description": "Fisherman",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Barney.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "ExpressionOverride",
          "title": "Facial expression override"
        }
      ],
      "inputs": [
        {
          "name": "SetExpressionOverride",
          "description": "Set facial expression override",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_barney",
      "type": "NPCClass",
      "description": "Barney",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC",
            "BaseNPC",
            "PlayerCompanion"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Barney.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "weapon_pistol",
          "choices": {
            "0": "Nothing",
            "weapon_pistol": "Pistol",
            "weapon_smg1": "SMG1",
            "weapon_stunstick": "Stun Stick",
            "weapon_shotgun": "Shotgun",
            "weapon_ar2": "AR2"
          }
        },
        {
          "type": "string",
          "name": "ExpressionOverride",
          "title": "Facial expression override"
        }
      ],
      "inputs": [
        {
          "name": "SetExpressionOverride",
          "description": "Set facial expression override",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnPlayerUse",
          "description": "Fires when a player +USEs Barney",
          "type": "void"
        }
      ]
    },
    {
      "name": "BaseCombine",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "RappelNPC"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "weapon_smg1",
          "choices": {
            "0": "Nothing",
            "weapon_ar2": "AR2",
            "weapon_shotgun": "Shotgun",
            "weapon_smg1": "SMG1",
            "weapon_stunstick": "Stun Stick"
          }
        },
        {
          "type": "choices",
          "name": "NumGrenades",
          "title": "Number of Grenades",
          "deflt": "5",
          "choices": {
            "0": "None",
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "999999": "Unlimited"
          }
        }
      ],
      "flags": [
        {
          "title": "Start LookOff",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Don't drop grenades",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Don't drop ar2 alt fire (elite only) ",
          "value": 262144,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "LookOn",
          "description": "Look normally",
          "type": "void"
        },
        {
          "name": "LookOff",
          "description": "Don't look for myself, use other squad member's eyes",
          "type": "void"
        },
        {
          "name": "StartPatrolling",
          "description": "Patrol whenever I'm idle or alert.",
          "type": "void"
        },
        {
          "name": "StopPatrolling",
          "description": "Stop patrolling when I'm idle or alert.",
          "type": "void"
        },
        {
          "name": "ThrowGrenadeAtTarget",
          "description": "Throw a grenade at the specified target.",
          "type": "target_destination"
        }
      ]
    },
    {
      "name": "npc_combine_s",
      "type": "NPCClass",
      "description": "Combine Soldier",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseCombine"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Combine_Soldier.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Assault",
          "description": "Start an assault. Parameter passed in should be the name of the rally point.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "model",
          "title": "Model",
          "description": "Regular Soldier",
          "deflt": "models/combine_soldier.mdl",
          "choices": {
            "models/combine_soldier.mdl": "Regular Soldier",
            "models/combine_soldier_prisonguard.mdl": "Nova Prospekt Soldier",
            "models/combine_super_soldier.mdl": "Elite Soldier"
          }
        },
        {
          "type": "choices",
          "name": "tacticalvariant",
          "title": "Tactical Variant",
          "deflt": "0",
          "choices": {
            "0": "Normal Tactics",
            "1": "Pressure the enemy (Keep advancing)",
            "2": "Pressure until within 30ft, then normal"
          }
        },
        {
          "type": "choices",
          "name": "usemarch",
          "title": "Walk Easy",
          "description": "When true, will use a variety of more casual walking animations instead of the standard walk. For use in crowds. WARNING: this animation only has a north component. For use under very special circumstances only.",
          "deflt": "0",
          "choices": {
            "0": "No",
            "2": "Yes"
          }
        }
      ]
    },
    {
      "name": "npc_launcher",
      "type": "PointClass",
      "description": "Launcher",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/junk/w_traffcone.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Check LOS",
          "value": 65536,
          "enabled": true
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "StartOn",
          "title": "Start On",
          "deflt": 0,
          "choices": {
            "0": "Off",
            "1": "On"
          }
        },
        {
          "type": "studio",
          "name": "MissileModel",
          "title": "Missile Model",
          "deflt": "models/Weapons/wscanner_grenade.mdl"
        },
        {
          "type": "sound",
          "name": "LaunchSound",
          "title": "Launch Sound",
          "deflt": "npc/waste_scanner/grenade_fire.wav"
        },
        {
          "type": "sound",
          "name": "FlySound",
          "title": "Fly Sound",
          "deflt": "ambient/objects/machine2.wav"
        },
        {
          "type": "choices",
          "name": "SmokeTrail",
          "title": "Smoke Trail",
          "deflt": 1,
          "choices": {
            "0": "Off",
            "1": "On",
            "2": "On Homing"
          }
        },
        {
          "type": "choices",
          "name": "LaunchSmoke",
          "title": "Launch Smoke",
          "deflt": 1,
          "choices": {
            "0": "Off",
            "1": "On"
          }
        },
        {
          "type": "integer",
          "name": "LaunchDelay",
          "title": "Launch Delay",
          "description": "When ON, how long to wait between each launch",
          "deflt": 8
        },
        {
          "type": "string",
          "name": "LaunchSpeed",
          "title": "Launch Speed",
          "description": "Initial launch speed of missile (in up direction)",
          "deflt": 200
        },
        {
          "type": "target_destination",
          "name": "PathCornerName",
          "title": "Path Corner Name",
          "description": "Name of a path corner.  If set launches a pathfollowing missing, rather than a homing missile",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "HomingSpeed",
          "title": "Homing Speed",
          "description": "Speed to reach when homing",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "HomingStrength",
          "title": "Homing Strength",
          "description": "How strong in homing effect (0-100)",
          "deflt": 10
        },
        {
          "type": "string",
          "name": "HomingDelay",
          "title": "Homing Delay",
          "description": "Number of seconds to delay before homing starts",
          "deflt": 0
        },
        {
          "type": "string",
          "name": "HomingRampUp",
          "title": "Homing Ramp Up",
          "description": "Number of seconds it takes to reach full homing strength after homing delay",
          "deflt": "0.5"
        },
        {
          "type": "string",
          "name": "HomingDuration",
          "title": "Homing Duration",
          "description": "Number of seconds the homing effect lasts",
          "deflt": 5
        },
        {
          "type": "string",
          "name": "HomingRampDown",
          "title": "Homing Ramp Down",
          "description": "Number of seconds it takes homing effect to decay after homing duration",
          "deflt": "1.0"
        },
        {
          "type": "string",
          "name": "Gravity",
          "title": "Gravity",
          "description": "Scale for effect of gravity. (1.0 = normal gravity)",
          "deflt": "1.0"
        },
        {
          "type": "integer",
          "name": "MinRange",
          "title": "Min Range",
          "description": "Minimun distance a target can be to be attacked",
          "deflt": 100
        },
        {
          "type": "integer",
          "name": "MaxRange",
          "title": "Max Range",
          "description": "Maximum distance a target can be to be attacked",
          "deflt": 2048
        },
        {
          "type": "string",
          "name": "SpinMagnitude",
          "title": "Spin Magnitude",
          "description": "Strength of spin in missile trajectory",
          "deflt": 0
        },
        {
          "type": "string",
          "name": "SpinSpeed",
          "title": "Spin Speed",
          "description": "How fast does the spin rotate through 360",
          "deflt": 0
        },
        {
          "type": "string",
          "name": "Damage",
          "title": "Damage",
          "description": "How much damage does each missile do",
          "deflt": 50
        },
        {
          "type": "string",
          "name": "DamageRadius",
          "title": "DamageRadius",
          "description": "How far away from impact does the missle do damage",
          "deflt": 200
        }
      ],
      "outputs": [
        {
          "name": "OnLaunch",
          "description": "Fires when missile is launched",
          "type": "void"
        }
      ],
      "inputs": [
        {
          "name": "TurnOn",
          "description": "Turn on Launcher",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Turn off Launcher",
          "type": "void"
        },
        {
          "name": "LOSCheckOn",
          "description": "Start checking line of sight before firing",
          "type": "void"
        },
        {
          "name": "LOSCheckOff",
          "description": "Stop checking line of sight before firing",
          "type": "void"
        },
        {
          "name": "SetEnemyEntity",
          "description": "Set entity I should attack. Ignores visibility. (output from other entity only)",
          "type": "string"
        },
        {
          "name": "ClearEnemyEntity",
          "description": "Clear set enemy enemy",
          "type": "void"
        },
        {
          "name": "FireOnce",
          "description": "Fire Once (if have enemy)",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_hunter",
      "type": "NPCClass",
      "description": "A smaller, faster, strider that can pursue the player into buildings.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/hunter.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "FollowTarget",
          "title": "Strider to Follow",
          "description": "The name of the strider that this hunter should follow.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "FollowStrider",
          "description": "Sets the name of the strider that this hunter should follow.",
          "type": "target_destination"
        },
        {
          "name": "SetMinigunTime",
          "description": "Time to shoot at any set minigun target.",
          "type": "float"
        },
        {
          "name": "SetMinigunTarget",
          "description": "Hunter will shoot minigun at the named target.",
          "type": "string"
        },
        {
          "name": "DisableShooting",
          "description": "Forces the hunter to be melee-only.",
          "type": "void"
        },
        {
          "name": "EnableShooting",
          "description": "Allows the hunter to use range attacks or melee attacks.",
          "type": "void"
        },
        {
          "name": "DisableSquadShootDelay",
          "description": "Disables the delay between range attacks for squads of hunters, allowing them to shoot as frequently as they wish.",
          "type": "void"
        },
        {
          "name": "EnableSquadShootDelay",
          "description": "Enables the delay between range attacks for squads of hunters.",
          "type": "void"
        },
        {
          "name": "EnableUnplantedShooting",
          "description": "Used mainly for scripted attacks against bullseyes. Enables the hunter to shoot without having to plant first.",
          "type": "void"
        },
        {
          "name": "DisableUnplantedShooting",
          "description": "Returns the hunter to normal after a call to EnableUnplantedShooting.",
          "type": "void"
        },
        {
          "name": "DoPhysicsBlast",
          "description": "Hunter will instantly do the defensive physics blast.",
          "type": "void"
        },
        {
          "name": "Crouch",
          "description": "Crouch down.",
          "type": "void"
        },
        {
          "name": "Stand",
          "description": "Stand up from crouch.",
          "type": "void"
        },
        {
          "name": "DisableCrouchWalk",
          "description": "UNUSED: Prevents the hunter from crouch walking.",
          "type": "void"
        },
        {
          "name": "EnableCrouchWalk",
          "description": "UNUSED: Allows the hunter to crouch walk.",
          "type": "void"
        },
        {
          "name": "UseSiegeTargets",
          "description": "Pass in the name of info_targets to shoot at when I can't shoot at the player.",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_hunter_maker",
      "type": "PointClass",
      "description": "An entity that creates hunters. The NPCs it creates are clones of a template NPC.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "npc_template_maker"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/npc_maker.vmt"
          ]
        }
      ]
    },
    {
      "name": "npc_advisor",
      "type": "NPCClass",
      "description": "An adorable sluglike alien with benevolent psychic powers.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/advisor.mdl"
        },
        {
          "type": "string",
          "name": "levitationarea",
          "title": "Levitation Area",
          "description": "Trigger volume inside which levitated objects reside",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "levitategoal_bottom",
          "title": "Levitation Goal Bottom",
          "description": "Objects will levitate at least this high",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "levitategoal_top",
          "title": "Levitation Goal Top",
          "description": "Objects will levitate at least this high",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "staging_ent_names",
          "title": "Staging Position Names",
          "description": "All entities with this name will be considered staging positions for the throw behavior.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "priority_grab_name",
          "title": "Priority Name For Grabbing",
          "description": "If any entities named this are present, the advisor will preferentially pick them up for throwing at the player.",
          "deflt": ""
        }
      ],
      "outputs": [
        {
          "name": "OnPickingThrowable",
          "description": "Fires just before I pick something to hurl",
          "type": "void"
        },
        {
          "name": "OnThrowWarn",
          "description": "Fires when I trigger the warning green glow before tossing",
          "type": "void"
        },
        {
          "name": "OnThrow",
          "description": "Fires just after I throw something",
          "type": "void"
        },
        {
          "name": "OnHealthIsNow",
          "description": "When I am damaged, my hitpoints thereafter",
          "type": "integer"
        }
      ],
      "inputs": [
        {
          "name": "SetThrowRate",
          "description": "Advisor will throw an object once per this many seconds (plus a little more)",
          "type": "float"
        },
        {
          "name": "WrenchImmediate",
          "description": "Advisor will immediately start levitating all objects with this name",
          "type": "string"
        },
        {
          "name": "SetStagingNum",
          "description": "Advisor will stage this many objects at once, then barrage the player.",
          "type": "integer"
        },
        {
          "name": "PinPlayer",
          "description": "Advisor will wrench the player to this point in the air. Use a null param to let go.",
          "type": "string"
        },
        {
          "name": "BeamOn",
          "description": "Start a psychic-TK effect beam from the advisor to the specified object. You must remember to turn it off later.",
          "type": "string"
        },
        {
          "name": "BeamOff",
          "description": "Turn off a psychic-TK effect beam from the advisor to the specified object.",
          "type": "string"
        },
        {
          "name": "ELightOn",
          "description": "Turn on an entity light at my location. Please remember to turn this off.",
          "type": "void"
        },
        {
          "name": "ELightOff",
          "description": "Turn off my entity light.",
          "type": "void"
        },
        {
          "name": "DoNothing",
          "description": "",
          "type": "void"
        }
      ]
    },
    {
      "name": "env_sporeexplosion",
      "type": "PointClass",
      "description": "Bugbait Spore Effect",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "EnableDisable"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "spawnrate",
          "title": "Spawn Rate (as percentage)",
          "description": "How dense the spore effect is",
          "deflt": "25"
        }
      ]
    },
    {
      "name": "env_gunfire",
      "type": "PointClass",
      "description": "Gunfire Effect",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Targetname",
            "EnableDisable"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Target",
          "description": "Shoot at this target. REMEMBER - this is an effect only! It does not do damage!",
          "deflt": ""
        },
        {
          "type": "integer",
          "name": "minburstsize",
          "title": "Min Burst Size",
          "description": "Minimum number of rounds in a burst.",
          "deflt": 2
        },
        {
          "type": "integer",
          "name": "maxburstsize",
          "title": "Max Burst Size",
          "description": "Maximum number of rounds in a burst.",
          "deflt": 7
        },
        {
          "type": "float",
          "name": "minburstdelay",
          "title": "Min Delay Between Bursts",
          "description": "Minimum delay between bursts. (seconds)",
          "deflt": 2
        },
        {
          "type": "float",
          "name": "maxburstdelay",
          "title": "Max Delay Between Bursts",
          "description": "Maximum delay between bursts. (seconds)",
          "deflt": 5
        },
        {
          "type": "float",
          "name": "rateoffire",
          "title": "Rate of fire",
          "description": "Expressed as rounds per second",
          "deflt": 10
        },
        {
          "type": "choices",
          "name": "spread",
          "title": "Bullet spread",
          "description": "The 'cone of inaccuracy' of the shots fired by this entity.",
          "deflt": 5,
          "choices": {
            "1": "1 Degree",
            "5": "5 Degrees",
            "10": "10 Degrees",
            "15": "15 Degrees"
          }
        },
        {
          "type": "choices",
          "name": "bias",
          "title": "Bullet distribution should be...",
          "description": "How to distribute bullets within the spread. Even distribution is a true scatter throughout the spread. Biased towards the outside makes the shots 'miss' the target by tending towards the outside of the spread.",
          "deflt": 1,
          "choices": {
            "1": "Evenly distributed",
            "-1": "Biased towards the outside"
          }
        },
        {
          "type": "choices",
          "name": "collisions",
          "title": "Collision detection",
          "description": "Whether/how to handle bullet collision detection. NOTE: If you select NONE, this entity will be very cheap to use, but all bullets will stop short at their target's position in space and there will be no impact effects. Normal collision detection does the same things NPCs do when they fire their guns (except harm anything).",
          "deflt": 0,
          "choices": {
            "0": "None. Cheap for performance.",
            "1": "Normal collision detection."
          }
        },
        {
          "type": "choices",
          "name": "shootsound",
          "title": "Shoot Sound",
          "description": "Gunfire sound to make",
          "deflt": "Weapon_AR2.NPC_Single",
          "choices": {
            "Weapon_AR2.NPC_Single": "AR2",
            "Weapon_SMG1.NPC_Single": "SMG1"
          }
        },
        {
          "type": "choices",
          "name": "tracertype",
          "title": "Tracer",
          "description": "Type of tracer to display",
          "deflt": "AR2TRACER",
          "choices": {
            "Tracer": "Default",
            "AR2TRACER": "AR2"
          }
        }
      ]
    },
    {
      "name": "env_headcrabcanister",
      "type": "PointClass",
      "description": "Headcrab canister",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "Angles",
            "Targetname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "DamageRadius"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/props_combine/headcrabcannister01b.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "No Impact Sound",
          "value": 1,
          "enabled": false
        },
        {
          "title": "No Launch Sound",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Start Impacted",
          "value": 4096,
          "enabled": false
        },
        {
          "title": "Land at initial position",
          "value": 8192,
          "enabled": false
        },
        {
          "title": "Wait for input to open",
          "value": 16384,
          "enabled": false
        },
        {
          "title": "Wait for input to spawn headcrabs",
          "value": 32768,
          "enabled": false
        },
        {
          "title": "No smoke",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "No shake",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Remove on impact",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "No impact effects",
          "value": 524288,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "HeadcrabType",
          "title": "Which headcrab to spawn?",
          "deflt": 0,
          "choices": {
            "0": "Normal headcrabs",
            "1": "Fast Headcrabs",
            "2": "Poison Headcrabs"
          }
        },
        {
          "type": "integer",
          "name": "HeadcrabCount",
          "title": "Headcrab count",
          "description": "Number of headcrabs to spawn on impact",
          "deflt": 6
        },
        {
          "type": "float",
          "name": "FlightSpeed",
          "title": "Flight Speed",
          "description": "Speed to fly through the air",
          "deflt": 3000
        },
        {
          "type": "float",
          "name": "FlightTime",
          "title": "Flight Time",
          "description": "Time to fly through the air in seconds",
          "deflt": 5
        },
        {
          "type": "float",
          "name": "StartingHeight",
          "title": "Starting Height",
          "description": "Relative height from the landing position at which the canister should be launched. Positive values mean launch it above the impact point, negative values mean launch it below.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "MinSkyboxRefireTime",
          "title": "Min Refire Time",
          "description": "Min number of seconds before the cannister is refired. This will only work for cannisters placed in the skybox.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "MaxSkyboxRefireTime",
          "title": "Max Refire Time",
          "description": "Max number of seconds before the cannister is refired. This will only work for cannisters placed in the skybox.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "SkyboxCannisterCount",
          "title": "Cannister count",
          "description": "Number of cannisters to fire in the skybox (0 means fire continuously, forever).",
          "deflt": 1
        },
        {
          "type": "float",
          "name": "Damage",
          "title": "Impact damage",
          "description": "Max damage the canister applies on impact",
          "deflt": 150
        },
        {
          "type": "float",
          "name": "DamageRadius",
          "title": "Impact damage radius",
          "description": "Max radius of the impact damage for the canister",
          "deflt": 750
        },
        {
          "type": "float",
          "name": "SmokeLifetime",
          "title": "Smoke Duration",
          "description": "Duration that the canister smokes.  -1 means always smoke.",
          "deflt": 30
        },
        {
          "type": "target_destination",
          "name": "LaunchPositionName",
          "title": "Launch Position Name",
          "description": "If the canister should launch to it's origin from another point within the world, this should specify an info_target at the launch origin.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "FireCanister",
          "description": "Fire the canister",
          "type": "void"
        },
        {
          "name": "OpenCanister",
          "description": "Opens the canister (must be called after the OnImpacted output is fired)",
          "type": "void"
        },
        {
          "name": "SpawnHeadcrabs",
          "description": "Spawns headcrabs (must be called after the OnImpacted output is fired and after OpenCanister is triggered, if the Wait for Input to open spawnflag is checked.)",
          "type": "void"
        },
        {
          "name": "StopSmoke",
          "description": "Stops the smoke if it's on",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnLaunched",
          "description": "Fired when the canister is launched",
          "type": "string"
        },
        {
          "name": "OnImpacted",
          "description": "Fires when canister hits the ground",
          "type": "void"
        },
        {
          "name": "OnOpened",
          "description": "Fires when canister has finished opening",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_vortigaunt",
      "type": "NPCClass",
      "description": "Vortigaunt",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "TalkNPC",
            "PlayerCompanion"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/vortigaunt.mdl"
        },
        {
          "type": "choices",
          "name": "ArmorRechargeEnabled",
          "title": "Allow Armor Recharging",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "HealthRegenerateEnabled",
          "title": "Regenerate Health",
          "description": "Whether or not the vortigaunt will recover his own health over time like vital allies, while in combat",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "EnableArmorRecharge",
          "description": "Allow armor recharging on players",
          "type": "void"
        },
        {
          "name": "DisableArmorRecharge",
          "description": "Do not allow armor recharging on players",
          "type": "void"
        },
        {
          "name": "ExtractBugbait",
          "description": "Causes the vortigaunt to extract bugbait from the named target passed in.",
          "type": "string"
        },
        {
          "name": "ChargeTarget",
          "description": "Force the vortigaunt to charge the named target.",
          "type": "string"
        },
        {
          "name": "EnableHealthRegeneration",
          "description": "Allow the vortigaunt to start regenerating his health over time, like vital allies.",
          "type": "void"
        },
        {
          "name": "DisableHealthRegeneration",
          "description": "Stop the vortigaunt from regenerating his health. (Default behavior)",
          "type": "void"
        },
        {
          "name": "TurnBlue",
          "description": "If true, turn blue. If false, turn green. (Episodic).",
          "type": "bool"
        },
        {
          "name": "TurnBlack",
          "description": "If true, turn black. If false, be seen. (Episodic).",
          "type": "bool"
        },
        {
          "name": "BeginCarryNPC",
          "description": "Begin to override our animations for 'carrying' an NPC. (Episodic)",
          "type": "void"
        },
        {
          "name": "EndCarryNPC",
          "description": "Stop overriding our animations for 'carrying' an NPC. (Episodic)",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFinishedExtractingBugbait",
          "description": "Fires when the vortigaunt's finished extracting bugbait from a target.",
          "type": "void"
        },
        {
          "name": "OnFinishedExtractingTauCannon",
          "description": "Fires when the vortigaunt's finished extracting the tau cannon from the jeep.",
          "type": "void"
        },
        {
          "name": "OnFinishedChargingTarget",
          "description": "Fires when the vortigaunt has finished charging a target.",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fires when a player +USEs the vortigaunt.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_spotlight",
      "type": "NPCClass",
      "description": "Spotlight",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        }
      ],
      "flags": [
        {
          "title": "Start Track On",
          "value": 65536,
          "enabled": true
        },
        {
          "title": "Start Light On",
          "value": 131072,
          "enabled": true
        },
        {
          "title": "No Dynamic Light",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Never Move",
          "value": 524288,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "health",
          "title": "Health",
          "deflt": 100
        },
        {
          "type": "integer",
          "name": "YawRange",
          "title": "YawRange",
          "deflt": 90
        },
        {
          "type": "integer",
          "name": "PitchMin",
          "title": "PitchMin",
          "deflt": 35
        },
        {
          "type": "integer",
          "name": "PitchMax",
          "title": "PitchMax",
          "deflt": 50
        },
        {
          "type": "integer",
          "name": "IdleSpeed",
          "title": "IdleSpeed",
          "deflt": 2
        },
        {
          "type": "integer",
          "name": "AlertSpeed",
          "title": "AlertSpeed",
          "deflt": 5
        },
        {
          "type": "integer",
          "name": "spotlightlength",
          "title": "SpotlightLength",
          "deflt": 500
        },
        {
          "type": "integer",
          "name": "spotlightwidth",
          "title": "SpotlightWidth",
          "deflt": 50
        },
        {
          "type": "color255",
          "name": "rendercolor",
          "title": "Color (R G B)",
          "deflt": "255 255 255"
        }
      ],
      "inputs": [
        {
          "name": "LightOn",
          "description": "LightOn",
          "type": "void"
        },
        {
          "name": "LightOff",
          "description": "LightOff",
          "type": "void"
        },
        {
          "name": "TrackOn",
          "description": "TrackOn",
          "type": "void"
        },
        {
          "name": "TrackOff",
          "description": "TrackOff",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnAlert",
          "description": "Fires when the spotlight alerted by sound",
          "type": "void"
        },
        {
          "name": "DetectedEnemy",
          "description": "Outputs enemy entity when spotlight finds and starts tracking enemy",
          "type": "string"
        },
        {
          "name": "LostEnemy",
          "description": "Outputs enemy entity when spotlight loses enemy that it's tracking, if enemy still exists",
          "type": "string"
        },
        {
          "name": "SquadDetectedEnemy",
          "description": "Outputs enemy entity when squad finds and starts tracking enemy",
          "type": "string"
        },
        {
          "name": "SquadLostEnemy",
          "description": "Outputs enemy entity when squad loses enemy that it's tracking, if entity still exists",
          "type": "string"
        },
        {
          "name": "LightPosition",
          "description": "Position of the end of the spotlight beam",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_strider",
      "type": "NPCClass",
      "description": "Strider",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "model",
          "title": "Model",
          "description": "Standard strider",
          "deflt": "models/combine_strider.mdl",
          "choices": {
            "models/combine_strider.mdl": "Standard strider",
            "models/combine_strider_vsdog.mdl": "The Strider that fights Dog"
          }
        },
        {
          "type": "choices",
          "name": "disablephysics",
          "title": "Disable physics (reduce CPU)",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "Can Stomp Player",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Minimal damage taken from NPCs (1 point per missile)",
          "value": 131072,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "SetMinigunTime",
          "description": "Time to shoot at any set minigun target",
          "type": "float"
        },
        {
          "name": "SetMinigunTarget",
          "description": "Strider will shoot minigun at this",
          "type": "string"
        },
        {
          "name": "DisableMinigun",
          "description": "Disables the minigun until further notice by the EnableMinigun input.",
          "type": "void"
        },
        {
          "name": "EnableMinigun",
          "description": "Enables the minigun if it was disabled by the DisableMinigun input.",
          "type": "void"
        },
        {
          "name": "SetCannonTarget",
          "description": "Strider will shoot cannon at this",
          "type": "string"
        },
        {
          "name": "FlickRagdoll",
          "description": "Strider will flick anyone he's skewered",
          "type": "void"
        },
        {
          "name": "StartPatrol",
          "description": "Start patrolling back and forth along the current track.",
          "type": "void"
        },
        {
          "name": "StopPatrol",
          "description": "Stop patrolling back and forth along the track. This will cause the helicopter to come to rest at the track which he's currently flying toward.",
          "type": "void"
        },
        {
          "name": "ChooseFarthestPathPoint",
          "description": "When tracking an enemy, choose the point on the path furthest from the enemy, but still in firing range",
          "type": "void"
        },
        {
          "name": "ChooseNearestPathPoint",
          "description": "When tracking an enemy, choose the point on the path nearest from the enemy",
          "type": "void"
        },
        {
          "name": "Crouch",
          "description": "Crouch down",
          "type": "void"
        },
        {
          "name": "CrouchInstantly",
          "description": "Crouch instantly. This makes the Strider pop to a crouch. Do not do this where players can observe.",
          "type": "void"
        },
        {
          "name": "Stand",
          "description": "Stand up from crouch",
          "type": "void"
        },
        {
          "name": "DisableCrouchWalk",
          "type": "void"
        },
        {
          "name": "EnableCrouchWalk",
          "type": "void"
        },
        {
          "name": "SetTargetPath",
          "description": "Set a path for the strider to patrol. The strider will first move to the closest point on the path",
          "type": "string"
        },
        {
          "name": "ClearTargetPath",
          "description": "Clear the strider patrol path",
          "type": "void"
        },
        {
          "name": "EnableAggressiveBehavior",
          "description": "Use aggressive behavior. Fire faster, more frequently",
          "type": "void"
        },
        {
          "name": "DisableAggressiveBehavior",
          "description": "Stop using aggressive behavior. (Revert to normal)",
          "type": "void"
        },
        {
          "name": "StopShootingMinigunForSeconds",
          "description": "Stop shooting the minigun for a period of time (specify seconds as parameter)",
          "type": "float"
        },
        {
          "name": "DisableCrouch",
          "description": "Prevent the Strider from crouching",
          "type": "void"
        },
        {
          "name": "DisableMoveToLOS",
          "description": "Prevent the Strider from seeking Line of Sight to target. (Hold position)",
          "type": "void"
        },
        {
          "name": "DisableCollisionWith",
          "description": "Disable collision with a given object.",
          "type": "string"
        },
        {
          "name": "EnableCollisionWith",
          "description": "Reenable collision with a given object.",
          "type": "string"
        },
        {
          "name": "ScaleGroundSpeed",
          "description": "Scale the movement speed of the strider",
          "type": "float"
        }
      ]
    },
    {
      "name": "npc_barnacle",
      "type": "NPCClass",
      "description": "Barnacle",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "BaseFadeProp"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Barnacle.mdl"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademindist"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademaxdist"
          ]
        }
      ],
      "flags": [
        {
          "title": "Cheap death",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Ambush Mode",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "RestDist",
          "title": "Rest Distance",
          "description": "Distance above the ground that the tongue should lie when the barnacle is at rest",
          "deflt": 16
        }
      ],
      "inputs": [
        {
          "name": "DropTongue",
          "description": "Drop tongue",
          "type": "void"
        },
        {
          "name": "SetDropTongueSpeed",
          "description": "Set Drop Tongue speed",
          "type": "integer"
        },
        {
          "name": "LetGo",
          "description": "Let go of anything I am holding.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnGrab",
          "description": "When I attach my tongue to something",
          "type": "string"
        },
        {
          "name": "OnRelease",
          "description": "When I let go of something",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_combinegunship",
      "type": "NPCClass",
      "description": "Combine Gunship",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHelicopter"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/gunship.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "OmniscientOn",
          "description": "Gunship knows target's location even when target is out of sight or behind cover",
          "type": "void"
        },
        {
          "name": "OmniscientOff",
          "description": "Gunship relies on normal sight functions to locate target",
          "type": "void"
        },
        {
          "name": "BlindfireOn",
          "description": "Gunship will fire at an unseen target, attempting to punch through to them",
          "type": "void"
        },
        {
          "name": "BlindfireOff",
          "description": "Gunship only fires at viusible target",
          "type": "void"
        },
        {
          "name": "SetPenetrationDepth",
          "description": "Set penetration depth of bullets",
          "type": "float"
        },
        {
          "name": "SetDockingBBox",
          "description": "Shrink Bounding Box",
          "type": "void"
        },
        {
          "name": "SetNormalBBox",
          "description": "Set Bounding Box to normal size",
          "type": "void"
        },
        {
          "name": "EnableGroundAttack",
          "description": "Allow the gunship to use its ground attack",
          "type": "void"
        },
        {
          "name": "DisableGroundAttack",
          "description": "Don't allow the gunship to use its ground attack",
          "type": "void"
        },
        {
          "name": "DoGroundAttack",
          "description": "Causes the gunship to execute its ground attack",
          "type": "string"
        },
        {
          "name": "BecomeInvulnerable",
          "description": "Stops the gunship from taking damage, but still makes sounds effects",
          "type": "void"
        },
        {
          "name": "BecomeVulnerable",
          "description": "Makes the gunship act normally to damage",
          "type": "void"
        },
        {
          "name": "EnableRotorSound",
          "description": "Turns on rotor sounds",
          "type": "void"
        },
        {
          "name": "DisableRotorSound",
          "description": "Turns off rotor sounds",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFireCannon",
          "description": "Fires when the gunship fires a cannon round",
          "type": "void"
        },
        {
          "name": "OnFirstDamage",
          "description": "Fired when the first damage is done to the gunship.",
          "type": "void"
        },
        {
          "name": "OnSecondDamage",
          "description": "Fired when the second damage is done to the gunship.",
          "type": "void"
        },
        {
          "name": "OnThirdDamage",
          "description": "Fired when the third damage is done to the gunship.",
          "type": "void"
        },
        {
          "name": "OnFourthDamage",
          "description": "Fired when the fourth damage is done to the gunship.",
          "type": "void"
        }
      ],
      "flags": [
        {
          "title": "No ground attack",
          "value": 4096,
          "enabled": false
        }
      ]
    },
    {
      "name": "info_target_helicopter_crash",
      "type": "PointClass",
      "description": "Helicopter Crash Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ]
    },
    {
      "name": "info_target_gunshipcrash",
      "type": "PointClass",
      "description": "Gunship Crash Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable the crash target.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable the crash target.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_combinedropship",
      "type": "NPCClass",
      "description": "Combine Dropship",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHelicopter"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_dropship.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Wait for input before dropoff",
          "value": 32768,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "LandTarget",
          "title": "Land target name"
        },
        {
          "type": "float",
          "name": "GunRange",
          "title": "Crate Gun Range",
          "description": "If the dropship's carrying a crate with a gun on it, it'll only shoot targets within this range.",
          "deflt": 2048
        },
        {
          "type": "target_destination",
          "name": "RollermineTemplate",
          "title": "Name of Rollermine Template",
          "description": "If this dropship drops any rollermines due to the 'DropMines' input being fired, it will use this template for the rollermines it creates. If left blank, ordinary rollermines will be dropped.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate",
          "title": "Name of Template NPC 1"
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate2",
          "title": "Name of Template NPC 2"
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate3",
          "title": "Name of Template NPC 3"
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate4",
          "title": "Name of Template NPC 4"
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate5",
          "title": "Name of Template NPC 5"
        },
        {
          "type": "target_destination",
          "name": "NPCTemplate6",
          "title": "Name of Template NPC 6"
        },
        {
          "type": "target_destination",
          "name": "Dustoff1",
          "title": "Name of dustoff point for NPC 1"
        },
        {
          "type": "target_destination",
          "name": "Dustoff2",
          "title": "Name of dustoff point for NPC 2"
        },
        {
          "type": "target_destination",
          "name": "Dustoff3",
          "title": "Name of dustoff point for NPC 3"
        },
        {
          "type": "target_destination",
          "name": "Dustoff4",
          "title": "Name of dustoff point for NPC 4"
        },
        {
          "type": "target_destination",
          "name": "Dustoff5",
          "title": "Name of dustoff point for NPC 5"
        },
        {
          "type": "target_destination",
          "name": "Dustoff6",
          "title": "Name of dustoff point for NPC 6"
        },
        {
          "type": "target_destination",
          "name": "APCVehicleName",
          "title": "Name of the APC to drop"
        },
        {
          "type": "choices",
          "name": "Invulnerable",
          "title": "Invulnerable",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "CrateType",
          "title": "Crate Type",
          "deflt": 2,
          "choices": {
            "0": "Roller Hopper",
            "1": "Soldier Crate",
            "2": "None",
            "-3": "Jeep (No crate)",
            "-2": "APC (No crate)",
            "-1": "Strider (No crate)"
          }
        }
      ],
      "inputs": [
        {
          "name": "LandLeaveCrate",
          "description": "Land, drop soldiers, and leave the crate behind. Specify the number of troops to drop off in the parameter.",
          "type": "integer"
        },
        {
          "name": "LandTakeCrate",
          "description": "Land, drop soldiers, but don't leave the crate behind. Specify the number of troops to drop off in the parameter.",
          "type": "integer"
        },
        {
          "name": "DropMines",
          "description": "Drop Rollermines. Specify the number of mines to drop in the parameter.",
          "type": "integer"
        },
        {
          "name": "DropStrider",
          "description": "Drop the Strider you're carrying. Now.",
          "type": "void"
        },
        {
          "name": "DropAPC",
          "description": "Drop the APC you're carrying. Now.",
          "type": "void"
        },
        {
          "name": "Hover",
          "description": "Hover over a named target entity until told to fly to a path.",
          "type": "target_destination"
        },
        {
          "name": "Pickup",
          "description": "Pickup an entity.",
          "type": "string"
        },
        {
          "name": "SetLandTarget",
          "description": "Set my land target name.",
          "type": "string"
        },
        {
          "name": "SetGunRange",
          "description": "Set my crate gun's range.",
          "type": "float"
        },
        {
          "name": "EnableRotorSound",
          "description": "Turns on rotor sounds",
          "type": "void"
        },
        {
          "name": "DisableRotorSound",
          "description": "Turns off rotor sounds",
          "type": "void"
        },
        {
          "name": "StopWaitingForDropoff",
          "description": "Stop waiting for the dropoff. Dropoff as soon as possible.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFinishedDropoff",
          "description": "Fires when the dropship has finished a dropoff.",
          "type": "void"
        },
        {
          "name": "OnFinishedPickup",
          "description": "Fires when the dropship has finished a pickup.",
          "type": "void"
        },
        {
          "name": "OnCrateShotDownBeforeDropoff",
          "description": "Fires when the container was shot down before it dropped off soldiers. The parameter contains the number of soldiers that weren't successfully dropped off.",
          "type": "float"
        },
        {
          "name": "OnCrateShotDownAfterDropoff",
          "description": "Fires when the container was shot down after it dropped off soldiers.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_helicopter",
      "type": "NPCClass",
      "description": "Helicopter",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseHelicopter"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_helicopter.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Loud rotor wash sound",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Electrical drone",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Helicopter lights",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Ignore avoid spheres+boxes",
          "value": 524288,
          "enabled": false
        },
        {
          "title": "More aggressive attacks",
          "value": 1048576,
          "enabled": false
        },
        {
          "title": "Cast long shadow",
          "value": 2097152,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "InitialSpeed",
          "title": "Initial Speed",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "GracePeriod",
          "title": "Grace Period",
          "description": "Time in seconds the helicopter has to see the player before he starts shooting",
          "deflt": "2.0"
        },
        {
          "type": "float",
          "name": "PatrolSpeed",
          "title": "Patrol Speed",
          "description": "Speed at which the helicopter moves if he has no enemy.",
          "deflt": "0"
        },
        {
          "type": "choices",
          "name": "noncombat",
          "title": "Non-combat (Do not precache gibs)",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "GunOn",
          "description": "GunOn",
          "type": "void"
        },
        {
          "name": "GunOff",
          "description": "GunOff",
          "type": "void"
        },
        {
          "name": "MissileOn",
          "description": "MissileOn",
          "type": "void"
        },
        {
          "name": "MissileOff",
          "description": "MissileOff",
          "type": "void"
        },
        {
          "name": "EnableRotorWash",
          "description": "Turns on rotor wash effects",
          "type": "void"
        },
        {
          "name": "DisableRotorWash",
          "description": "Turns off rotor wash effects",
          "type": "void"
        },
        {
          "name": "EnableRotorSound",
          "description": "Turns on rotor sounds",
          "type": "void"
        },
        {
          "name": "DisableRotorSound",
          "description": "Turns off rotor sounds",
          "type": "void"
        },
        {
          "name": "StartBombingVehicle",
          "description": "Starts the chopper leading enemy vehicles and dropping bombs on them.",
          "type": "void"
        },
        {
          "name": "StartTrailingVehicle",
          "description": "Starts the chopper trailing enemy vehicles and shooting at them.",
          "type": "void"
        },
        {
          "name": "StartDefaultBehavior",
          "description": "Starts the chopper in the mode where he always stops at nav points instead of stopping anywhere in between nav points.",
          "type": "void"
        },
        {
          "name": "StartAlwaysLeadingVehicle",
          "description": "Starts the chopper *always* leading enemy vehicles (regardless of how they are moving w/respect to the path) and dropping bombs on them. This mode is different from StartBombingVehicle in that it never uses the machine gun.",
          "type": "void"
        },
        {
          "name": "StartSprinkleBehavior",
          "description": "Starts the chopper dropping bombs randomly + shooting at the player.",
          "type": "void"
        },
        {
          "name": "StartBullrushBehavior",
          "description": "Starts the chopper bullrushing the player.",
          "type": "void"
        },
        {
          "name": "SetHealthFraction",
          "description": "Sets the chopper health as a percentage of max health",
          "type": "float"
        },
        {
          "name": "EnableDeadlyShooting",
          "description": "Starts the chopper being deadly to on-foot players",
          "type": "void"
        },
        {
          "name": "DisableDeadlyShooting",
          "description": "Stops the chopper being deadly to on-foot players",
          "type": "void"
        },
        {
          "name": "StartNormalShooting",
          "description": "The chopper will fire in short bursts. Good for on-foot experiences",
          "type": "void"
        },
        {
          "name": "StartLongCycleShooting",
          "description": "The chopper fires in long bursts",
          "type": "void"
        },
        {
          "name": "StartContinuousShooting",
          "description": "The chopper fires continuously.",
          "type": "void"
        },
        {
          "name": "StartFastShooting",
          "description": "The chopper fires normal bursts, but does not 'charge up' the gun. Fires immediately.",
          "type": "void"
        },
        {
          "name": "ResetIdleTime",
          "description": "Allows the helicopter to fire immediately if he's not in the middle of charging or firing",
          "type": "void"
        },
        {
          "name": "SetAngles",
          "description": "Instantly snaps the orientation of the helicopter (Pitch Yaw Roll)",
          "type": "string"
        },
        {
          "name": "DropBomb",
          "description": "Immediately drops a bomb based on normal bomb dropping rules",
          "type": "void"
        },
        {
          "name": "DropBombStraightDown",
          "description": "Immediately drops a bomb directly downwards",
          "type": "void"
        },
        {
          "name": "DropBombAtTarget",
          "description": "Immediately drops a bomb directly at the target destination, but only if the player isn't right there",
          "type": "target_destination"
        },
        {
          "name": "DropBombAtTargetAlways",
          "description": "Immediately drops a bomb directly at the target destination, no matter whether it's fair or not.",
          "type": "target_destination"
        },
        {
          "name": "DropBombDelay",
          "description": "Add a delay before the next bomb is dropped",
          "type": "float"
        },
        {
          "name": "BecomeIndestructible",
          "description": "Makes the helicopter take no more damage",
          "type": "void"
        },
        {
          "name": "DisablePathVisibilityTests",
          "description": "When the helicopter moves, he will not check for visibility from the path_track to the enemy to cull out path_tracks",
          "type": "void"
        },
        {
          "name": "EnablePathVisibilityTests",
          "description": "When the helicopter moves, he will only move to path_tracks that have line-of-sight to the enemy",
          "type": "void"
        },
        {
          "name": "StartCarpetBombing",
          "description": "Starts the helicopter constantly dropping megabombs until StopCarpetBombing input",
          "type": "void"
        },
        {
          "name": "StopCarpetBombing",
          "description": "Stop the carpet bombing behavior",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnHealthChanged",
          "description": "Fires when the helicopter health changes. The integer is the percentage of health the chopper has from 0-100.",
          "type": "integer"
        },
        {
          "name": "OnShotDown",
          "description": "Fires the instant the helicopter is killed",
          "type": "void"
        }
      ]
    },
    {
      "name": "grenade_helicopter",
      "type": "PointClass",
      "description": "Helicopter bomb",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_helicopter/helicopter_bomb01.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Is a dud",
          "value": 65536,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "ExplodeIn",
          "description": "Tells the bomb to explode in X seconds.",
          "type": "float"
        }
      ],
      "outputs": [
        {
          "name": "OnPhysGunOnlyPickup",
          "description": "Fired when a player picks this object up WITH THE GRAVITY GUN. +USE pickups do not fire this output.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_heli_avoidsphere",
      "type": "PointClass",
      "description": "Helicopter avoidance sphere",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/env_firesource"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            255,
            0
          ]
        },
        {
          "name": "sphere",
          "values": [
            "radius"
          ]
        }
      ],
      "flags": [
        {
          "title": "Avoid the sphere above and below",
          "value": 65536,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "radius",
          "title": "Radius",
          "deflt": 128
        }
      ]
    },
    {
      "name": "npc_heli_avoidbox",
      "type": "SolidClass",
      "description": "Helicopter avoidance box",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Origin",
            "Angles",
            "Parentname"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            255,
            0
          ]
        }
      ],
      "flags": [
        {
          "title": "Avoid the box above and below",
          "value": 65536,
          "enabled": false
        }
      ]
    },
    {
      "name": "npc_heli_nobomb",
      "type": "SolidClass",
      "description": "Helicopter bombing suppressor",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Origin",
            "Angles",
            "Parentname"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            255,
            0
          ]
        }
      ]
    },
    {
      "name": "npc_fastzombie",
      "type": "NPCClass",
      "description": "Fast Zombie",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/fast.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "AttachToVehicle",
          "description": "Attach to a specified vehicle entity",
          "type": "string"
        }
      ]
    },
    {
      "name": "npc_fastzombie_torso",
      "type": "NPCClass",
      "description": "Fast Zombie Torso",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/Fast_torso.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_zombie",
      "type": "NPCClass",
      "description": "Zombie",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/Classic.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_zombie_torso",
      "type": "NPCClass",
      "description": "Zombie Torso",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/Classic_torso.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_zombine",
      "type": "NPCClass",
      "description": "Combine Soldier Zombie",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/zombie_soldier.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "StartSprint",
          "description": "Forces the zombine to sprint.",
          "type": "void"
        },
        {
          "name": "PullGrenade",
          "description": "Forces the zombine to pull a grenade.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_poisonzombie",
      "type": "NPCClass",
      "description": "A bloated, disgusting, fluid-spurting zombie created by a poison headcrab.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Zombie/Poison.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "crabcount",
          "title": "Crabs in nest",
          "deflt": 3,
          "choices": {
            "1": "1 Crab",
            "2": "2 Crabs",
            "3": "3 Crabs"
          }
        }
      ]
    },
    {
      "name": "npc_cscanner",
      "type": "NPCClass",
      "description": "City Scanner",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/combine_scanner.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "No Dynamic Light",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Strider Scout Scanner",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "spotlightlength",
          "title": "SpotlightLength",
          "deflt": 500
        },
        {
          "type": "integer",
          "name": "spotlightwidth",
          "title": "SpotlightWidth",
          "deflt": 50
        },
        {
          "type": "choices",
          "name": "spotlightdisabled",
          "title": "SpotlightDisabled",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "ShouldInspect",
          "title": "Should inspect",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "OnlyInspectPlayers",
          "title": "Only Inspect Players",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "NeverInspectPlayers",
          "title": "Never Inspect Players",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "DisableSpotlight",
          "description": "DisableSpotlight",
          "type": "void"
        },
        {
          "name": "InspectTargetPhoto",
          "description": "Tells the scanner to photograph the given entity, named by classname or by target name. !activator or !player works here also.",
          "type": "string"
        },
        {
          "name": "InspectTargetSpotlight",
          "description": "Tells the scanner to spotlight the given entity, named by classname or by target name. !activator or !player works here also.",
          "type": "string"
        },
        {
          "name": "InputSetFlightSpeed",
          "description": "Sets the flight speed of the scanner",
          "type": "integer"
        },
        {
          "name": "InputShouldInspect",
          "description": "Set whether should inspect or not",
          "type": "integer"
        },
        {
          "name": "SetFollowTarget",
          "description": "Set target to follow until told otherwise",
          "type": "string"
        },
        {
          "name": "ClearFollowTarget",
          "description": "Stop following our target",
          "type": "void"
        },
        {
          "name": "SetDistanceOverride",
          "description": "Override the distance the scanner will attempt to keep between inspection targets and itself",
          "type": "float"
        },
        {
          "name": "DeployMine",
          "description": "Drop landmine (if carrying one)",
          "type": "void"
        },
        {
          "name": "EquipMine",
          "description": "Equip with landmine",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnPhotographPlayer",
          "description": "Fired any time the scanner takes a picture of the player.",
          "type": "void"
        },
        {
          "name": "OnPhotographNPC",
          "description": "Fired any time the scanner takes a picture of an NPC.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_clawscanner",
      "type": "NPCClass",
      "description": "Claw Scanner",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/shield_scanner.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "No Dynamic Light",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Strider Scout Scanner",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "spotlightlength",
          "title": "SpotlightLength",
          "deflt": 500
        },
        {
          "type": "integer",
          "name": "spotlightwidth",
          "title": "SpotlightWidth",
          "deflt": 50
        },
        {
          "type": "choices",
          "name": "spotlightdisabled",
          "title": "SpotlightDisabled",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "ShouldInspect",
          "title": "Should inspect",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "OnlyInspectPlayers",
          "title": "Only Inspect Players",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "NeverInspectPlayers",
          "title": "Never Inspect Players",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "DisableSpotlight",
          "description": "DisableSpotlight",
          "type": "void"
        },
        {
          "name": "InspectTargetPhoto",
          "description": "Tells the scanner to photograph the given entity, named by classname or by target name. !activator or !player works here also.",
          "type": "string"
        },
        {
          "name": "InspectTargetSpotlight",
          "description": "Tells the scanner to spotlight the given entity, named by classname or by target name. !activator or !player works here also.",
          "type": "string"
        },
        {
          "name": "InputSetFlightSpeed",
          "description": "Sets the flight speed of the scanner",
          "type": "integer"
        },
        {
          "name": "InputShouldInspect",
          "description": "Set whether should inspect or not",
          "type": "integer"
        },
        {
          "name": "SetFollowTarget",
          "description": "Set target to follow until told otherwise",
          "type": "string"
        },
        {
          "name": "ClearFollowTarget",
          "description": "Stop following our target",
          "type": "void"
        },
        {
          "name": "SetDistanceOverride",
          "description": "Override the distance the scanner will attempt to keep between inspection targets and itself",
          "type": "float"
        },
        {
          "name": "DeployMine",
          "description": "Drop landmine (if carrying one)",
          "type": "void"
        },
        {
          "name": "EquipMine",
          "description": "Equip with landmine",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnPhotographPlayer",
          "description": "Fired any time the scanner takes a picture of the player.",
          "type": "void"
        },
        {
          "name": "OnPhotographNPC",
          "description": "Fired any time the scanner takes a picture of an NPC.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_manhack",
      "type": "NPCClass",
      "description": "Manhack",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "AlyxInteractable"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/manhack.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Start packed up (folded and engine off)",
          "value": 65536,
          "enabled": false
        },
        {
          "title": "Don't use any damage effects",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Use Air Nodes",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "No Danger Sounds",
          "value": 1048576,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "DisableSwarm",
          "description": "Disable the manhack swarm behavior.",
          "type": "void"
        },
        {
          "name": "Unpack",
          "description": "Causes the manhack to stop being packed up.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "ignoreclipbrushes",
          "title": "Ignore NPC Clip brushes",
          "deflt": "0",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ]
    },
    {
      "name": "npc_mortarsynth",
      "type": "NPCClass",
      "description": "Mortar Synth",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/mortarsynth.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_metropolice",
      "type": "NPCClass",
      "description": "MetroPolice",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "RappelNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Police.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "weapon_pistol",
          "choices": {
            "0": "Nothing",
            "weapon_pistol": "Pistol",
            "weapon_smg1": "SMG1",
            "weapon_stunstick": "Stun Stick",
            "weapon_shotgun": "Shotgun"
          }
        },
        {
          "type": "choices",
          "name": "manhacks",
          "title": "Number of Manhacks",
          "deflt": 0,
          "choices": {
            "0": "None",
            "1": "1",
            "2": "2"
          }
        },
        {
          "type": "choices",
          "name": "weapondrawn",
          "title": "Pistol starts drawn",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "Simple cops",
          "value": 131072,
          "enabled": false
        },
        {
          "title": "Rappel (UNCHECK THIS IF IT IS CHECKED!)",
          "value": 262144,
          "enabled": false
        },
        {
          "title": "Always stitch",
          "value": 524288,
          "enabled": false
        },
        {
          "title": "No chatter",
          "value": 1048576,
          "enabled": false
        },
        {
          "title": "Arrest enemies",
          "value": 2097152,
          "enabled": false
        },
        {
          "title": "No far stitching",
          "value": 4194304,
          "enabled": false
        },
        {
          "title": "Prevent manhack toss",
          "value": 8388608,
          "enabled": false
        },
        {
          "title": "Allowed to respond to thrown objects",
          "value": 16777216,
          "enabled": false
        },
        {
          "title": "Mid-range attacks (halfway between normal + long-range)",
          "value": 33554432,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "EnableManhackToss",
          "description": "Enables manhack toss (which had been disabled by the spawnflag)",
          "type": "void"
        },
        {
          "name": "SetPoliceGoal",
          "description": "Causes the NPC to police the area defined by an ai_goal_police",
          "type": "string"
        },
        {
          "name": "ActivateBaton",
          "description": "Set the baton to active",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnStunnedPlayer",
          "description": "Fires when the player is hit by a stunstick by this NPC.",
          "type": "void"
        },
        {
          "name": "OnCupCopped",
          "description": "Fires if the player hits me with the cupcop can. ONLY use for x360 achievement.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_crabsynth",
      "type": "NPCClass",
      "description": "Crab Synth",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Synth.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_monk",
      "type": "NPCClass",
      "description": "Monk",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/Monk.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "weapon_annabelle",
          "choices": {
            "0": "Nothing",
            "weapon_annabelle": "Annabelle",
            "weapon_smg1": "SMG1",
            "weapon_ar2": "AR2",
            "weapon_stunstick": "Stun Stick",
            "weapon_crowbar": "Crow Bar",
            "weapon_shotgun": "Shotgun",
            "weapon_beerbottle": "Beer Bottle",
            "weapon_beerbottle2": "Beer Bottle2",
            "weapon_rpg": "RPG"
          }
        },
        {
          "type": "choices",
          "name": "HasGun",
          "title": "Has Gun",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "PerfectAccuracyOn",
          "description": "Make every shot at a zombie a headshot",
          "type": "void"
        },
        {
          "name": "PerfectAccuracyOff",
          "description": "Return to normal accuracy",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_alyx",
      "type": "NPCClass",
      "description": "Alyx",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC",
            "Parentname",
            "PlayerCompanion"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/alyx.mdl"
        },
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "weapon_alyxgun",
          "choices": {
            "0": "Nothing",
            "weapon_alyxgun": "Alyx Gun",
            "weapon_shotgun": "Shotgun"
          }
        },
        {
          "type": "choices",
          "name": "DontPickupWeapons",
          "title": "Prevent picking up weapons?",
          "description": "If yes, this NPC will NOT be allowed to pick up weapons they find on the ground.",
          "deflt": "1",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "ShouldHaveEMP",
          "title": "Should alyx have her EMP?",
          "deflt": "1",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "AllowInteraction",
          "description": "Allow Alyx's 'hacking' AI to run.",
          "type": "void"
        },
        {
          "name": "DisallowInteraction",
          "description": "Disallow Alyx's 'hacking' AI.",
          "type": "void"
        },
        {
          "name": "AllowDarknessSpeech",
          "description": "Enables or disables Alyx's darkness speech ('where are you', etc).",
          "type": "bool"
        },
        {
          "name": "SetAnimLockedEntity",
          "description": "Sets Alyx to take her animation and cycle position from another entity.",
          "type": "string"
        },
        {
          "name": "ClearAnimLockedEntity",
          "description": "Stops Alyx from taking her animation locking from another character.",
          "type": "void"
        },
        {
          "name": "GiveEMP",
          "description": "Gives or removes the EMP tool.",
          "type": "bool"
        },
        {
          "name": "EnterVehicle",
          "description": "Make Alyx enter the vehicle specified by name.",
          "type": "string"
        },
        {
          "name": "EnterVehicleImmediately",
          "description": "Make Alyx enter the vehicle specified by name immediately via teleportation.",
          "type": "string"
        },
        {
          "name": "ExitVehicle",
          "description": "Make Alyx exit the vehicle she's in.",
          "type": "void"
        },
        {
          "name": "CancelEnterVehicle",
          "description": "Stops Alyx from trying to enter the vehicle if she's outside of it.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFinishInteractWithObject",
          "description": "Fires when Alyx finishes interacting with an object (usually hacking it).",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fires when a player +USEs Alyx.",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fires when a player +USEs Alyx",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_operator",
      "type": "PointClass",
      "description": "Indicates items in the world that some NPCs may operate upon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "EnableDisable"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor to affect",
          "description": "NPC that should perform this operation",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "target",
          "title": "Position entity",
          "description": "Name of the entity that the NPC should move to in order to perform the operation.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "contexttarget",
          "title": "Context target",
          "description": "(Optional) Name of an entity that the operator will use within context.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "state",
          "title": "Initial State",
          "deflt": 0,
          "choices": {
            "0": "Not ready (closed, locked, etc)",
            "1": "Ready (open and accessible)"
          }
        },
        {
          "type": "choices",
          "name": "moveto",
          "title": "How should NPC approach?",
          "deflt": 1,
          "choices": {
            "0": "DO NOT USE THIS SETTING",
            "1": "Walk",
            "2": "Run"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin operating on the object",
          "type": "void"
        },
        {
          "name": "SetStateReady",
          "description": "Set the object's state to READY. Fire this input when the object has been unlocked/opened or otherwise made ready for interaction.",
          "type": "void"
        },
        {
          "name": "SetStateFinished",
          "description": "Fire this input when the NPC has completed the interaction with this object.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnBeginApproach",
          "description": "Fired when the NPC begins to approach the position",
          "type": "void"
        },
        {
          "name": "OnMakeReady",
          "description": "Make the item ready to operate",
          "type": "void"
        },
        {
          "name": "OnBeginOperating",
          "description": "Fired when the NPC is ready to operate",
          "type": "void"
        },
        {
          "name": "OnFinished",
          "description": "The item is done",
          "type": "void"
        }
      ]
    },
    {
      "name": "info_darknessmode_lightsource",
      "type": "PointClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "EnableDisable"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "LightRadius"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "LightRadius",
          "title": "Light Radius",
          "description": "The radius around this lightsource in which Alyx will be able to see enemies.",
          "deflt": "256.0"
        }
      ]
    },
    {
      "name": "npc_kleiner",
      "type": "NPCClass",
      "description": "Kleiner",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/kleiner.mdl"
        }
      ]
    },
    {
      "name": "npc_eli",
      "type": "NPCClass",
      "description": "Eli Vance",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC",
            "Parentname"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/eli.mdl"
        }
      ]
    },
    {
      "name": "npc_magnusson",
      "type": "NPCClass",
      "description": "Magnusson",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/magnusson.mdl"
        }
      ]
    },
    {
      "name": "npc_breen",
      "type": "NPCClass",
      "description": "Dr Breen",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/breen.mdl"
        }
      ],
      "flags": [
        {
          "title": "Ignore speech semaphore",
          "value": 65536,
          "enabled": false
        }
      ]
    },
    {
      "name": "npc_mossman",
      "type": "NPCClass",
      "description": "Dr Mossman",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/mossman.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_gman",
      "type": "NPCClass",
      "description": "The G-Man",
      "parameters": [
        {
          "name": "base",
          "values": [
            "TalkNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/gman.mdl"
          ]
        }
      ]
    },
    {
      "name": "npc_dog",
      "type": "NPCClass",
      "description": "d0g",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/dog.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "SetPickupTarget",
          "description": "Sets the target entity for dog to pickup.",
          "type": "string"
        },
        {
          "name": "StartCatchThrowBehavior",
          "description": "Tells d0g to start playing with the player. You can pass in the name of the object you want him to play with otherwise he'll find the closes phys_object.",
          "type": "string"
        },
        {
          "name": "StopCatchThrowBehavior",
          "description": "Stop the catch and throw behavior.",
          "type": "string"
        },
        {
          "name": "PlayerPickupObject",
          "description": "Tells d0g the Gravity Gun just picked up an object.",
          "type": "void"
        },
        {
          "name": "StartWaitAndCatch",
          "description": "Tells d0g to wait for the player to throw an object at him.",
          "type": "void"
        },
        {
          "name": "StopWaitAndCatch",
          "description": "Tells d0g to stop waiting for the player.",
          "type": "void"
        },
        {
          "name": "SetThrowArcModifier",
          "description": "Used to pass in a modifier for d0g's object flight arc.",
          "type": "float"
        },
        {
          "name": "SetThrowTarget",
          "description": "Set d0g's throw target (pass in !player if you want the player)",
          "type": "string"
        },
        {
          "name": "TurnBoneFollowersOff",
          "description": "Turn dog's bone followers off",
          "type": "void"
        },
        {
          "name": "TurnBoneFollowersOn",
          "description": "Turn dog's bone followers on",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnDogThrow",
          "description": "Fires when dog throws an object.",
          "type": "void"
        },
        {
          "name": "OnDogPickup",
          "description": "Fires when dog picks up an object.",
          "type": "void"
        },
        {
          "name": "OnDogCatch",
          "description": "Fires when dog catches an object.",
          "type": "void"
        }
      ]
    },
    {
      "name": "monster_generic",
      "type": "PointClass",
      "description": "Generic Script NPC",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "RenderFields",
            "Shadow"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "flags": [
        {
          "title": "Not solid",
          "value": 65536,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "Model"
        },
        {
          "type": "integer",
          "name": "body",
          "title": "Body",
          "deflt": 0
        }
      ]
    },
    {
      "name": "generic_actor",
      "type": "PointClass",
      "description": "Generic Actor NPC",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "Parentname",
            "RenderFields",
            "Shadow"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "Model"
        },
        {
          "type": "choices",
          "name": "hull_name",
          "title": "Hull type",
          "deflt": "Human",
          "choices": {
            "HUMAN_HULL": "Human",
            "WIDE_HUMAN_HULL": "Wide",
            "TINY_HULL": "Tiny",
            "MEDIUM_HULL": "Medium",
            "LARGE_HULL": "Large"
          }
        }
      ]
    },
    {
      "name": "cycler_actor",
      "type": "PointClass",
      "description": "Actor Cycler",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseNPC",
            "RenderFields",
            "Shadow"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "Model"
        },
        {
          "type": "string",
          "name": "Sentence",
          "title": "Sentence Group",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Alpha",
          "description": "Set Alpha Value",
          "type": "integer"
        }
      ]
    },
    {
      "name": "npc_maker",
      "type": "PointClass",
      "description": "NPC Maker",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Angles",
            "BaseNPCMaker"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/npc_maker.vmt"
          ]
        }
      ],
      "flags": [
        {
          "title": "Fade Corpse",
          "value": 16,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "npcclass",
          "name": "NPCType",
          "title": "Class name of spawned NPC"
        },
        {
          "type": "string",
          "name": "NPCTargetname",
          "title": "Childrens' Name"
        },
        {
          "type": "string",
          "name": "NPCSquadname",
          "title": "Childrens' Squad Name"
        },
        {
          "type": "string",
          "name": "NPCHintGroup",
          "title": "Childrens' Hint Group"
        },
        {
          "type": "choices",
          "name": "additionalequipment",
          "title": "Weapons",
          "deflt": "0",
          "choices": {
            "0": "Nothing",
            "weapon_pistol": "Pistol",
            "weapon_ar2": "AR2",
            "weapon_shotgun": "Shotgun",
            "weapon_smg1": "SMG1",
            "weapon_stunstick": "Stun Stick",
            "weapon_annabelle": "Grigori's Shotgun"
          }
        }
      ]
    },
    {
      "name": "npc_antlion_template_maker",
      "type": "PointClass",
      "description": "Antlion Template Maker",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Angles",
            "BaseNPCMaker"
          ]
        },
        {
          "name": "size",
          "values": [
            -8,
            -8,
            -8,
            8,
            8,
            8
          ]
        },
        {
          "name": "color",
          "values": [
            0,
            0,
            255
          ]
        }
      ],
      "flags": [
        {
          "title": "Random spawn node",
          "value": 1024,
          "enabled": false
        },
        {
          "title": "Try to spawn close to the current target",
          "value": 2048,
          "enabled": false
        },
        {
          "title": "Pick a random fight target",
          "value": 4096,
          "enabled": false
        },
        {
          "title": "Try to play blocked effects near the player",
          "value": 8192,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "TemplateName",
          "title": "Name of template NPC"
        },
        {
          "type": "string",
          "name": "spawngroup",
          "title": "Spawn on Hint Group",
          "description": "If specified, children will spawn on a hint node from this group, nearest the target.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "spawnradius",
          "title": "Spawn radius",
          "description": "Target must be within this distance of any node in the hint group specified above. If the target is outside the radius, no NPC will spawn.",
          "deflt": 512
        },
        {
          "type": "string",
          "name": "spawntarget",
          "title": "Spawn target",
          "description": "Targetname of the entity to try and spawn near.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "fighttarget",
          "title": "Fight target",
          "description": "Targetname of an entity used as a goal for the children to fight to.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "followtarget",
          "title": "Follow target",
          "description": "Targetname of an entity used as a goal for the children to follow.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "vehicledistance",
          "title": "Vehicle Spawn Distance",
          "description": "This is a modifier of the current spawn distance. Spawn distance on a vehicle is based on speed, so this is just a modifier for it.",
          "deflt": "1"
        },
        {
          "type": "float",
          "name": "workerspawnrate",
          "title": "Random Worker Spawn Rate",
          "description": "Percentage chance that a spawned antlion will be a worker. (0 = no chance, 1 = 100% chance)",
          "deflt": "0"
        },
        {
          "type": "choices",
          "name": "ignorebugbait",
          "title": "Ignore Bugbait",
          "deflt": "0",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "integer",
          "name": "pool_start",
          "title": "Initial antlions in the pool.",
          "description": "Number of antlions in the pool at map start.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "pool_max",
          "title": "Max antlions in the pool.",
          "description": "Maximum number of antlions allowed in the pool. If 0, pool behavior is turned off.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "pool_regen_amount",
          "title": "Pool regen amount.",
          "description": "This is the number of antlions added to the pool every time it regenerates.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "pool_regen_time",
          "title": "Pool regen time.",
          "description": "Time interval between pool regeneration ticks.",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "createspores",
          "title": "Create Spore effect",
          "deflt": "0",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "SetFightTarget",
          "description": "Sets the target entity for children to fight to.",
          "type": "string"
        },
        {
          "name": "ClearFightTarget",
          "description": "Clears the fight target goal for this spawner.",
          "type": "void"
        },
        {
          "name": "SetFollowTarget",
          "description": "Sets the target entity for children to follow.",
          "type": "string"
        },
        {
          "name": "ClearFollowTarget",
          "description": "Clears the follow target goal for this spawner.",
          "type": "void"
        },
        {
          "name": "SetSpawnRadius",
          "description": "Sets the Spawn Radius.",
          "type": "float"
        },
        {
          "name": "AddToPool",
          "description": "Add the number of antlions specified in the parameter to the pool.",
          "type": "integer"
        },
        {
          "name": "SetMaxPool",
          "description": "Set the maximum number of antlions allowed in the pool at any time. Setting it to 0 turns off the pool behavior.",
          "type": "integer"
        },
        {
          "name": "SetPoolRegenAmount",
          "description": "Set the number of antlions added to the pool every time it regenerates.",
          "type": "integer"
        },
        {
          "name": "SetPoolRegenTime",
          "description": "Set the time interval between pool regeneration ticks.",
          "type": "float"
        },
        {
          "name": "ChangeDestinationGroup",
          "description": "Change the spawn group for this spawner.",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnAllBlocked",
          "description": "Fires when all the hint nodes are blocked.",
          "type": "void"
        }
      ]
    },
    {
      "name": "point_antlion_repellant",
      "type": "PointClass",
      "description": "Antlion Repellant",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "repelradius"
          ]
        },
        {
          "name": "color",
          "values": [
            0,
            0,
            255
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "repelradius",
          "title": "Repell radius",
          "description": "Antlions aren't allowed to be inside this radius",
          "deflt": 512
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable",
          "type": "void"
        }
      ]
    },
    {
      "name": "player_control",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -10,
            -10,
            -10,
            10,
            10,
            10
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            0,
            255
          ]
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Turns on",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Turns off",
          "type": "void"
        },
        {
          "name": "SetThrust",
          "description": "Set Thrust",
          "type": "string"
        },
        {
          "name": "SetSideThrust",
          "description": "Set Side Thrust",
          "type": "string"
        }
      ]
    },
    {
      "name": "BaseScripted",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            0,
            255
          ]
        },
        {
          "name": "sphere",
          "values": [
            "m_flRadius"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "m_iszEntity",
          "title": "Target NPC",
          "description": "The name or class name (such as 'npc_zombie') of an NPC to use for this script."
        },
        {
          "type": "string",
          "name": "m_iszIdle",
          "title": "Pre Action Idle Animation",
          "description": "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play before the action animation if the NPC must wait for the script to be triggered. Use 'Start on Spawn' flag or MoveToPosition input to play this idle animation.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "m_iszEntry",
          "title": "Entry Animation",
          "description": "The name of the sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play when the sequence starts, before transitioning to play the main action sequence.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "m_iszPlay",
          "title": "Action Animation",
          "description": "The name of the main sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "m_iszPostIdle",
          "title": "Post Action Idle Animation",
          "description": "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play after the action animation.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "m_iszCustomMove",
          "title": "Custom Move Animation",
          "description": "Used in conjunction with the 'Custom movement' setting for the 'Move to Position' property, specifies the sequence (such as 'crouch_run01') or activity (such as 'ACT_RUN') to use while moving to the scripted position.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "m_bLoopActionSequence",
          "title": "Loop Action Animation?",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "m_bSynchPostIdles",
          "title": "Synch Post Idles?",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "integer",
          "name": "m_flRadius",
          "title": "Search Radius (0=everywhere)",
          "description": "Radius to search within for an NPC to use. 0 searches everywhere.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "m_flRepeat",
          "title": "Repeat Rate ms",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "m_fMoveTo",
          "title": "Move to Position",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Walk",
            "2": "Run",
            "3": "Custom movement",
            "4": "Instantaneous",
            "5": "No - Turn to Face"
          }
        },
        {
          "type": "target_destination",
          "name": "m_iszNextScript",
          "title": "Next Script",
          "description": "The name of the script to run immediately after this script completes. The NPC will not return to AI between the two scripts."
        },
        {
          "type": "choices",
          "name": "m_bIgnoreGravity",
          "title": "Ignore Gravity on NPC during script",
          "description": "If this is set to 'Yes', the NPC will not be subject to gravity while playing this script.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "m_bDisableNPCCollisions",
          "title": "Disable NPC collisions during script",
          "description": "Useful for when NPCs playing scripts must interpenetrate while riding on trains, elevators, etc. This only disables collisions between the NPCs in the script and must be enabled on BOTH scripted_sequences.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "BeginSequence",
          "description": "Summons an NPC to act out the scripted sequence.",
          "type": "void"
        },
        {
          "name": "MoveToPosition",
          "description": "Summons an NPC to the script location. They will play their scripted idle (or ACT_IDLE if none is specified) until BeginSequence is triggered.",
          "type": "void"
        },
        {
          "name": "CancelSequence",
          "description": "Stops the scripted sequence. If fired after a sequence starts, this input will not take effect until the NPC finishes playing the scripted action animation.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnBeginSequence",
          "description": "Fires when the action animation begins playing.",
          "type": "void"
        },
        {
          "name": "OnEndSequence",
          "description": "Fires when the action animation completes.",
          "type": "void"
        },
        {
          "name": "OnCancelSequence",
          "description": "Fires when the sequence is cancelled.",
          "type": "void"
        },
        {
          "name": "OnCancelFailedSequence",
          "description": "Fires when the sequence is cancelled without ever playing (OnCancelSequence will also fire).",
          "type": "void"
        },
        {
          "name": "OnScriptEvent01",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 1 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent02",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 2 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent03",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 3 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent04",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 4 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent05",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 5 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent06",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 6 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent07",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 7 } in the QC.",
          "type": "void"
        },
        {
          "name": "OnScriptEvent08",
          "description": "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 8 } in the QC.",
          "type": "void"
        }
      ]
    },
    {
      "name": "scripted_sentence",
      "type": "PointClass",
      "description": "Scripted Sentence",
      "parameters": [
        {
          "name": "sphere",
          "values": []
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/scripted_sentence.vmt"
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "flags": [
        {
          "title": "Fire Once",
          "value": 1,
          "enabled": true
        },
        {
          "title": "Followers Only",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Interrupt Speech",
          "value": 4,
          "enabled": true
        },
        {
          "title": "Concurrent",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Speak to Activator",
          "value": 16,
          "enabled": true
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "sentence",
          "title": "Sentence Name",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "entity",
          "title": "Speaker Type"
        },
        {
          "type": "string",
          "name": "delay",
          "title": "Additional Sentence Time",
          "deflt": "0"
        },
        {
          "type": "integer",
          "name": "radius",
          "title": "Search Radius",
          "deflt": 512
        },
        {
          "type": "string",
          "name": "refire",
          "title": "Delay Before Refire",
          "deflt": "3"
        },
        {
          "type": "string",
          "name": "listener",
          "title": "Listener Type"
        },
        {
          "type": "string",
          "name": "volume",
          "title": "Volume 0-10",
          "deflt": "10"
        },
        {
          "type": "choices",
          "name": "attenuation",
          "title": "Sound Radius",
          "deflt": 0,
          "choices": {
            "0": "Small Radius",
            "1": "Medium Radius",
            "2": "Large  Radius",
            "3": "Play Everywhere"
          }
        }
      ],
      "inputs": [
        {
          "name": "BeginSentence",
          "description": "Starts the scripted sentence.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnBeginSentence",
          "description": "Fires when the sentence begins",
          "type": "void"
        },
        {
          "name": "OnEndSentence",
          "description": "Fires when the sentence ends",
          "type": "void"
        }
      ]
    },
    {
      "name": "scripted_target",
      "type": "PointClass",
      "description": "Scripted Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "StartDisabled",
          "title": "Start Disabled",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "npcclass",
          "name": "m_iszEntity",
          "title": "Target NPC"
        },
        {
          "type": "integer",
          "name": "m_flRadius",
          "title": "Search Radius (0=everywhere)",
          "description": "Radius to search within for an NPC to use. 0 searches everywhere.",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "MoveSpeed",
          "title": "Move Speed",
          "deflt": 5
        },
        {
          "type": "integer",
          "name": "PauseDuration",
          "title": "Pause Duration",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "EffectDuration",
          "title": "Effect Duration",
          "deflt": 2
        },
        {
          "type": "target_destination",
          "name": "target",
          "title": "Next Target"
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable this entity",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable this entity",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "AtTarget",
          "description": "Fires when NPC reaches this target",
          "type": "void"
        },
        {
          "name": "LeaveTarget",
          "description": "Fires when NPC leaves this target",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_relationship",
      "type": "PointClass",
      "description": "AI Relationship - Sets relationships between groups of NPCs in the AI.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_relationship.vmt"
          ]
        },
        {
          "name": "sphere",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "subject",
          "title": "Subject(s)",
          "description": "This is the NPC(s) whose disposition will change. May be a targetname or a classname.",
          "deflt": ""
        },
        {
          "type": "target_name_or_class",
          "name": "target",
          "title": "Target(s)",
          "description": "This is the NPC(s) about whom the Subject(s) will change their disposition. May be a tarGetname or a classname.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "disposition",
          "title": "Disposition",
          "description": "Choose the way the Subject(s) should feel about the Target(s)",
          "deflt": 3,
          "choices": {
            "1": "Hate",
            "2": "Fear",
            "3": "Like",
            "4": "Neutral"
          }
        },
        {
          "type": "float",
          "name": "radius",
          "title": "Radius for subject",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "rank",
          "title": "Disposition Priority",
          "description": "How much the Subject(s) should Like/Hate/Fear the Target(s). Higher priority = stronger feeling.",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "StartActive",
          "title": "Start Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "Reciprocal",
          "title": "Reciprocal",
          "description": "Set this to YES to have the new relationship mirrored by Target",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "Notify subject of target's location",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Notify target of subject's location",
          "value": 2,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "ApplyRelationship",
          "description": "Apply relationship changes. This will change all Subject entities' relationships to all Target entities. \\n\\nIMPORTANT: Once you ApplyRelationships, this entity is then 'ALWAYS ON' until you send a Disable input or RevertRelationship input. During the time this entity is 'ON', any entities that spawn who match the Subject or Target names will be affected. \\n\\nIMPORTANT: Unpredictable results may occur when two ai_relationship entities refer to the same set or subset of target or subject entities. This situation should be avoided.",
          "type": "void"
        },
        {
          "name": "RevertRelationship",
          "description": "Revert relationship changes. This will return the relationship to what it was at the time the ApplyRelationship input was called (or when this ai_relationship was spawned if StartActive is set).",
          "type": "void"
        },
        {
          "name": "RevertToDefaultRelationship",
          "description": "Revert relationship changes to the default relationship, which may have changed since this ai_relationship was applied. This returns control of the entity relationship to the code.",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_ally_manager",
      "type": "PointClass",
      "description": "AI Ally Manager",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "maxallies",
          "title": "Maximum number of allies",
          "deflt": 5
        },
        {
          "type": "integer",
          "name": "maxmedics",
          "title": "Maximum number of medics",
          "deflt": 1
        }
      ],
      "inputs": [
        {
          "name": "SetMaxAllies",
          "description": "Set maximum number of allies",
          "type": "integer"
        },
        {
          "name": "SetMaxMedics",
          "description": "Set maximum number of medic allies",
          "type": "integer"
        },
        {
          "name": "Replenish",
          "description": "Replenish player allies",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "SpawnMedicAlly",
          "description": "Spawn Medic Ally",
          "type": "void"
        },
        {
          "name": "SpawnAlly0",
          "description": "Spawn Ally 0",
          "type": "void"
        },
        {
          "name": "SpawnAlly1",
          "description": "Spawn Ally 1",
          "type": "void"
        },
        {
          "name": "SpawnAlly2",
          "description": "Spawn Ally 2",
          "type": "void"
        },
        {
          "name": "SpawnAlly3",
          "description": "Spawn Ally 3",
          "type": "void"
        },
        {
          "name": "SpawnAlly4",
          "description": "Spawn Ally 4",
          "type": "void"
        },
        {
          "name": "SpawnAlly5",
          "description": "Spawn Ally 5",
          "type": "void"
        },
        {
          "name": "SpawnAlly6",
          "description": "Spawn Ally 6",
          "type": "void"
        },
        {
          "name": "SpawnAlly7",
          "description": "Spawn Ally 7",
          "type": "void"
        },
        {
          "name": "SpawnAlly8",
          "description": "Spawn Ally 8",
          "type": "void"
        },
        {
          "name": "SpawnAlly9",
          "description": "Spawn Ally 9",
          "type": "void"
        },
        {
          "name": "OnZeroAllies",
          "description": "Fires when there are no more allies",
          "type": "void"
        },
        {
          "name": "OnZeroMedicAllies",
          "description": "Fires when there are no more allies",
          "type": "void"
        }
      ]
    },
    {
      "name": "LeadGoalBase",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) to affect"
        },
        {
          "type": "string",
          "name": "goal",
          "title": "Target Entity"
        },
        {
          "type": "target_destination",
          "name": "WaitPointName",
          "title": "Point to wait at if the target's not visible"
        },
        {
          "type": "float",
          "name": "WaitDistance",
          "title": "Wait until player gets this close"
        },
        {
          "type": "float",
          "name": "LeadDistance",
          "title": "Lead Distance",
          "description": "The player is considered to be lagging if he's beyond this distance.  The Actor will consider retrieving when the player is 4x 'Lead Distance' away.",
          "deflt": "64"
        },
        {
          "type": "float",
          "name": "RetrieveDistance",
          "title": "Retrieve Distance",
          "description": "The distance from the player that the NPC should return to when retrieving a lagging player. Must be between ('Lead Distance' + 24) and ('Lead Distance' * 4) to avoid the leader ping-ponging.",
          "deflt": "96"
        },
        {
          "type": "float",
          "name": "SuccessDistance",
          "title": "Success Distance",
          "description": "The distance from the player (to the NPC) that the player must be within for the Lead to succeed, once the NPC has reached the goal. If set to 0, it'll use the lead distance instead (for legacy support).",
          "deflt": "0"
        },
        {
          "type": "choices",
          "name": "Run",
          "title": "Run instead of Walk",
          "deflt": "0",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "Retrieve",
          "title": "Retrieve player?",
          "deflt": 1,
          "choices": {
            "0": "No, just idle and wait",
            "1": "Yes, move to retrieve"
          }
        },
        {
          "type": "choices",
          "name": "ComingBackWaitForSpeak",
          "title": "Before Coming Back, Wait for speech?",
          "deflt": 1,
          "choices": {
            "0": "No, come back while speaking",
            "1": "Yes, wait for speech to finish"
          }
        },
        {
          "type": "choices",
          "name": "RetrieveWaitForSpeak",
          "title": "On Retrieve, Wait for speech?",
          "deflt": 1,
          "choices": {
            "0": "No, start leading while speaking",
            "1": "Yes, wait for speech to finish"
          }
        },
        {
          "type": "choices",
          "name": "DontSpeakStart",
          "title": "Speak start greeting?",
          "deflt": 0,
          "choices": {
            "0": "Yes, speak the start greeting",
            "1": "No, don't speak the greeting"
          }
        },
        {
          "type": "choices",
          "name": "LeadDuringCombat",
          "title": "Lead during combat?",
          "deflt": 0,
          "choices": {
            "0": "No. Stop to fight, resume leading when safe.",
            "1": "Yes, lead while fighting."
          }
        },
        {
          "type": "choices",
          "name": "GagLeader",
          "title": "Gag Leader?",
          "deflt": 0,
          "choices": {
            "0": "No. Speak lead concepts normally, respecting other lead speech settings.",
            "1": "Yes, don't speak any lead concepts at all, overriding all other lead speech settings."
          }
        },
        {
          "type": "string",
          "name": "AttractPlayerConceptModifier",
          "title": "Attract player concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_ATTRACTPLAYER' concept is spoken.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "WaitOverConceptModifier",
          "title": "Player wait over concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_WAITOVER' concept is spoken.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "ArrivalConceptModifier",
          "title": "Arrival concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_ARRIVAL' concept is spoken.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "PostArrivalConceptModifier",
          "title": "Post-arrival concepts modifier"
        },
        {
          "type": "string",
          "name": "SuccessConceptModifier",
          "title": "Success concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_SUCCESS' concept is spoken.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "FailureConceptModifier",
          "title": "Failure concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'lead_fail' concept is spoken.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "ComingBackConceptModifier",
          "title": "Coming Back concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_RETRIEVE' concept is spoken. Spoken as the NPC starts returning to the player to retrieve him.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "RetrieveConceptModifier",
          "title": "Retrieve concept modifier",
          "description": "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_COMINGBACK' concept is spoken. Spoken when NPC has finally reached the player to retrieve him.",
          "deflt": ""
        }
      ],
      "flags": [
        {
          "title": "No def success",
          "value": 1,
          "enabled": false
        },
        {
          "title": "No def failure",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Use goal facing",
          "value": 4,
          "enabled": true
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin the leading behavior",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Stop the leading behavior",
          "type": "void"
        },
        {
          "name": "SetSuccess",
          "description": "Notify success of leading",
          "type": "void"
        },
        {
          "name": "SetFailure",
          "description": "Notify failure of leading",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnArrival",
          "description": "Fires when NPC reaches the lead point",
          "type": "void"
        },
        {
          "name": "OnArrivalDone",
          "description": "Fires when NPC has played out any arrival speech",
          "type": "void"
        },
        {
          "name": "OnSuccess",
          "description": "Fires when NPC achieves the goal",
          "type": "void"
        },
        {
          "name": "OnFailure",
          "description": "Fires when NPC fails to achieves the goal",
          "type": "void"
        },
        {
          "name": "OnDone",
          "description": "Fires when NPC completes behavior (any post-success or fail acting is complete)",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_lead",
      "type": "PointClass",
      "description": "AI Goal Lead",
      "parameters": [
        {
          "name": "base",
          "values": [
            "LeadGoalBase"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_lead.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        }
      ]
    },
    {
      "name": "ai_goal_lead_weapon",
      "type": "PointClass",
      "description": "AI Goal Lead (Weapon). A version of the ai_goal_lead entity that requires the player to have the specified weapon before the Actor(s) will lead the player to their target.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "LeadGoalBase"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_lead.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "WeaponName",
          "title": "Weapon",
          "deflt": "weapon_bugbait",
          "choices": {
            "weapon_bugbait": "Bugbait",
            "weapon_smg1": "SMG1",
            "weapon_ar2": "AR2"
          }
        },
        {
          "type": "string",
          "name": "MissingWeaponConceptModifier",
          "title": "Missing weapon concept modifier"
        },
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        }
      ]
    },
    {
      "name": "FollowGoal",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) to affect"
        },
        {
          "type": "string",
          "name": "goal",
          "title": "Target Entity",
          "description": "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"
        },
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        },
        {
          "type": "choices",
          "name": "StartActive",
          "title": "Start Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "MaximumState",
          "title": "Maximum state",
          "deflt": 1,
          "choices": {
            "1": "Idle",
            "2": "Alert",
            "3": "Combat"
          }
        },
        {
          "type": "choices",
          "name": "Formation",
          "title": "Formation",
          "deflt": 0,
          "choices": {
            "0": "Close circle",
            "1": "Wide circle",
            "5": "Medium circle",
            "6": "Sidekick",
            "8": "Vortigaunt"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin the follow behavior",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Cease the follow behavior",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_follow",
      "type": "PointClass",
      "description": "AI Goal Follow",
      "parameters": [
        {
          "name": "base",
          "values": [
            "FollowGoal"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_follow.vmt"
          ]
        }
      ]
    },
    {
      "name": "ai_goal_injured_follow",
      "type": "PointClass",
      "description": "AI Goal Injured Follow",
      "parameters": [
        {
          "name": "base",
          "values": [
            "FollowGoal"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_follow.vmt"
          ]
        }
      ]
    },
    {
      "name": "ai_battle_line",
      "type": "PointClass",
      "description": "Battle line",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "Parentname"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/pigeon.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Use parent's orientation",
          "value": 1,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) or squad to affect"
        },
        {
          "type": "choices",
          "name": "Active",
          "title": "Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "Strict",
          "title": "Strict",
          "description": "Player orders can override, applies to allies only",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_standoff",
      "type": "PointClass",
      "description": "AI Goal Standoff",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_standoff.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) to affect"
        },
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        },
        {
          "type": "choices",
          "name": "StartActive",
          "title": "Start Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "HintGroupChangeReaction",
          "title": "Reaction to tactical change",
          "description": "What to do if leader moves, threat is neutralized, hint group changes, etc",
          "deflt": 1,
          "choices": {
            "0": "Move when ready (default AI)",
            "1": "Move when seek cover",
            "2": "Move immediately"
          }
        },
        {
          "type": "choices",
          "name": "Aggressiveness",
          "title": "Aggressiveness",
          "deflt": 2,
          "choices": {
            "0": "Very low",
            "1": "Low",
            "2": "Medium",
            "3": "High",
            "4": "Very High"
          }
        },
        {
          "type": "choices",
          "name": "PlayerBattleline",
          "title": "Player battleline",
          "description": "Player defines a battle line, applies to allies only",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "StayAtCover",
          "title": "Stay at cover location",
          "description": "When have suitable cover, don't change it (disables advancing to battle line)",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "AbandonIfEnemyHides",
          "title": "Abandon if enemies hide",
          "description": "If no enemy detected recently, stop the standoff",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin contesting position",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Cease contesting position",
          "type": "void"
        },
        {
          "name": "SetAggressiveness",
          "description": "Set aggressiveness",
          "type": "integer"
        }
      ]
    },
    {
      "name": "ai_goal_police",
      "type": "PointClass",
      "description": "AI Goal Police",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "policeradius"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_goal_police.vmt"
          ]
        }
      ],
      "flags": [
        {
          "title": "Knock-out target past crossing plane",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Do not leave post",
          "value": 4,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "policeradius",
          "title": "Radius",
          "description": "Radius to police",
          "deflt": 512
        },
        {
          "type": "string",
          "name": "policetarget",
          "title": "Target",
          "description": "Target to police",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "EnableKnockOut",
          "description": "Tells the goal to make the active policing NPC knock out its target",
          "type": "void"
        },
        {
          "name": "DisableKnockOut",
          "description": "Stop the active policing NPC from trying to knock out its target",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFirstWarning",
          "description": "Fires the first time a policing cop warns a target",
          "type": "void"
        },
        {
          "name": "OnSecondWarning",
          "description": "Fires the second time a policing cop warns a target",
          "type": "void"
        },
        {
          "name": "OnLastWarning",
          "description": "Fires when a policing cop warns a target for the last time",
          "type": "void"
        },
        {
          "name": "OnSupressingTarget",
          "description": "Fires when a policing cop starts to suppress (ie. beat) a target",
          "type": "void"
        },
        {
          "name": "OnKnockOut",
          "description": "Fires when a target has been knocked out",
          "type": "void"
        }
      ]
    },
    {
      "name": "assault_rallypoint",
      "type": "PointClass",
      "description": "(Assault) rally point",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/assault_rally.vmt"
          ]
        },
        {
          "name": "line",
          "values": [
            255,
            255,
            255,
            "targetname",
            "assaultpoint"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "assaultpoint",
          "title": "Assault Point",
          "description": "Location to move to as assault begins",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "assaultdelay",
          "title": "Assault Delay",
          "description": "How long to wait after cue is given before assault begins.",
          "deflt": 0
        },
        {
          "type": "string",
          "name": "rallysequence",
          "title": "Rally Sequence",
          "description": "Override the NPC's wait activity by entering a sequence name.",
          "deflt": ""
        },
        {
          "type": "integer",
          "name": "priority",
          "title": "Priority",
          "description": "Higher priority rally points get selected first.",
          "deflt": 1
        },
        {
          "type": "choices",
          "name": "forcecrouch",
          "title": "Force Crouch",
          "description": "NPCs using this assault point are forced into crouching while holding it.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "urgent",
          "title": "Urgent",
          "description": "If true, NPCs will consider movement to this rally point as Urgent Navigation.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "outputs": [
        {
          "name": "OnArrival",
          "description": "Fires when the NPC reaches this rally point",
          "type": "void"
        }
      ]
    },
    {
      "name": "assault_assaultpoint",
      "type": "PointClass",
      "description": "(Assault) assault point",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/assault_point.vmt"
          ]
        },
        {
          "name": "line",
          "values": [
            255,
            255,
            255,
            "targetname",
            "nextassaultpoint"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "assaultgroup",
          "title": "Assault Hint Group",
          "description": "NPC's movements are constrained to this hint group once assault has begun",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "nextassaultpoint",
          "title": "Next assault point (optional)"
        },
        {
          "type": "float",
          "name": "assaulttimeout",
          "title": "Assault time out",
          "description": "This point is cleared when no enemies are seen for this long (seconds)",
          "deflt": "3.0"
        },
        {
          "type": "choices",
          "name": "clearoncontact",
          "title": "Clear on contact with enemies",
          "description": "If you come in contact with enemies while approaching the assault point, clear our assault point",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "allowdiversion",
          "title": "Allow diversion",
          "description": "If you come in contact with enemies while approaching the assault point, divert to kill them. Resume the assault once contact is lost.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "float",
          "name": "allowdiversionradius",
          "title": "Diversion Proximity",
          "description": "If Allow Diversion is set, NPC will only divert from assault to attack an enemy that is within this distance of the assault point. 0 = No limit.",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "nevertimeout",
          "title": "Never Timeout",
          "description": "If set, the assault never ends for NPCs assaulting this point. Useful for forcing NPCs back to a point.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "strict",
          "title": "Strict?",
          "deflt": 0,
          "choices": {
            "0": "No, NPC may move from point to attack",
            "1": "Yes, NPC may not move to attack"
          }
        },
        {
          "type": "choices",
          "name": "forcecrouch",
          "title": "Force Crouch",
          "description": "NPCs using this assault point are forced into crouching while holding it.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "urgent",
          "title": "Urgent",
          "description": "If true, NPCs will consider movement to this assault point as Urgent Navigation.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "assaulttolerance",
          "title": "Attack Tolerance",
          "description": "How far this NPC may move from the assault point to try to attack an enemy.",
          "deflt": 36,
          "choices": {
            "36": "Tight (3ft)",
            "72": "Medium (6ft)",
            "120": "Large (10ft)"
          }
        }
      ],
      "flags": [
        {
          "title": "Clear this point upon arrival, UNCONDITIONALLY",
          "value": 1,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "SetClearOnContact",
          "description": "Set the clear on contact flag. NPCs who spot enemies while running to the assault point, or while waiting at it, will immediately Clear it.",
          "type": "integer"
        },
        {
          "name": "SetAllowDiversion",
          "description": "Set the allow diversion flag. NPCs who spot enemies whil running to the assault point, or while waiting on it, will divert away (leave Assault mode) to deal with the enemies. Upon losing enemies, they'll go back to Assault mode, and return to this assault point.",
          "type": "integer"
        },
        {
          "name": "SetForceClear",
          "description": "Set the Force Clear flag. NPCs who are currently running to the assault point will Clear it immediately. NPCs who acquire it in the future will Clear it automatically.",
          "type": "integer"
        }
      ],
      "outputs": [
        {
          "name": "OnArrival",
          "description": "Fires when the NPC reaches this assault point",
          "type": "void"
        },
        {
          "name": "OnAssaultClear",
          "description": "Fires when this assault point is cleared of enemies",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_assault",
      "type": "PointClass",
      "description": "AI Goal Assault",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) to affect",
          "description": "NPC's that should perform this assault",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "rallypoint",
          "title": "Rally Point Set",
          "description": "Root name of rally points for this assault. Use an asterisk '*' after the root name to match all with the same root.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        },
        {
          "type": "choices",
          "name": "StartActive",
          "title": "Start Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "AssaultCue",
          "title": "Assault Cue",
          "deflt": 1,
          "choices": {
            "1": "Entity System Input",
            "2": "Gunfire",
            "3": "Don't wait for a cue."
          }
        },
        {
          "type": "choices",
          "name": "RallySelectMethod",
          "title": "Rally Point Selection Method",
          "deflt": 0,
          "choices": {
            "0": "Priority, Distance (default)",
            "1": "Random"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin the assault behavior",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Cease the assault behavior",
          "type": "void"
        },
        {
          "name": "BeginAssault",
          "description": "Begin assault phase",
          "type": "void"
        }
      ]
    },
    {
      "name": "BaseActBusy",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "actor",
          "title": "Actor(s) to affect",
          "description": "NPC's that should act busy",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "StartActive",
          "title": "Start Active",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities using the targetname.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname"
          }
        },
        {
          "type": "float",
          "name": "busysearchrange",
          "title": "Search Range for Busy Hints",
          "deflt": 2048
        },
        {
          "type": "choices",
          "name": "visibleonly",
          "title": "Visible Busy Hints Only",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Begin acting busy",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Cease acting busy",
          "type": "void"
        },
        {
          "name": "SetBusySearchRange",
          "description": "Update the busy search range for all actors.",
          "type": "float"
        },
        {
          "name": "ForceNPCToActBusy",
          "description": "Force an NPC to act busy. Takes parameters, separated by spaces: <Targetname> <hint node targetname> <optional:teleport> <optional:$customactivityorsequence> <maximum time to actbusy>. If no hint node targetname is specified, it'll search for a random one. If no max time is specified, it'll use the default. Specifying 0 as the max time will make the NPC act busy until disturbed. If the optional teleport parameter is specified, the NPC will teleport to the act busy point. A custom move animation can be specified by prepending $ to the name of it. i.e. $ACT_RUN will make the NPC Run. Sequence names can be used instead of activities.",
          "type": "string"
        },
        {
          "name": "ForceThisNPCToActBusy",
          "description": "Force an NPC outputted from another entity to act busy. (only usable from an output that specifies an entity)",
          "type": "string"
        },
        {
          "name": "ForceThisNPCToLeave",
          "description": "Force an NPC outputted from another entity to find a HINT_NPC_EXIT_POINT hintnode and vanish.",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnNPCStartedBusy",
          "description": "Fired when an NPC targeted by this goal starts an ActBusy animation.",
          "type": "string"
        },
        {
          "name": "OnNPCFinishedBusy",
          "description": "Fired when an NPC targeted by this goal finishes an ActBusy.",
          "type": "string"
        },
        {
          "name": "OnNPCLeft",
          "description": "Fired when an NPC target by this goal finishes a forced Leave.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ai_goal_actbusy",
      "type": "PointClass",
      "description": "AI Goal Act Busy",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseActBusy"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_name_or_class",
          "name": "seeentity",
          "title": "Sight Entity",
          "description": "The Sight Entity (if you provide one) is an entity that will leave the current ActBusy if the Actor playing the ActBusy loses sight of it for the amount of time specified in 'Sight Entity Timeout'. THIS MAY ONLY BE A TARGET NAME. NO CLASSNAMES.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "seeentitytimeout",
          "title": "Sight Entity Timeout",
          "description": "If you provide a Sight Entity, the Actor will leave the current ActBusy if the Actor has lost sight of Sight Entity for this many seconds.",
          "deflt": "1"
        },
        {
          "type": "choices",
          "name": "sightmethod",
          "title": "Sight Enemy Method",
          "description": "The method to use to determine whether the Sight enemy is visible.",
          "deflt": 0,
          "choices": {
            "0": "Default. LOS -and- Viewcone",
            "1": "LOS Only. Disregard Viewcone"
          }
        },
        {
          "type": "choices",
          "name": "type",
          "title": "Actbusy Type",
          "deflt": 0,
          "choices": {
            "0": "Default (Standard)",
            "1": "Combat"
          }
        },
        {
          "type": "target_destination",
          "name": "safezone",
          "title": "Combat Safe Zone",
          "description": "Only for combat actbusy. Lets you specify a volume which is the 'safe zone'. The Combat ActBusy will cancel if any enemies are seen in the safe zone.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "allowteleport",
          "title": "Allow actor to teleport?",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes (Only for Combat Actbusy)"
          }
        }
      ],
      "outputs": [
        {
          "name": "OnNPCLostSeeEntity",
          "description": "Fired when the NPC loses sight of the see entity (if one is specified).",
          "type": "void"
        },
        {
          "name": "OnNPCSeeEnemy",
          "description": "Fired when this NPC leaves his actbusy because of sighting an enemy.",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_goal_actbusy_queue",
      "type": "PointClass",
      "description": "AI Goal Act Busy Queue",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseActBusy"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "node_exit",
          "title": "Exit Node",
          "description": "The name of the node the first NPC in the queue should move to when he leaves the head of the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node01",
          "title": "Node 1",
          "description": "The name of the first actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node02",
          "title": "Node 2",
          "description": "The name of the second actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node03",
          "title": "Node 3",
          "description": "The name of the third actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node04",
          "title": "Node 4",
          "description": "The name of the fourth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node05",
          "title": "Node 5",
          "description": "The name of the fifth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node06",
          "title": "Node 6",
          "description": "The name of the sixth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node07",
          "title": "Node 7",
          "description": "The name of the seventh actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node08",
          "title": "Node 8",
          "description": "The name of the eighth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node09",
          "title": "Node 9",
          "description": "The name of the ninth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node10",
          "title": "Node 10",
          "description": "The name of the tenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node11",
          "title": "Node 11",
          "description": "The name of the eleventh actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node12",
          "title": "Node 12",
          "description": "The name of the twelfth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node13",
          "title": "Node 13",
          "description": "The name of the thirteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node14",
          "title": "Node 14",
          "description": "The name of the fourteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node15",
          "title": "Node 15",
          "description": "The name of the fifteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node16",
          "title": "Node 16",
          "description": "The name of the sixteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node17",
          "title": "Node 17",
          "description": "The name of the seventeenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node18",
          "title": "Node 18",
          "description": "The name of the eighteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node19",
          "title": "Node 19",
          "description": "The name of the nineteenth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "node20",
          "title": "Node 20",
          "description": "The name of the twentieth actbusy hint node in the queue.",
          "deflt": ""
        },
        {
          "type": "choices",
          "name": "mustreachfront",
          "title": "Must Reach Front",
          "description": "If true, NPCs much reach the front node in the queue before they're allowed to leave the queue.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "PlayerStartedBlocking",
          "description": "Tell the queue manager that the player has started blocking a spot in the queue.",
          "type": "float"
        },
        {
          "name": "PlayerStoppedBlocking",
          "description": "Tell the queue manager that the player has stopped blocking a spot in the queue.",
          "type": "float"
        },
        {
          "name": "MoveQueueUp",
          "description": "Force the queue to move up, sending the front-most NPC out of the queue.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnQueueMoved",
          "description": "Fired when the queue moves. Outputs the number of NPCs left in the queue.",
          "type": "float"
        },
        {
          "name": "OnNPCStartedLeavingQueue",
          "description": "Fired when the NPC at the head of the queue starts to leave. The activator is the NPC, and the string is the name of the NPC.",
          "type": "string"
        },
        {
          "name": "OnNPCLeftQueue",
          "description": "Fired when the NPC at the head of the queue leaves. The activator is the NPC, and the string is the name of the NPC.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ai_changetarget",
      "type": "PointClass",
      "description": "Change Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -8,
            -8,
            -8,
            8,
            8,
            8
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Target entity",
          "description": "Name of entity whose target will be changed."
        },
        {
          "type": "string",
          "name": "m_iszNewTarget",
          "title": "New Target"
        }
      ],
      "inputs": [
        {
          "name": "Kill",
          "description": "Removes this entity from the world",
          "type": "void"
        },
        {
          "name": "Activate",
          "description": "Changes the entities target",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_npc_eventresponsesystem",
      "type": "PointClass",
      "description": "An entity that allows you to generate events for nearby friendly NPCs to respond to.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -8,
            -8,
            -8,
            8,
            8,
            8
          ]
        }
      ],
      "inputs": [
        {
          "name": "TriggerResponseEvent",
          "description": "Fire an NPC Response Event. The parameter should match the response rules concept that any nearby friendly NPCs will try to speak.",
          "type": "string"
        },
        {
          "name": "ForceTriggerResponseEvent",
          "description": "Fire an NPC Response Event, and force the first available NPC to speak the response (breaking them out of any scene they're in). The parameter should match the response rules concept that any nearby friendly NPCs will try to speak.",
          "type": "string"
        },
        {
          "name": "ForceTriggerResponseEventNoCancel",
          "description": "Fire an NPC Response Event, and force the first available NPC to speak the response (but don't break them out of any scene they're in). The parameter should match the response rules concept that any nearby friendly NPCs will try to speak.",
          "type": "string"
        }
      ]
    },
    {
      "name": "ai_changehintgroup",
      "type": "PointClass",
      "description": "Change Hint Group",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "Radius"
          ]
        },
        {
          "name": "size",
          "values": [
            -8,
            -8,
            -8,
            8,
            8,
            8
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "SearchType",
          "title": "Search Type",
          "description": "How to search for the entities to change.",
          "deflt": 0,
          "choices": {
            "0": "Entity Name",
            "1": "Classname",
            "2": "Old Hint Group"
          }
        },
        {
          "type": "string",
          "name": "SearchName",
          "title": "Name to search for"
        },
        {
          "type": "string",
          "name": "NewHintGroup",
          "title": "New Hint Group"
        },
        {
          "type": "string",
          "name": "Radius",
          "title": "Search Radius",
          "description": "Radius to search (0 for all of map)",
          "deflt": "0.0"
        },
        {
          "type": "choices",
          "name": "hintlimiting",
          "title": "Hint Limit Nav",
          "description": "Limits NPC to using specified hint group for navigation requests, does not limit local navigation.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "Kill",
          "description": "Removes this entity from the world",
          "type": "void"
        },
        {
          "name": "Activate",
          "description": "Change the Hint Group",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_script_conditions",
      "type": "PointClass",
      "description": "AI Script Conditions",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "Actor",
          "title": "Actor",
          "description": "NPC Target"
        },
        {
          "type": "choices",
          "name": "StartDisabled",
          "title": "Start Disabled",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "MinimumState",
          "title": "Minimum state",
          "deflt": 1,
          "choices": {
            "1": "Idle",
            "2": "Alert",
            "3": "Combat"
          }
        },
        {
          "type": "choices",
          "name": "MaximumState",
          "title": "Maximum state",
          "deflt": 3,
          "choices": {
            "1": "Idle",
            "2": "Alert",
            "3": "Combat"
          }
        },
        {
          "type": "choices",
          "name": "ScriptStatus",
          "title": "Actor is running a script?",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "float",
          "name": "RequiredTime",
          "title": "Required Time",
          "description": "Duration of time that all the conditions must be true",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "MinTimeout",
          "title": "Minimum time out",
          "description": "Minimum time before OnConditionsTimeout is fired. 0 = never expire.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "MaxTimeout",
          "title": "Maximum time out",
          "description": "Maximum time before OnConditionsTimeout is fired. 0 = ignore (If you don't specify a Maximum timeout, conditions will time out at exactly Minimum Time Out. If you DO specify a Maximum time out, timeout will occur randomly between Minimum and Maximum time out values.)",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "ActorSeePlayer",
          "title": "Actor Sees Player",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "float",
          "name": "PlayerActorProximity",
          "title": "Player distance",
          "description": "The distance the player must/must not be to the actor. Negative values for NOT, 0 for ignore.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "PlayerActorFOV",
          "title": "Player FOV for Actor ",
          "description": "Specify angle of view cone in degrees. Negative value = NOT",
          "deflt": 360
        },
        {
          "type": "choices",
          "name": "PlayerActorFOVTrueCone",
          "title": "Play FOV to Actor is a true view cone",
          "description": "Player's view cone is evaluated as a true cone, not pie slice ",
          "deflt": 0,
          "choices": {
            "0": "No - Tall pie slice",
            "1": "Yes - True view cone"
          }
        },
        {
          "type": "choices",
          "name": "PlayerActorLOS",
          "title": "Player has LOS to Actor",
          "description": "Checks that the player has clear Line of Sight to the Actor",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "target_destination",
          "name": "target",
          "title": "Target (Optional)",
          "description": "Optional entity to include in conditions"
        },
        {
          "type": "choices",
          "name": "ActorSeeTarget",
          "title": "Actor Sees Target",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "float",
          "name": "ActorTargetProximity",
          "title": "Target distance",
          "description": "The distance the actor must/must not be to the Target. Negative values for NOT, 0 for ignore.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "PlayerTargetProximity",
          "title": "Player distance from Target",
          "description": "The distance the player must/must not be to the Target. Negative values for NOT, 0 for ignore.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "PlayerTargetFOV",
          "title": "Player FOV for Target",
          "description": "Specify angle of view cone in degrees. Negative value = NOT",
          "deflt": 360
        },
        {
          "type": "choices",
          "name": "PlayerTargetFOVTrueCone",
          "title": "Play FOV to Target is a true view cone",
          "description": "Player's view cone is evaluated as a true cone, not pie slice ",
          "deflt": 0,
          "choices": {
            "0": "No - Tall pie slice",
            "1": "Yes - True view cone"
          }
        },
        {
          "type": "choices",
          "name": "PlayerTargetLOS",
          "title": "Player has LOS to Target",
          "description": "Checks that the player has clear Line of Sight to the Target",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "choices",
          "name": "PlayerBlockingActor",
          "title": "Player blocking Actor",
          "description": "Checks that the player is blocking the Actor's path",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "choices",
          "name": "ActorInPVS",
          "title": "Actor in Player's PVS",
          "description": "Checks that the actor is in the player's PVS",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "choices",
          "name": "ActorInVehicle",
          "title": "Actor in a vehicle",
          "description": "Checks the actor's state in a vehicle",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        },
        {
          "type": "choices",
          "name": "PlayerInVehicle",
          "title": "Player in a vehicle",
          "description": "Checks the player's state in a vehicle",
          "deflt": 2,
          "choices": {
            "0": "No",
            "1": "Yes",
            "2": "Don't care"
          }
        }
      ],
      "flags": [
        {
          "title": "Fire outputs with the Actor as Activator",
          "value": 1,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable this entity",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable this entity",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnConditionsSatisfied",
          "description": "Fires when AI conditions satisfied",
          "type": "void"
        },
        {
          "name": "OnConditionsTimeout",
          "description": "Fires when AI conditions timed out",
          "type": "void"
        },
        {
          "name": "NoValidActor",
          "description": "Fires if/when there are no matching actors in the map.",
          "type": "void"
        }
      ]
    },
    {
      "name": "scripted_sequence",
      "type": "PointClass",
      "description": "Grabs an NPC and makes them play a specified set of animations. The NPC can be told to move to the scripted sequence position or can be told to play the script wherever they currently are. Multiple scripted sequences of the same name will frame-synchronize in the action animation once all the actors have moved to position. This allows tight interaction between actors (one actor grabbing another, hitting them, etc.) The flow is as follows:\\n\\n1) Move to position using the specified movement animation. If 'Move to Position' is set to NONE, skip to step 2.\\n2) If forced to wait for another actor to move to position, play the pre-action idle animation, otherwise skip to step 3. If there is no pre-action idle specified, ACT_IDLE is used.\\n3) Fire the OnBeginSequence output.\\n4) Play the action animation. If no action animation is specified, skip to step 5.\\n5) Play the post-action idle animation. If none is specified, skip to step 6. If the 'Loop in Post Idle' spawnflag is set, keep playing the post-action idle until the script is cancelled. If no post-action idle animation is specified, ACT_IDLE is used.\\n6) Fire the OnEndSequence output.\\n7) If a next script to play is specified, hand the NPC to the next script and repeat this process for that script.\\n\\nThe MoveToPosition input runs steps 1 and 2, then waits while playing the pre-action idle animation until the BeginSequence input is received.\\n\\nIf the sequence has motion extraction in it, set the 'Don't Teleport NPC On End' spawnflag.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseScripted",
            "Angles",
            "DXLevelChoice"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/editor/scriptedsequence.mdl"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "m_flRadius"
          ]
        }
      ],
      "flags": [
        {
          "title": "Repeatable",
          "value": 4,
          "enabled": false
        },
        {
          "title": "Leave Corpse",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Start on Spawn",
          "value": 16,
          "enabled": false
        },
        {
          "title": "No Interruptions",
          "value": 32,
          "enabled": false
        },
        {
          "title": "Override AI",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Don't Teleport NPC On End",
          "value": 128,
          "enabled": false
        },
        {
          "title": "Loop in Post Idle",
          "value": 256,
          "enabled": false
        },
        {
          "title": "Priority Script",
          "value": 512,
          "enabled": false
        },
        {
          "title": "Allow actor death",
          "value": 4096,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "onplayerdeath",
          "title": "On player death",
          "description": "What should this entity do if the player dies",
          "deflt": 0,
          "choices": {
            "0": "Do Nothing",
            "1": "Cancel Script and return to AI"
          }
        }
      ]
    },
    {
      "name": "aiscripted_schedule",
      "type": "PointClass",
      "description": "Issues a command to an NPC without taking the NPC out of its AI. This does not seize control of the NPC as a scripted_sequence does",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "m_flRadius"
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            0,
            255
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/aiscripted_schedule"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "m_iszEntity",
          "title": "Target NPC",
          "description": "The name or classname of an NPC to use."
        },
        {
          "type": "integer",
          "name": "m_flRadius",
          "title": "Search Radius (0=everywhere)",
          "description": "Radius to search within for an NPC to use. 0 searches everywhere.",
          "deflt": 0
        },
        {
          "type": "choices",
          "name": "graball",
          "title": "All in radius",
          "description": "Whether to grab all matching NPCs in the specified radius, instead of just one",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "forcestate",
          "title": "AI state to set",
          "deflt": 0,
          "choices": {
            "0": "<None>",
            "1": "Set state to IDLE",
            "2": "Set state to ALERT",
            "3": "Set state to COMBAT"
          }
        },
        {
          "type": "choices",
          "name": "schedule",
          "title": "Schedule to run",
          "deflt": 1,
          "choices": {
            "0": "<None>",
            "1": "Walk to Goal Entity",
            "2": "Run to Goal Entity",
            "3": "Set enemy to Goal Entity",
            "4": "Walk Goal Path",
            "5": "Run Goal Path",
            "6": "Set enemy to Goal Entity AND Run to Goal Entity"
          }
        },
        {
          "type": "choices",
          "name": "interruptability",
          "title": "Interruptability",
          "deflt": 0,
          "choices": {
            "0": "General",
            "1": "Damage or Death",
            "2": "Death"
          }
        },
        {
          "type": "target_destination",
          "name": "goalent",
          "title": "Goal entity",
          "description": "Provides the name of a schedule-specific goal entity (see 'Schedule to run')"
        }
      ],
      "flags": [
        {
          "title": "Repeatable",
          "value": 4,
          "enabled": true
        },
        {
          "title": "Search Cyclically",
          "value": 1024,
          "enabled": false
        },
        {
          "title": "Don't Complain",
          "value": 2048,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "StartSchedule",
          "description": "Starts the scripted schedule. This will first locate an NPC that matches the given target, then tell the NPC to run the specified schedule.",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_citizen_response_system",
      "type": "PointClass",
      "description": "If placed in the level, will manage citizens responses to player's actions.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "inputs": [
        {
          "name": "ResponseVitalNPC",
          "description": "Fire the VitalNPC Died response.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_healthcharger",
      "type": "SolidClass",
      "description": "Wall health recharger",
      "parameters": [
        {
          "name": "base",
          "values": [
            "EnableDisable",
            "Parentname",
            "Origin",
            "Global",
            "GMODSandbox"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "_minlight",
          "title": "Minimum light level"
        }
      ],
      "outputs": [
        {
          "name": "OutRemainingHealth",
          "description": "Remaining Health.",
          "type": "float"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fired when the player +USEs the charger.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_recharge",
      "type": "SolidClass",
      "description": "Battery recharger",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Origin",
            "GMODSandbox"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "_minlight",
          "title": "Minimum light level"
        }
      ],
      "flags": [
        {
          "title": "Citadel recharger",
          "value": 8192,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Recharge",
          "description": "Recharge to full",
          "type": "void"
        },
        {
          "name": "SetCharge",
          "description": "This sets the remaining charge in the charger to whatever value you specify",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OutRemainingCharge",
          "description": "Remaining Charge.",
          "type": "float"
        },
        {
          "name": "OnHalfEmpty",
          "description": "Half-Empty",
          "type": "void"
        },
        {
          "name": "OnEmpty",
          "description": "Empty",
          "type": "void"
        },
        {
          "name": "OnFull",
          "description": "Recharged to full.",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fired when the player +USEs the charger.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_vehicleclip",
      "type": "SolidClass",
      "description": "Vehicle Clip",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "Targetname",
            "Global"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Kill",
          "description": "Removes this entity from the world",
          "type": "void"
        },
        {
          "name": "Enable",
          "description": "Enable collisions with vehicles",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable collisions with vehicles",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_lookdoor",
      "type": "SolidClass",
      "description": "A door that moves either when looked by a targeted object or when a target object comes near the door.  Behavior can be either based on viewing direction or proximity alone, or on a combination of both.  If inverted the doors behavior will be the opposite.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "func_movelinear"
          ]
        }
      ],
      "flags": [
        {
          "title": "LookDoor Threshold",
          "value": 8192,
          "enabled": false
        },
        {
          "title": "LookDoor Invert",
          "value": 16384,
          "enabled": false
        },
        {
          "title": "LookDoor From Open",
          "value": 32768,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "ProximityDistance",
          "title": "Proximity Distance",
          "description": "If non-zero, proximity range over which door will move",
          "deflt": "0.0"
        },
        {
          "type": "string",
          "name": "ProximityOffset",
          "title": "Proximity Offset",
          "description": "Offset from the target object",
          "deflt": "0.0"
        },
        {
          "type": "string",
          "name": "FieldOfView",
          "title": "FieldOfView",
          "description": "If non-zero, field of view over which door will move",
          "deflt": "0.0"
        }
      ],
      "inputs": [
        {
          "name": "InvertOn",
          "description": "InvertOn - when set behavior of door is inverted.",
          "type": "void"
        },
        {
          "name": "InvertOff",
          "description": "InvertOff - when set behavior of door is normal.",
          "type": "void"
        }
      ]
    },
    {
      "name": "trigger_waterydeath",
      "type": "SolidClass",
      "description": "A trigger volume that spawns leeches around entities inside it, and does damage to them until they die. Used to prevent players entering deep water.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger"
          ]
        }
      ]
    },
    {
      "name": "env_global",
      "type": "PointClass",
      "description": "An entity to control a game-specific global states.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "EnvGlobal"
          ]
        },
        {
          "name": "size",
          "values": [
            -8,
            -8,
            -8,
            8,
            8,
            8
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "globalstate",
          "title": "Global State to Set",
          "choices": {
            "gordon_precriminal": "Gordon pre-criminal",
            "antlion_allied": "Antlions are player allies",
            "suit_no_sprint": "Suit sprint function not yet enabled",
            "super_phys_gun": "Super Gravity Gun is enabled",
            "friendly_encounter": "Friendly encounter sequence (lower weapons, etc.)",
            "gordon_invulnerable": "Gordon is invulnerable",
            "no_seagulls_on_jeep": "Don't spawn seagulls on the jeep",
            "ep2_alyx_injured": "Episode 2: Alyx injured",
            "ep_alyx_darknessmode": "Episodic: Alyx darkness mode",
            "hunters_to_run_over": "Ep2 Counter: Hunters to run over before they dodge"
          }
        }
      ]
    },
    {
      "name": "BaseTank",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Origin",
            "Angles",
            "RenderFields",
            "Global",
            "Shadow"
          ]
        }
      ],
      "flags": [
        {
          "title": "Active",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Only Direct",
          "value": 16,
          "enabled": false
        },
        {
          "title": "Controllable",
          "value": 32,
          "enabled": false
        },
        {
          "title": "Damage Kick",
          "value": 64,
          "enabled": false
        },
        {
          "title": "NPC Controllable",
          "value": 1024,
          "enabled": false
        },
        {
          "title": "NPC Set Controller",
          "value": 2048,
          "enabled": false
        },
        {
          "title": "Allow friendlies to hit player",
          "value": 4096,
          "enabled": false
        },
        {
          "title": "Non-solid.",
          "value": 32768,
          "enabled": false
        },
        {
          "title": "Perfect accuracy every 3rd shot at player",
          "value": 131072,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "control_volume",
          "title": "Control Volume",
          "description": "Name of a trigger the specifies the volume in which a player must be to control this tank.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "master",
          "title": "(Team) Master"
        },
        {
          "type": "string",
          "name": "yawrate",
          "title": "Yaw rate",
          "deflt": "30"
        },
        {
          "type": "string",
          "name": "yawrange",
          "title": "Yaw range",
          "deflt": "180"
        },
        {
          "type": "string",
          "name": "yawtolerance",
          "title": "Yaw tolerance",
          "deflt": "15"
        },
        {
          "type": "string",
          "name": "pitchrate",
          "title": "Pitch rate",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "pitchrange",
          "title": "Pitch range",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "pitchtolerance",
          "title": "Pitch tolerance",
          "deflt": "5"
        },
        {
          "type": "string",
          "name": "barrel",
          "title": "Barrel Length",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "barrely",
          "title": "Barrel Horizontal",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "barrelz",
          "title": "Barrel Vertical",
          "deflt": "0"
        },
        {
          "type": "sprite",
          "name": "spritesmoke",
          "title": "Smoke Sprite",
          "deflt": ""
        },
        {
          "type": "sprite",
          "name": "spriteflash",
          "title": "Flash Sprite",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "spritescale",
          "title": "Sprite scale",
          "deflt": "1"
        },
        {
          "type": "sound",
          "name": "rotatestartsound",
          "title": "Rotate Start Sound",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "rotatesound",
          "title": "Rotate Loop Sound",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "rotatestopsound",
          "title": "Rotate Stop Sound",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "firerate",
          "title": "Rate of Fire",
          "deflt": "1"
        },
        {
          "type": "string",
          "name": "bullet_damage",
          "title": "Damage Per Bullet",
          "description": "If set to 0, it'll use the base weapon bullet's damage.",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "bullet_damage_vs_player",
          "title": "Damage Per Bullet Vs Player",
          "description": "If set to 0, it'll use the Damage Per Bullet value.",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "persistence",
          "title": "Firing persistence",
          "description": "(Seconds) How long to keep firing at last known position after lose sight of target",
          "deflt": "1"
        },
        {
          "type": "string",
          "name": "persistence2",
          "title": "Firing persistence2",
          "description": "(Seconds) After lost enemy and persistence time has passed, how long to occasionally fire at enemy's last known position",
          "deflt": "0"
        },
        {
          "type": "choices",
          "name": "firespread",
          "title": "Bullet accuracy",
          "deflt": 0,
          "choices": {
            "0": "Perfect Shot",
            "1": "Small cone",
            "2": "Medium cone",
            "3": "Large cone",
            "4": "Extra-large cone"
          }
        },
        {
          "type": "string",
          "name": "minRange",
          "title": "Minmum target range",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "maxRange",
          "title": "Maximum target range",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "_minlight",
          "title": "Minimum light level"
        },
        {
          "type": "string",
          "name": "gun_base_attach",
          "title": "Gun Base Attachment",
          "description": "If Parent is specified, this is the attachment point on the parent to aim from.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "gun_barrel_attach",
          "title": "Gun Barrel Attachment",
          "description": "If Parent is specified, this is the attachment point on the parent to fire from. If you specify this, you'll want to specify the Gun Base Attachment too.",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "gun_yaw_pose_param",
          "title": "Gun Yaw Pose Param",
          "description": "If Parent + the Gun Pitch Pose Param is specified, then the gun itself will be invisible and the func_tank will steer a gun on the parent using the pose parameters.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "gun_yaw_pose_center",
          "title": "Gun Yaw Pose Center",
          "description": "The center yaw pose parameter of the gun on the parent",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "gun_pitch_pose_param",
          "title": "Gun Pitch Pose Param",
          "description": "If Parent + the Gun Yaw Pose Param is specified, then the gun itself will be invisible and the func_tank will steer a gun on the parent using the pose parameters.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "gun_pitch_pose_center",
          "title": "Gun Pitch Pose Center",
          "description": "The center pitch pose parameter of the gun on the parent",
          "deflt": "0"
        },
        {
          "type": "integer",
          "name": "ammo_count",
          "title": "Ammunition Count",
          "description": "Only applies to player use. -1 = unlimited ammo.",
          "deflt": -1
        },
        {
          "type": "choices",
          "name": "LeadTarget",
          "title": "Lead Target",
          "deflt": "No",
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "target_destination",
          "name": "npc_man_point",
          "title": "NPC Man Point",
          "description": "Point where NPC must stand to man this func_tank.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "playergraceperiod",
          "title": "Post-NPC Attack Grace Period",
          "description": "If specified, NPC's manning this func tank won't fire at the player, after firing at a non-player, for this amount of time.",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "ignoregraceupto",
          "title": "Ignore Grace Upto",
          "description": "The player grace period is ignored if the player's under this distance from the func_tank.",
          "deflt": "768"
        },
        {
          "type": "float",
          "name": "playerlocktimebeforefire",
          "title": "Player Lock Time",
          "description": "The tank must have the player as a target for this amount of time before it's allowed to fire.",
          "deflt": "0"
        },
        {
          "type": "choices",
          "name": "effecthandling",
          "title": "Effect Handling",
          "deflt": 0,
          "choices": {
            "0": "Use Individual Settings.",
            "1": "AR2",
            "2": "Combine Cannon"
          }
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Turn the tank on",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Turn the tank off (go dormant)",
          "type": "void"
        },
        {
          "name": "SetFireRate",
          "description": "How fast to fire (0 = don't fire)",
          "type": "string"
        },
        {
          "name": "SetDamage",
          "description": "Set the Damage Per Bullet",
          "type": "string"
        },
        {
          "name": "SetTargetPosition",
          "description": "World position that I should aim at",
          "type": "string"
        },
        {
          "name": "SetTargetDir",
          "description": "Direction to aim at.",
          "type": "vector"
        },
        {
          "name": "SetTargetEntityName",
          "description": "Name of entity I should follow/attack",
          "type": "string"
        },
        {
          "name": "SetTargetEntity",
          "description": "Entity I should follow/attack (output from other entity only)",
          "type": "string"
        },
        {
          "name": "ClearTargetEntity",
          "description": "Clear the entity I should be attacking.",
          "type": "void"
        },
        {
          "name": "FindNPCToManTank",
          "description": "Find a nearby NPC to man this func_tank.",
          "type": "string"
        },
        {
          "name": "StartFindingNPCs",
          "description": "Start searching for NPCs to man this func_tank.",
          "type": "void"
        },
        {
          "name": "StopFindingNPCs",
          "description": "Stop searching for NPCs to man this func_tank.",
          "type": "void"
        },
        {
          "name": "ForceNPCOff",
          "description": "Force the NPC manning this func_tank (if any) to leave.",
          "type": "void"
        },
        {
          "name": "SetMaxRange",
          "description": "Set the max range of the func_tank.",
          "type": "float"
        }
      ],
      "outputs": [
        {
          "name": "OnFire",
          "description": "Fires when the tank fires its bullets",
          "type": "void"
        },
        {
          "name": "OnAquireTarget",
          "description": "Fires when target is newly in range and can be shot",
          "type": "void"
        },
        {
          "name": "OnLoseTarget",
          "description": "Fires when when target goes out of range",
          "type": "void"
        },
        {
          "name": "OnAmmoDepleted",
          "description": "Fires when tank runs out of ammo",
          "type": "void"
        },
        {
          "name": "OnGotController",
          "description": "Fires when an NPC starts to control this tank. Players do NOT fire this input.",
          "type": "void"
        },
        {
          "name": "OnLostController",
          "description": "Fires when the NPC controller of the tank stops controlling it. Players do NOT fire this input.",
          "type": "void"
        },
        {
          "name": "OnGotPlayerController",
          "description": "Fires when a Player starts to control this tank. NPCs do NOT fire this input.",
          "type": "void"
        },
        {
          "name": "OnLostPlayerController",
          "description": "Fires when the Player controller of the tank stops controlling it. NPCs do NOT fire this input.",
          "type": "void"
        },
        {
          "name": "OnReadyToFire",
          "description": "Fires once when the tank is done waiting to fire between rounds",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_tank",
      "type": "SolidClass",
      "description": "Brush Gun Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "ammotype",
          "title": "Ammo type",
          "deflt": "",
          "choices": {
            "": "None",
            "Pistol": "Pistol",
            "SMG1": "SMG1",
            "AR2": "AR2",
            "CombineHeavyCannon": "Combine Heavy Cannon"
          }
        }
      ],
      "flags": [
        {
          "title": "Ignore range when making viewcone checks",
          "value": 8192,
          "enabled": false
        },
        {
          "title": "Aiming Assistance (Player Only)",
          "value": 256,
          "enabled": false
        }
      ]
    },
    {
      "name": "func_tankpulselaser",
      "type": "SolidClass",
      "description": "Brush Pulse Laser",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "PulseSpeed",
          "title": "Pulse Speed",
          "description": "How fast does pulse travel",
          "deflt": 1000
        },
        {
          "type": "color255",
          "name": "PulseColor",
          "title": "Pulse Color",
          "description": "Color of the pulse",
          "deflt": "255 0 0"
        },
        {
          "type": "float",
          "name": "PulseWidth",
          "title": "Pulse Width",
          "description": "Width of the pulse",
          "deflt": "20"
        },
        {
          "type": "float",
          "name": "PulseLife",
          "title": "Pulse Life",
          "description": "(Seconds)  How long the pulse lasts",
          "deflt": 2
        },
        {
          "type": "float",
          "name": "PulseLag",
          "title": "Pulse Lag",
          "description": "(Seconds)  How far behind is pulse tail",
          "deflt": "0.05"
        },
        {
          "type": "sound",
          "name": "PulseFireSound",
          "title": "Pulse Fire Sound",
          "description": "Sound played when pulse fires",
          "deflt": ""
        }
      ]
    },
    {
      "name": "func_tanklaser",
      "type": "SolidClass",
      "description": "Brush Laser Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "laserentity",
          "title": "env_laser Entity"
        }
      ]
    },
    {
      "name": "func_tankrocket",
      "type": "SolidClass",
      "description": "Brush Rocket Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "rocketspeed",
          "title": "Projectile speed",
          "description": "Speed the rocket will travel at.",
          "deflt": 800
        }
      ]
    },
    {
      "name": "func_tankairboatgun",
      "type": "SolidClass",
      "description": "Airboat Gun Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "airboat_gun_model",
          "title": "Name of a prop_dynamic which is the airboat gun model"
        }
      ]
    },
    {
      "name": "func_tankapcrocket",
      "type": "SolidClass",
      "description": "APC Rocket Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "rocketspeed",
          "title": "Projectile speed",
          "description": "Speed the rocket will travel at.",
          "deflt": 800
        },
        {
          "type": "integer",
          "name": "burstcount",
          "title": "Burst shot count",
          "description": "Number of missiles to shoot in a burst",
          "deflt": 10
        }
      ],
      "inputs": [
        {
          "name": "DeathVolley",
          "description": "Fire a burst of rockets cause we're dying.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_tankmortar",
      "type": "SolidClass",
      "description": "Brush Mortar Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "iMagnitude",
          "title": "Explosion Magnitude",
          "deflt": 100
        },
        {
          "type": "string",
          "name": "firedelay",
          "title": "Shell travel time",
          "description": "How long after the turret fires before the shell impacts",
          "deflt": 2
        },
        {
          "type": "sound",
          "name": "firestartsound",
          "title": "Firing start sound",
          "description": "Sound of the mortar firing",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "fireendsound",
          "title": "Firing end sound",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "incomingsound",
          "title": "Incoming Shell Sound",
          "description": "Sound of the shell falling on the target",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "warningtime",
          "title": "Incoming warning time",
          "description": "How long before the shell impacts to play the warning sound",
          "deflt": "1"
        },
        {
          "type": "float",
          "name": "firevariance",
          "title": "Fire time variance",
          "description": "How much variability to add to fire rate (time +-)",
          "deflt": "0"
        }
      ],
      "inputs": [
        {
          "name": "FireAtWill",
          "description": "Allow tank to fire next shot as soon as ready.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_tankphyscannister",
      "type": "SolidClass",
      "description": "PhysCannister Turret",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "barrel_volume",
          "title": "Barrel Volume",
          "description": "Name of a trigger the specifies the volume in which cannisters must be placed.",
          "deflt": ""
        }
      ]
    },
    {
      "name": "func_tank_combine_cannon",
      "type": "SolidClass",
      "description": "Combine sentry cannon",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseTank"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "ammotype",
          "title": "Ammo type",
          "deflt": "",
          "choices": {
            "": "None",
            "Pistol": "Pistol",
            "SMG1": "SMG1",
            "AR2": "AR2",
            "CombineHeavyCannon": "Combine Heavy Cannon"
          }
        }
      ],
      "inputs": [
        {
          "name": "DisableHarrass",
          "description": "Disable the cannon tracking an unseen player",
          "type": "void"
        },
        {
          "name": "EnableHarrass",
          "description": "Allow the cannon to track and pester a player who is hiding (DEFAULT)",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnShotAtPlayer",
          "description": "Fired everytime the cannon shoots at the player",
          "type": "void"
        }
      ]
    },
    {
      "name": "Item",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "color",
          "values": [
            0,
            0,
            200
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "Shadow",
            "GMODSandbox"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademindist"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademaxdist"
          ]
        }
      ],
      "outputs": [
        {
          "name": "OnPlayerTouch",
          "description": "Fires when the player touches this object",
          "type": "void"
        },
        {
          "name": "OnCacheInteraction",
          "description": "This output fires when the player proves they have 'found' this item. Fires on: Player Touch (whether or not player actually acquires the item), Picked up by +USE, Picked up by Gravity Gun, Punted by Gravity Gun.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "fademindist",
          "title": "Start Fade Dist/Pixels",
          "description": "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade.",
          "deflt": -1
        },
        {
          "type": "float",
          "name": "fademaxdist",
          "title": "End Fade Dist/Pixels",
          "description": "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "fadescale",
          "title": "Fade Scale",
          "description": "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades.",
          "deflt": 1
        }
      ],
      "flags": [
        {
          "title": "Start Constrained",
          "value": 1,
          "enabled": false
        }
      ]
    },
    {
      "name": "item_dynamic_resupply",
      "type": "PointClass",
      "description": "A dynamic item. When the player enters the PVS of this entity, it will determine the item most needed by the player, spawn one of those items, and remove itself. To determine which item the player most needs, it calculates which of the Desired Health/Armor/Ammo ratios the player is farthest from.\\n\\nIf the player is above all the desired levels, then no item will be spawned, unless this item_dynamic_resupply was created by an item_item_crate. In that case, a random piece of ammo used by a weapon, that the player has, will be spawned. If the 'Fallback to Health Vial' spawnflag is set, a health vial will be spawned instead of the ammo.\\n\\nBy default, the item_dynamic_resupply uses the values inside the Master resupply, instead of using it's own values. This makes it easy to tweak the desired loadout of many resupplies. The BecomeMaster input allows you to switch Masters dynamically as the level progresses.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/healthkit.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Use Master's values",
          "value": 1,
          "enabled": true
        },
        {
          "title": "Is Master",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Fallback to Health Vial",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Alternate master",
          "value": 16,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "DesiredHealth",
          "title": "Desired Health Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max health.",
          "deflt": "1"
        },
        {
          "type": "float",
          "name": "DesiredArmor",
          "title": "Desired Armor Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max armor.",
          "deflt": "0.3"
        },
        {
          "type": "float",
          "name": "DesiredAmmoPistol",
          "title": "Desired Pistol Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.5"
        },
        {
          "type": "float",
          "name": "DesiredAmmoSMG1",
          "title": "Desired SMG1 Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.5"
        },
        {
          "type": "float",
          "name": "DesiredAmmoSMG1_Grenade",
          "title": "Desired SMG1 Grenade Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.1"
        },
        {
          "type": "float",
          "name": "DesiredAmmoAR2",
          "title": "Desired AR2 Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.4"
        },
        {
          "type": "float",
          "name": "DesiredAmmoBuckshot",
          "title": "Desired Shotgun Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.5"
        },
        {
          "type": "float",
          "name": "DesiredAmmoRPG_Round",
          "title": "Desired RPG Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "DesiredAmmoGrenade",
          "title": "Desired Grenade Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0.1"
        },
        {
          "type": "float",
          "name": "DesiredAmmo357",
          "title": "Desired 357 Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "DesiredAmmoCrossbow",
          "title": "Desired Crossbow Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "DesiredAmmoAR2_AltFire",
          "title": "Desired AR2 Alt-fire Ammo Ratio",
          "description": "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity.",
          "deflt": "0"
        }
      ],
      "inputs": [
        {
          "name": "CalculateType",
          "description": "Force the dynamic resupply to calculate which item it should spawn.",
          "type": "void"
        },
        {
          "name": "BecomeMaster",
          "description": "Make this resupply the master resupply. All other resupplies set to Use Master's Values will now use this resupply's values.",
          "type": "void"
        }
      ]
    },
    {
      "name": "item_ammo_pistol",
      "type": "PointClass",
      "description": "Box of Pistol ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/boxsrounds.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_pistol_large",
      "type": "PointClass",
      "description": "Large Box of Pistol ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/boxsrounds.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_smg1",
      "type": "PointClass",
      "description": "Box of SMG1 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/boxmrounds.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_smg1_large",
      "type": "PointClass",
      "description": "Large Box of SMG1 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/boxmrounds.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_ar2",
      "type": "PointClass",
      "description": "Box of AR2 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/combine_rifle_cartridge01.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_ar2_large",
      "type": "PointClass",
      "description": "Large Box of AR2 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/combine_rifle_cartridge01.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_357",
      "type": "PointClass",
      "description": "Box of 357 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/357ammo.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_357_large",
      "type": "PointClass",
      "description": "Large Box of 357 ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/357ammobox.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_crossbow",
      "type": "PointClass",
      "description": "Box of Crossbow ammo",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/CrossbowRounds.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_box_buckshot",
      "type": "PointClass",
      "description": "Box Buckshot",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/BoxBuckshot.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_rpg_round",
      "type": "PointClass",
      "description": "RPG Round",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_missile_closed.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_smg1_grenade",
      "type": "PointClass",
      "description": "SMG1 Grenade",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/AR2_Grenade.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_battery",
      "type": "PointClass",
      "description": "HEV battery",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/battery.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_healthkit",
      "type": "PointClass",
      "description": "Small Health Kit",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/healthkit.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_healthvial",
      "type": "PointClass",
      "description": "Personal Health Kit",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/healthvial.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_ammo_ar2_altfire",
      "type": "PointClass",
      "description": "AR2 Alt-fire Round",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/combine_rifle_ammo01.mdl"
          ]
        }
      ]
    },
    {
      "name": "item_suit",
      "type": "PointClass",
      "description": "HEV Suit",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Item"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/hevsuit.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Short Logon",
          "value": 1,
          "enabled": false
        }
      ]
    },
    {
      "name": "item_ammo_crate",
      "type": "PointClass",
      "description": "Ammo Crate",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "BaseFadeProp"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/ammocrate_rockets.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "AmmoType",
          "title": "Ammo Type",
          "deflt": 0,
          "choices": {
            "0": "Pistol",
            "1": "SMG1",
            "2": "AR2",
            "3": "RPG Rounds",
            "4": "Buckshot",
            "5": "Grenades",
            "6": "357",
            "7": "XBowBolt",
            "8": "AR2 Alt-Fire Round",
            "9": "SMG Alt-Fire grenade"
          }
        }
      ],
      "inputs": [
        {
          "name": "Kill",
          "description": "Remove the ammo crate",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnUsed",
          "description": "Fires when +used by the player.",
          "type": "void"
        }
      ]
    },
    {
      "name": "item_item_crate",
      "type": "PointClass",
      "description": "Item Crate",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BasePropPhysics",
            "Targetname",
            "Angles",
            "DamageFilter",
            "BaseFadeProp"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/items/item_item_crate.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "CrateType",
          "title": "Crate Contains",
          "deflt": 0,
          "choices": {
            "0": "Contains specified item"
          }
        },
        {
          "type": "choices",
          "name": "CrateAppearance",
          "title": "Crate Appearance",
          "deflt": 0,
          "choices": {
            "0": "Default Appearance",
            "1": "Radar Beacon Crate"
          }
        },
        {
          "type": "pointentityclass",
          "name": "ItemClass",
          "title": "Item Type",
          "description": "Class name of the entity to spawn when the crate is broken",
          "deflt": "item_dynamic_resupply"
        },
        {
          "type": "integer",
          "name": "ItemCount",
          "title": "Item Count",
          "description": "Number of items to emit upon breakage",
          "deflt": 1
        },
        {
          "type": "target_destination",
          "name": "SpecificResupply",
          "title": "Specific resupply",
          "description": "If item type is item_dynamic_resupply, specify a specific one to use instead of the master",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Kill",
          "description": "Remove the item crate",
          "type": "void"
        },
        {
          "name": "Break",
          "description": "Breaks the breakable.",
          "type": "void"
        },
        {
          "name": "SetHealth",
          "description": "Sets a new value for health. If the breakable's health reaches zero it will break.",
          "type": "integer"
        },
        {
          "name": "AddHealth",
          "description": "Adds health to the breakable. If the breakable's health reaches zero it will break.",
          "type": "integer"
        },
        {
          "name": "RemoveHealth",
          "description": "Removes health from the breakable. If the breakable's health reaches zero it will break.",
          "type": "integer"
        }
      ],
      "outputs": [
        {
          "name": "OnBreak",
          "description": "Fires when broken.",
          "type": "void"
        },
        {
          "name": "OnHealthChanged",
          "description": "Fires when the health of this breakable changes, passing the new value of health as a percentage of max health, from [0..1].",
          "type": "float"
        },
        {
          "name": "OnCacheInteraction",
          "description": "This output fires when the player proves they have 'found' this crate. Fires on: Picked up by +USE, Picked up by Gravity Gun, Punted by Gravity Gun, Broken.",
          "type": "void"
        }
      ]
    },
    {
      "name": "item_healthcharger",
      "type": "PointClass",
      "description": "Health Charger",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "BaseFadeProp"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/props_combine/health_charger001.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "_minlight",
          "title": "Minimum light level"
        }
      ],
      "outputs": [
        {
          "name": "OutRemainingHealth",
          "description": "Remaining Health.",
          "type": "float"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fired when the player +USEs the charger.",
          "type": "void"
        }
      ]
    },
    {
      "name": "item_suitcharger",
      "type": "PointClass",
      "description": "Battery recharger",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "BaseFadeProp"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/props_combine/suit_charger001.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "_minlight",
          "title": "Minimum light level"
        }
      ],
      "flags": [
        {
          "title": "Citadel recharger",
          "value": 8192,
          "enabled": false
        },
        {
          "title": "Kleiner's recharger",
          "value": 16384,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Recharge",
          "description": "Recharge to full",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OutRemainingCharge",
          "description": "Remaining Charge.",
          "type": "float"
        },
        {
          "name": "OnHalfEmpty",
          "description": "Half-Empty",
          "type": "void"
        },
        {
          "name": "OnEmpty",
          "description": "Empty",
          "type": "void"
        },
        {
          "name": "OnFull",
          "description": "Recharged to full.",
          "type": "void"
        },
        {
          "name": "OnPlayerUse",
          "description": "Fired when the player +USEs the charger.",
          "type": "void"
        }
      ]
    },
    {
      "name": "Weapon",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "color",
          "values": [
            0,
            0,
            200
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "GMODSandbox"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademindist"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademaxdist"
          ]
        }
      ],
      "flags": [
        {
          "title": "Start constrained",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Deny player pickup (reserve for NPC)",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Not puntable by Gravity Gun",
          "value": 4,
          "enabled": false
        }
      ],
      "outputs": [
        {
          "name": "OnPlayerUse",
          "description": "Fires when the player +uses this weapon",
          "type": "void"
        },
        {
          "name": "OnPlayerPickup",
          "description": "Fires when the player picks up this weapon",
          "type": "void"
        },
        {
          "name": "OnNPCPickup",
          "description": "Fires when an NPC picks up this weapon",
          "type": "void"
        },
        {
          "name": "OnCacheInteraction",
          "description": "Fires when the player 'proves' they've found this weapon. Fires on: Player Touch, +USE pickup, Gravity Gun pickup, Gravity Gun punt.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "fademindist",
          "title": "Start Fade Dist/Pixels",
          "description": "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade.",
          "deflt": -1
        },
        {
          "type": "float",
          "name": "fademaxdist",
          "title": "End Fade Dist/Pixels",
          "description": "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades.",
          "deflt": 0
        },
        {
          "type": "float",
          "name": "fadescale",
          "title": "Fade Scale",
          "description": "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified. This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades.",
          "deflt": 1
        }
      ]
    },
    {
      "name": "weapon_crowbar",
      "type": "PointClass",
      "description": "Crowbar",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_crowbar.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_stunstick",
      "type": "PointClass",
      "description": "StunStick",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_stunbaton.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_pistol",
      "type": "PointClass",
      "description": "Pistol",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_pistol.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_ar2",
      "type": "PointClass",
      "description": "Assault Rifle 2",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_irifle.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_rpg",
      "type": "PointClass",
      "description": "Missile Launcher",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_rocket_launcher.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_smg1",
      "type": "PointClass",
      "description": "SMG1",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_smg1.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_357",
      "type": "PointClass",
      "description": "357",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_357.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_crossbow",
      "type": "PointClass",
      "description": "Crossbow",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_crossbow.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_shotgun",
      "type": "PointClass",
      "description": "Shotgun",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_shotgun.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_frag",
      "type": "PointClass",
      "description": "Frag Grenade",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_grenade.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_physcannon",
      "type": "PointClass",
      "description": "Gravity Gun",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/w_physics.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_bugbait",
      "type": "PointClass",
      "description": "Bug bait",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/spore.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_alyxgun",
      "type": "PointClass",
      "description": "Alyx Gun",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/W_Alyx_Gun.mdl"
          ]
        }
      ]
    },
    {
      "name": "weapon_annabelle",
      "type": "PointClass",
      "description": "Annabelle (Grigori)",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/weapons/W_annabelle.mdl"
          ]
        }
      ]
    },
    {
      "name": "trigger_rpgfire",
      "type": "SolidClass",
      "description": "A volumetric trigger that triggers whenever an RPG is fired within it.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger"
          ]
        }
      ],
      "outputs": [
        {
          "name": "OnTrigger",
          "description": "Fires while the trigger is activated",
          "type": "void"
        }
      ]
    },
    {
      "name": "trigger_vphysics_motion",
      "type": "SolidClass",
      "description": "A volumetric trigger that affects the motion of vphysics objects that touch it.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Trigger"
          ]
        }
      ],
      "flags": [
        {
          "title": "Can move (through hierarchical attachment)",
          "value": 4096,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "StartDisabled",
          "title": "Start Disabled",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "filterclass",
          "name": "filtername",
          "title": "Filter Name",
          "description": "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
        },
        {
          "type": "float",
          "name": "SetGravityScale",
          "title": "Scale gravity of objects in the field.",
          "deflt": "1.0"
        },
        {
          "type": "float",
          "name": "SetAdditionalAirDensity",
          "title": "Additional air density for drag",
          "deflt": "0"
        },
        {
          "type": "float",
          "name": "SetVelocityLimit",
          "title": "Max velocity in field (0 disables)",
          "deflt": "0.0"
        },
        {
          "type": "float",
          "name": "SetVelocityLimitDelta",
          "title": "Max amount to reduce velocity per second when it exceeds the velocity limit (0 disables)",
          "deflt": "0.0"
        },
        {
          "type": "float",
          "name": "SetVelocityScale",
          "title": "Velocity scale/drag",
          "deflt": "1.0"
        },
        {
          "type": "float",
          "name": "SetAngVelocityLimit",
          "title": "Max angular velocity in field (degrees/s, 0 disables)",
          "deflt": "0.0"
        },
        {
          "type": "float",
          "name": "SetAngVelocityScale",
          "title": "Angular Velocity scale/drag",
          "deflt": "1.0"
        },
        {
          "type": "float",
          "name": "SetLinearForce",
          "title": "Linear force (0 disables)",
          "deflt": "0.0"
        },
        {
          "type": "angle",
          "name": "SetLinearForceAngles",
          "title": "Direction of linear force (Pitch Yaw Roll (Y Z X))",
          "deflt": "0 0 0"
        },
        {
          "type": "string",
          "name": "ParticleTrailMaterial",
          "title": "Particle Trail Material",
          "description": "Name of a material to use for the particle trail, no name means no particle trail"
        },
        {
          "type": "float",
          "name": "ParticleTrailLifetime",
          "title": "Particle Trail Lifetime",
          "description": "Lifetime of the particles to emit",
          "deflt": 4
        },
        {
          "type": "float",
          "name": "ParticleTrailStartSize",
          "title": "Particle Trail Starting Sprite Size",
          "description": "Starting size of the sprite to emit",
          "deflt": 2
        },
        {
          "type": "float",
          "name": "ParticleTrailEndSize",
          "title": "Particle Trail Ending Sprite Size",
          "description": "Ending size of the sprite to emit",
          "deflt": 3
        }
      ],
      "inputs": [
        {
          "name": "SetGravityScale",
          "description": "Scale gravity of objects in the field.",
          "type": "float"
        },
        {
          "name": "SetAdditionalAirDensity",
          "description": "Additional air density for drag",
          "type": "float"
        },
        {
          "name": "SetVelocityLimit",
          "description": "Max velocity in field.",
          "type": "float"
        },
        {
          "name": "SetVelocityLimitDelta",
          "description": "Max amount to reduce velocity per second",
          "type": "float"
        },
        {
          "name": "SetVelocityLimitTime",
          "description": "Accepts two arguments: the first is the new velocity limit, the second is the time it takes to ramp to that value",
          "type": "string"
        },
        {
          "name": "SetVelocityScale",
          "description": "Velocity scale/drag",
          "type": "float"
        },
        {
          "name": "SetAngVelocityLimit",
          "description": "Max angular velocity in field.",
          "type": "float"
        },
        {
          "name": "SetAngVelocityScale",
          "description": "Angular Velocity scale/drag",
          "type": "float"
        },
        {
          "name": "SetLinearForce",
          "description": "Linear force (0 disables)",
          "type": "float"
        },
        {
          "name": "Enable",
          "description": "Enable the trigger.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable the trigger.",
          "type": "void"
        },
        {
          "name": "Toggle",
          "description": "Toggle enable/disable.",
          "type": "void"
        }
      ]
    },
    {
      "name": "point_bugbait",
      "type": "PointClass",
      "description": "Bugbait sensor point",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            16,
            16,
            16
          ]
        },
        {
          "name": "sphere",
          "values": []
        },
        {
          "name": "color",
          "values": [
            255,
            255,
            0
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "Enabled",
          "title": "Start Enabled",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "integer",
          "name": "radius",
          "title": "Sensor Radius",
          "deflt": 512
        }
      ],
      "flags": [
        {
          "title": "Do not call antlions to position",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Don't activate on thrown bugbait splashes",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Don't activate on squeezed bugbait",
          "value": 4,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable the sensor.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable the sensor.",
          "type": "void"
        },
        {
          "name": "Toggle",
          "description": "Toggle the sensor.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnBaited",
          "description": "Fires when bugbait lands within a radius of the sensor",
          "type": "void"
        }
      ]
    },
    {
      "name": "weapon_brickbat",
      "type": "PointClass",
      "description": "Brickbat",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Weapon"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "BrickbatType",
          "title": "BrickbatType",
          "deflt": "Rock",
          "choices": {
            "0": "Rock",
            "1": "Beer Bottle",
            "2": "Headcrab",
            "3": "Cremator Head"
          }
        }
      ]
    },
    {
      "name": "path_corner",
      "type": "PointClass",
      "description": "Generic path point",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "size",
          "values": [
            16,
            16,
            16
          ]
        },
        {
          "name": "line",
          "values": [
            255,
            255,
            255,
            "targetname",
            "target"
          ]
        },
        {
          "name": "color",
          "values": [
            247,
            181,
            82
          ]
        }
      ],
      "flags": [
        {
          "title": "Wait for retrigger",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Teleport to THIS path_corner",
          "value": 2,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Next stop target"
        },
        {
          "type": "integer",
          "name": "wait",
          "title": "Wait here (secs)",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "speed",
          "title": "New Train Speed",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "yaw_speed",
          "title": "New Train rot. Speed",
          "deflt": 0
        }
      ],
      "inputs": [
        {
          "name": "SetNextPathCorner",
          "description": "Sets next pathcorner",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnPass",
          "description": "Fires when a path follower passes this point",
          "type": "void"
        }
      ]
    },
    {
      "name": "path_corner_crash",
      "type": "PointClass",
      "description": "Helicopter Crash Path",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            16,
            16,
            16
          ]
        },
        {
          "name": "color",
          "values": [
            255,
            0,
            0
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Next stop target"
        }
      ]
    },
    {
      "name": "player_loadsaved",
      "type": "PointClass",
      "description": "Load Auto-Saved game",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -16,
            -16,
            -16,
            16,
            16,
            16
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "duration",
          "title": "Fade Duration (seconds)",
          "deflt": "2"
        },
        {
          "type": "string",
          "name": "holdtime",
          "title": "Hold Fade (seconds)",
          "deflt": "0"
        },
        {
          "type": "integer",
          "name": "renderamt",
          "title": "Fade Alpha",
          "deflt": 255
        },
        {
          "type": "color255",
          "name": "rendercolor",
          "title": "Fade Color (R G B)",
          "deflt": "0 0 0"
        },
        {
          "type": "string",
          "name": "loadtime",
          "title": "Reload delay",
          "deflt": "0"
        }
      ],
      "inputs": [
        {
          "name": "Reload",
          "description": "Ends this game and reloads",
          "type": "void"
        }
      ]
    },
    {
      "name": "player_weaponstrip",
      "type": "PointClass",
      "description": "Strips player's weapons",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -16,
            -16,
            -16,
            16,
            16,
            16
          ]
        }
      ],
      "inputs": [
        {
          "name": "Strip",
          "description": "Strip player's weapons",
          "type": "void"
        },
        {
          "name": "StripWeaponsAndSuit",
          "description": "Strip player's weapons and his suit",
          "type": "void"
        }
      ]
    },
    {
      "name": "player_speedmod",
      "type": "PointClass",
      "description": "Speeds up or slows down player velocity over time (slow mo/fast forward)",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "size",
          "values": [
            -16,
            -16,
            -16,
            16,
            16,
            16
          ]
        }
      ],
      "flags": [
        {
          "title": "Suppress weapons",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Suppress HUD",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Suppress jump",
          "value": 4,
          "enabled": false
        },
        {
          "title": "Suppress duck",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Suppress use",
          "value": 16,
          "enabled": false
        },
        {
          "title": "Suppress sprint",
          "value": 32,
          "enabled": false
        },
        {
          "title": "Suppress attack",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Suppress zoom",
          "value": 128,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "ModifySpeed",
          "description": "Modifies player speed by X ammount.",
          "type": "float"
        }
      ]
    },
    {
      "name": "logic_choreographed_scene",
      "type": "PointClass",
      "description": "Manages a choreographed scene of one or more actors.",
      "parameters": [
        {
          "name": "color",
          "values": [
            0,
            0,
            255
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/choreo_scene.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "scene",
          "name": "SceneFile",
          "title": "Scene file"
        },
        {
          "type": "target_destination",
          "name": "target1",
          "title": "Target 1"
        },
        {
          "type": "target_destination",
          "name": "target2",
          "title": "Target 2"
        },
        {
          "type": "target_destination",
          "name": "target3",
          "title": "Target 3"
        },
        {
          "type": "target_destination",
          "name": "target4",
          "title": "Target 4"
        },
        {
          "type": "target_destination",
          "name": "target5",
          "title": "Target 5"
        },
        {
          "type": "target_destination",
          "name": "target6",
          "title": "Target 6"
        },
        {
          "type": "target_destination",
          "name": "target7",
          "title": "Target 7"
        },
        {
          "type": "target_destination",
          "name": "target8",
          "title": "Target 8"
        },
        {
          "type": "choices",
          "name": "busyactor",
          "title": "If an Actor is talking...",
          "description": "What to do if an actor this scene needs is already talking when this scene is told to start.",
          "deflt": 1,
          "choices": {
            "0": "Start immediately",
            "1": "Wait for actor to finish",
            "2": "Interrupt at next interrupt event",
            "3": "Cancel at next interrupt event"
          }
        },
        {
          "type": "choices",
          "name": "onplayerdeath",
          "title": "On player death",
          "description": "What should this entity do if the player dies",
          "deflt": 0,
          "choices": {
            "0": "Do Nothing",
            "1": "Cancel Script and return to AI"
          }
        }
      ],
      "inputs": [
        {
          "name": "Start",
          "description": "Starts playback of the scene file",
          "type": "void"
        },
        {
          "name": "Pause",
          "description": "Pauses playback of the scene file",
          "type": "void"
        },
        {
          "name": "Resume",
          "description": "Resumes playback of the scene if it has been paused",
          "type": "void"
        },
        {
          "name": "Cancel",
          "description": "Cancels playback of the scene",
          "type": "void"
        },
        {
          "name": "CancelAtNextInterrupt",
          "description": "Cancels playback of the scene at the next interrupt event in the scene.",
          "type": "void"
        },
        {
          "name": "PitchShift",
          "description": "Multiplies the the pitch",
          "type": "float"
        },
        {
          "name": "InterjectResponse",
          "description": "Finds an actor who can respond to the specified concept string while the scene continues playing",
          "type": "string"
        },
        {
          "name": "StopWaitingForActor",
          "description": "Stop waiting on an actor to stop talking.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnStart",
          "description": "The scene has started",
          "type": "void"
        },
        {
          "name": "OnCompletion",
          "description": "The scene has completed",
          "type": "void"
        },
        {
          "name": "OnCanceled",
          "description": "The scene has been canceled",
          "type": "void"
        },
        {
          "name": "OnTrigger1",
          "description": "Scene trigger 1",
          "type": "void"
        },
        {
          "name": "OnTrigger2",
          "description": "Scene trigger 2",
          "type": "void"
        },
        {
          "name": "OnTrigger3",
          "description": "Scene trigger 3",
          "type": "void"
        },
        {
          "name": "OnTrigger4",
          "description": "Scene trigger 4",
          "type": "void"
        },
        {
          "name": "OnTrigger5",
          "description": "Scene trigger 5",
          "type": "void"
        },
        {
          "name": "OnTrigger6",
          "description": "Scene trigger 6",
          "type": "void"
        },
        {
          "name": "OnTrigger7",
          "description": "Scene trigger 7",
          "type": "void"
        },
        {
          "name": "OnTrigger8",
          "description": "Scene trigger 8",
          "type": "void"
        },
        {
          "name": "OnTrigger9",
          "description": "Scene trigger 9",
          "type": "void"
        },
        {
          "name": "OnTrigger10",
          "description": "Scene trigger 10",
          "type": "void"
        },
        {
          "name": "OnTrigger11",
          "description": "Scene trigger 11",
          "type": "void"
        },
        {
          "name": "OnTrigger12",
          "description": "Scene trigger 12",
          "type": "void"
        },
        {
          "name": "OnTrigger13",
          "description": "Scene trigger 13",
          "type": "void"
        },
        {
          "name": "OnTrigger14",
          "description": "Scene trigger 14",
          "type": "void"
        },
        {
          "name": "OnTrigger15",
          "description": "Scene trigger 15",
          "type": "void"
        },
        {
          "name": "OnTrigger16",
          "description": "Scene trigger 16",
          "type": "void"
        }
      ]
    },
    {
      "name": "logic_scene_list_manager",
      "type": "PointClass",
      "description": "Manages a list of logic_choreographed_scene entities. Store choreo scenes in them in order that they will be played by other inputs. Whenever a scene plays, the manager will remove all scenes before that one in the list. The name of another logic_scene_list_manager can be entered in a slot instead of an invididual scene, which will cause all scenes in that manager to be removed when a later scene in this list is played.",
      "parameters": [
        {
          "name": "color",
          "values": [
            0,
            0,
            255
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/choreo_manager.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "scene0",
          "title": "Scene 1",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene1",
          "title": "Scene 2",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene2",
          "title": "Scene 3",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene3",
          "title": "Scene 4",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene4",
          "title": "Scene 5",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene5",
          "title": "Scene 6",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene6",
          "title": "Scene 7",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene7",
          "title": "Scene 8",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene8",
          "title": "Scene 9",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene9",
          "title": "Scene 10",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene10",
          "title": "Scene 11",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene11",
          "title": "Scene 12",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene12",
          "title": "Scene 13",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene13",
          "title": "Scene 14",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene14",
          "title": "Scene 15",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        },
        {
          "type": "target_destination",
          "name": "scene15",
          "title": "Scene 16",
          "description": "The name of a logic_choreographed_scene, or logic_scene_list_manager.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Shutdown",
          "description": "Remove the manager and all scenes referenced by it (and all scenes referenced by logic_scene_list_manager's embedded in this one).",
          "type": "void"
        }
      ]
    },
    {
      "name": "ai_sound",
      "type": "PointClass",
      "description": "This entity makes sounds or smells that can be sensed by NPCs, butnot by the player. This can be used to cause reactions in nearby NPCs.\\n\\nSound Types\\n  Combat: Will cause most NPCs to become alert\\n  World: Will cause most NPCs to become alert\\n  Danger: Will cause most NPCs to move away from the position of the sound\\n  Bullet Impact: \\n  Carcass: \\n  Meat: \\n  Garbage: \\n  Thumper: causes antlions to run away briefly\\n  Readiness: (Low, Medium, High) Causes player companions that can hear this sound to change readiness\\n",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "volume"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ai_sound.vmt"
          ]
        }
      ],
      "inputs": [
        {
          "name": "EmitAISound",
          "description": "Make the sound.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "volume",
          "title": "Volume",
          "description": "How far away this sound can be heard. This is a radius.",
          "deflt": 120
        },
        {
          "type": "float",
          "name": "duration",
          "title": "Duration",
          "description": "How long the sound persists each time you insert it.",
          "deflt": "0.5"
        },
        {
          "type": "choices",
          "name": "soundtype",
          "title": "Sound Type",
          "description": "The type of sound or smell will determine the reaction of NPCs that sense it.",
          "deflt": 0,
          "choices": {
            "0": "Select one",
            "1": "Combat",
            "2": "World",
            "8": "Danger",
            "16": "Bullet Impact",
            "32": "Carcass",
            "64": "Meat",
            "128": "Garbage",
            "256": "Thumper",
            "4096": "Move Away - Most NPCs will clear the radius of this sound when heard.",
            "16384": "Readiness - Low",
            "32768": "Readiness - Medium",
            "65536": "Readiness - High"
          }
        },
        {
          "type": "choices",
          "name": "soundcontext",
          "title": "Additional sound context (optional)",
          "description": "Optional settings specifying such things as who can or cannot hear the sound.",
          "deflt": 0,
          "choices": {
            "0": "Select one",
            "8388608": "Only Combine hear",
            "67108864": "Combine cannot hear"
          }
        },
        {
          "type": "target_destination",
          "name": "locationproxy",
          "title": "Location Proxy",
          "description": "The name of an entity to use as a proxy to determine the location at which to make the sound. If you specify an entity here, the sound will be made at that entity's location (!player included)",
          "deflt": ""
        }
      ]
    },
    {
      "name": "env_rotorwash",
      "type": "PointClass",
      "description": "Rotorwash Effect",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        }
      ],
      "flags": [
        {
          "title": "Ignore solid",
          "value": 1,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "DoEffect",
          "description": "Make a rotor puff",
          "type": "Void"
        }
      ]
    },
    {
      "name": "combine_mine",
      "type": "PointClass",
      "description": "Combine Land Mine",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/props_combine/combine_mine01.mdl"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "bounce",
          "title": "Bounce",
          "description": "Whether the mine should bounce up in the air before exploding.",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "LockSilently",
          "title": "Lock Silently",
          "description": "If yes, mine plays no sound when clamps close",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "StartDisarmed",
          "title": "Start Disarmed",
          "description": "If yes, mine begins dormant.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "Modification",
          "title": "Citizen modified",
          "description": "'Normal' is default Combine behavior. 'Cavern' detonates earlier in its jump, and has a different default skin.",
          "deflt": 0,
          "choices": {
            "0": "Normal",
            "1": "Cavern"
          }
        }
      ],
      "inputs": [
        {
          "name": "Disarm",
          "description": "Disarm this mine (open hooks and shut off) if not placed by player.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnPulledUp",
          "description": "Fires when this mine is uprooted with Gravity Gun",
          "type": "void"
        }
      ]
    },
    {
      "name": "env_ar2explosion",
      "type": "PointClass",
      "description": "AR2 explosion visual effect. Big, volume-filling brown cloud. Does not cause damage or emit sound.",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Explode",
          "description": "Make the explosion effect.",
          "type": "Void"
        }
      ],
      "properties": [
        {
          "type": "material",
          "name": "material",
          "title": "Particle Material",
          "description": "The material to use for each particle in the explosion.",
          "deflt": "particle/particle_noisesphere"
        }
      ]
    },
    {
      "name": "env_starfield",
      "type": "PointClass",
      "description": "Starfield effect",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "inputs": [
        {
          "name": "TurnOn",
          "description": "Turn on",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Turn off",
          "type": "void"
        },
        {
          "name": "SetDensity",
          "description": "Set the density of the starfield. It's a multiplier, so 1 is the default.",
          "type": "float"
        }
      ]
    },
    {
      "name": "env_flare",
      "type": "PointClass",
      "description": "Flare",
      "parameters": [
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "scale",
          "title": "Scale",
          "deflt": 1
        },
        {
          "type": "float",
          "name": "duration",
          "title": "Duration",
          "deflt": 30
        }
      ],
      "flags": [
        {
          "title": "No DLight",
          "value": 1,
          "enabled": false
        },
        {
          "title": "No Smoke",
          "value": 2,
          "enabled": false
        },
        {
          "title": "Infinite",
          "value": 4,
          "enabled": false
        },
        {
          "title": "Start off",
          "value": 8,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Start",
          "description": "Starts the flare burning. The flare will burn for the specified number of seconds (0 = infinite).",
          "type": "float"
        },
        {
          "name": "Die",
          "description": "Causes the flare to fade out over the specified number of seconds, and then die (0 = die instantly).",
          "type": "float"
        },
        {
          "name": "Launch",
          "description": "Launch the flare forward with the specified speed.",
          "type": "float"
        }
      ]
    },
    {
      "name": "env_muzzleflash",
      "type": "PointClass",
      "description": "Muzzle Flash",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname",
            "Angles"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "parentattachment",
          "title": "Parent Attachment",
          "description": "The name of an attachment on the parent to hierarchically attach to.",
          "deflt": ""
        },
        {
          "type": "float",
          "name": "scale",
          "title": "Scale",
          "description": "Size of the muzzle flash.",
          "deflt": "1"
        }
      ],
      "inputs": [
        {
          "name": "Fire",
          "description": "Fires the effect once.",
          "type": "void"
        }
      ]
    },
    {
      "name": "env_terrainmorph",
      "type": "PointClass",
      "description": "Morphs terrain by pulling vertices along a normal.\\n\\nPlace this entity the desired distance from a terrain surface and set ANGLES to the normal along which you want to pull the surface's vertices. If you set the INSTANT spawnflag, the morph will take place instantly instead of over time.\\n",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "color",
          "values": [
            0,
            180,
            0
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "startradius",
          "title": "Start Radius",
          "description": "Radius of the effect when morphing begins. Only this value is usedif the effect is flagged to occur instantly.",
          "deflt": 500
        },
        {
          "type": "integer",
          "name": "goalradius",
          "title": "Goal Radius",
          "description": "Radius of the effect at the end of morphing. The radius of this effect will change from Start Radius to Goal Radius over the duration of this effect. This value is ignored if the effect is flagged to occur instantly.",
          "deflt": 100
        },
        {
          "type": "integer",
          "name": "duration",
          "title": "Duration",
          "description": "The morph will take place over this period of time (seconds). Ignored if flagged to occur instantly",
          "deflt": 3
        },
        {
          "type": "integer",
          "name": "fraction",
          "title": "Displacement Fraction",
          "description": "If set to 1, the terrain surface will be pulled exactly to this entity's position. If set to 0.5, the surface will be pulled exactly half way to this entity's position. If set to 2, the surface will be pulled to an imaginary point twice as far away as this entity. (Any Displacement Fraction greater than 1.0 will result in clipping. The surface cannot be pulled beyond This entity's position and any vertices attemping will clip to this entity's position. You may use this feature to create mesas.)",
          "deflt": 1
        }
      ],
      "inputs": [
        {
          "name": "BeginMorph",
          "description": "Begin Morph",
          "type": "void"
        }
      ],
      "flags": [
        {
          "title": "Instant",
          "value": 1,
          "enabled": false
        }
      ]
    },
    {
      "name": "logic_achievement",
      "type": "PointClass",
      "description": "Sends an achievement system related event from the map to the achievement system.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "EnableDisable"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "AchievementEvent",
          "title": "Achievement Event",
          "description": "Named event is sent to the achievement system when this entity receives a 'FireEvent' input.",
          "deflt": 0,
          "choices": {
            "ACHIEVEMENT_EVENT_HL2_HIT_CANCOP_WITHCAN": "[HL2] Hit the trashcan cop with the can.",
            "ACHIEVEMENT_EVENT_HL2_PUT_CANINTRASH": "[HL2] Put the can in the trash.",
            "ACHIEVEMENT_EVENT_HL2_ESCAPE_APARTMENTRAID": "[HL2] Escape the apartment block raid.",
            "ACHIEVEMENT_EVENT_HL2_BREAK_MINITELEPORTER": "[HL2] Break the mini-teleporter in Kleiner's lab.",
            "ACHIEVEMENT_EVENT_HL2_GET_CROWBAR": "[HL2] Get the crowbar.",
            "ACHIEVEMENT_EVENT_HL2_GET_AIRBOAT": "[HL2] Get the Airboat",
            "ACHIEVEMENT_EVENT_HL2_GET_AIRBOATGUN": "[HL2] Get the airboat's mounted gun.",
            "ACHIEVEMENT_EVENT_HL2_FIND_VORTIGAUNTCAVE": "[HL2] Discover the hidden singing vortigaunt cave in chapter Water Hazard.",
            "ACHIEVEMENT_EVENT_HL2_KILL_CHOPPER": "[HL2] Destroy the hunter-chopper in Half-Life 2.",
            "ACHIEVEMENT_EVENT_HL2_FIND_HEVFACEPLATE": "[HL2] Find the HEV Suit Charger faceplate in Eli's scrapyard.",
            "ACHIEVEMENT_EVENT_HL2_GET_GRAVITYGUN": "[HL2] Get the Gravity Gun in Black Mesa East",
            "ACHIEVEMENT_EVENT_HL2_MAKEABASKET": "[HL2] Make a basket in Eli's scrapyard.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_RAVENHOLM_NOWEAPONS_START": "[HL2] Beat Ravenholm Gravgun only. (Start).",
            "ACHIEVEMENT_EVENT_HL2_BEAT_RAVENHOLM_NOWEAPONS_END": "[HL2] Beat Ravenholm Gravgun only. (End).",
            "ACHIEVEMENT_EVENT_HL2_BEAT_CEMETERY": "[HL2] Escort Gregori safely through the church cemetery.",
            "ACHIEVEMENT_EVENT_HL2_KILL_ENEMIES_WITHCRANE": "[HL2] Kill 3 enemies using the crane.",
            "ACHIEVEMENT_EVENT_HL2_PIN_SOLDIER_TOBILLBOARD": "[HL2] Pin the soldier to the billboard with the crossbow in chapter Highway 17.",
            "ACHIEVEMENT_EVENT_HL2_KILL_ODESSAGUNSHIP": "[HL2] Defend Little Odessa from the gunship attack.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_DONTTOUCHSAND": "[HL2] Cross the antlion beach in chapter Sandtraps without touching the sand.",
            "ACHIEVEMENT_EVENT_HL2_ENTER_NOVAPROSPEKT": "[HL2] Get inside Nova Prospekt",
            "ACHIEVEMENT_EVENT_HL2_BEAT_TURRETSTANDOFF2": "[HL2] Survive the second turret standoff in the prison.",
            "ACHIEVEMENT_EVENT_HL2_FOLLOWFREEMAN": "[HL2] Gain command of a squad of rebels in the uprising",
            "ACHIEVEMENT_EVENT_HL2_BEAT_TOXICTUNNEL": "[HL2] Get through the toxic tunnel under City 17 in Half-Life 2.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_PLAZASTANDOFF": "[HL2] Survive the Generator Plaza standoff in chapter Anticitizen One.",
            "ACHIEVEMENT_EVENT_HL2_KILL_ALLC1709SNIPERS": "[HL2] Kill all of the snipers in City 17.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_SUPRESSIONDEVICE": "[HL2] Shut down the supression device by disabling its generators.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_C1713STRIDERSTANDOFF": "[HL2] Survive the rooftop strider battle in the ruins of City 17.",
            "ACHIEVEMENT_EVENT_HL2_BEAT_GAME": "[HL2] Destroy the Citadel's reactor core (Beat Game).",
            "ACHIEVEMENT_EVENT_HL2_GMAN_KLEINERSLAB": "[HL2] G-Man: trainstation_05 on Kleiner's Monitor",
            "ACHIEVEMENT_EVENT_HL2_GMAN_TRAINCAR": "[HL2] G-Man: canals_01 on TV in vort train car",
            "ACHIEVEMENT_EVENT_HL2_GMAN_REDBARN": "[HL2] G-Man: canals_06 at the red barn",
            "ACHIEVEMENT_EVENT_HL2_GMAN_OUTDOORMONITOR": "[HL2] G-Man: canals_06 on giant outdoor monitor",
            "ACHIEVEMENT_EVENT_HL2_GMAN_CATWALK": "[HL2] G-Man: canals_12 on catwalk",
            "ACHIEVEMENT_EVENT_HL2_GMAN_DAM": "[HL2] G-Man: canals_13 to the left of the dam",
            "ACHIEVEMENT_EVENT_HL2_GMAN_TRAINTRACKS": "[HL2] G-Man: town_05 at the end of the tracks",
            "ACHIEVEMENT_EVENT_HL2_GMAN_ODESSA": "[HL2] G-Man: coast_03 odessa meeting",
            "ACHIEVEMENT_EVENT_HL2_GMAN_PRISONMONITOR": "[HL2] G-Man: prison_02 control room monitor",
            "ACHIEVEMENT_EVENT_HL2_GMAN_FOYERTV": "[HL2] G-Man: c17_02 on TV in the destroyed foyer",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_KLEINERSLAB": "[HL2] Lamda: Secret entrance to Kleiner's lab in trainstation_05",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CANALSSTATION": "[HL2] Lamda: canals_01 building by tracks",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_VENTCRAWL": "[HL2] Lamda: canals_01 vent crawl",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CANALSTUNNEL": "[HL2] Lamda: canals_01a tunnel",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SEWERGRATE": "[HL2] Lamda: canals_02 below grate in sewer corridor",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_STEAMPIPE": "[HL2] Lamda: canals_03 under steam pipe",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CURVEDROOM": "[HL2] Lamda: canals_05 on second level of curved room",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SHANTYTOWN": "[HL2] Lamda: canals_05 before shanty town",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_TUNNELLADDER": "[HL2] Lamda: canals_06 on overhead metal walkway in tunnel",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_REDBARN": "[HL2] Lamda: canals_06 at the red barn",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_FLOATINGRAMP": "DON'T USE ME [HL2] Lamda: canals_06 outside the pipe at floating ramp puzzle",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_ZOMBIEAMBUSH": "[HL2] Lamda: canals_06 outside exploded tanker (zombie ambush)",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_BELOWAPCS": "[HL2] Lamda: canals_07 in the wall below apcs",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_COUNTERWEIGHT": "[HL2] Lamda: canals_08 in counterweighted basket",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_RAILWAYBRIDGE": "[HL2] Lamda: canals_08 behind railway bridge piling",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_TUNNELPLATFORMS": "[HL2] Lamda: canals_09 on wooden platforms in tunnel",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_BANKEDCANAL": "[HL2] Lamda: canals_10 up banked side of canals passage",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CANALWALL": "[HL2] Lamda: canals_10 in wall opening after canals passage",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CHANNELSPLIT": "[HL2] Lamda: canals_12 right side of split channel",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_BMEDOCK": "[HL2] Lamda: eli_01 Black Mesa East dock",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_GENERATORS": "[HL2] Lamda: town_01 through ductwork behind generators",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CARCRUSHERARENA": "[HL2] Lamda: town_01 behind fence in car-crusher arena",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_RAVENHOLMATTIC": "[HL2] Lamda: town_01a in attic opposite map exit",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_MINETUNNELEXIT": "[HL2] Lamda: town_05 tunnel exit from ravenholm mine",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_COASTSHACK": "[HL2] Lamda: coast_01 shack after the buggy jump",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_POISONSHACK": "[HL2] Lamda: coast_03 poison headcrab shack",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_GUNSHIPVAN": "[HL2] Lamda: coast_04 broken down van after the gunship",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SUICIDECITIZEN": "[HL2] Lamda: coast_05 suicide citizen's gas tank cache",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_RAILROADSHACK": "[HL2] Lamda: coast_07 fenced off area outside of town",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_COASTABOVEBATTERY": "[HL2] Lamda: coast_09 above the bathroom in the battery puzzle building",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SANDSHACK": "[HL2] Lamda: coast_11 elevated shack after the board bridge",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_GMANCACHE": "[HL2] Lamda: prison_02 in the boarded up area of the gman sighting",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_CELLCACHE": "[HL2] Lamda: prison_03 in the prison cell",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_POISONLAUNDRY": "[HL2] Lamda: prison_05 in the laundry utility room",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SODAMACHINE": "[HL2] Lamda: prison_06 on top of the soda machine",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_STREETWARDOGWALL": "[HL2] Lamda: c17_02 next to first Combine wall",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_STREETWARSHACK": "[HL2] Lambda: c17_04 inside shack before metrocop holdout",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_STREETWARFENCE": "[HL2] Lamda: c17_05 behind fence before end of map",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_FREEWAYTUNNEL": "[HL2] Lamda: c17_06a at start of freeway tunnel",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_DRAWBRIDGE": "[HL2] Lamda: c17_06b before second drawbridge",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_PLAZAFENCE": "[HL2] Lamda: c17_06b behind fence before end of map",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_SEWERSCATWALKS": "[HL2] Lamda: c17_08 lowest catwalk at sewer entrance",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_POISONZOMBIEALCOVE": "[HL2] Lamda: c17_08 wall cubby next to poison zombie",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_PIPEHOPTUNNEL": "[HL2] Lamda: c17_08 end of pipe hop tunnel by poison zombie",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_EXITCATWALK": "[HL2] Lamda: c17_08 side of building next to hallway leading to level exit",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_ENDOFC1712B": "[HL2] Lamda: c17_12b at map exit",
            "ACHIEVEMENT_EVENT_HL2_LAMDACACHE_WHITEVAN": "[HL2] Lamda: c17_13 white van in underground garage",
            "ACHIEVEMENT_EVENT_EP1_BEAT_MAINELEVATOR": "[EP1] Reach the bottom of the main elevator shaft.",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITADELCORE_START": "[EP1] Contain the citadel core. (start)",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITADELCORE_END": "[EP1] Contain the citadel core. (end)",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITADELCORE": "[EP1] Contain the citadel core.",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITADELCORE_NOSTALKERKILLS": "[EP1] Contain the citadel core with no stalker kills",
            "ACHIEVEMENT_EVENT_EP1_BEAT_GARAGEELEVATORSTANDOFF": "[EP1] Survive long enough to get on the elevator in the parking garage.",
            "ACHIEVEMENT_EVENT_EP1_BEAT_HOSPITALATTICGUNSHIP": "[EP1] Destroy the gunship in the hospital attic.",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITIZENESCORT_NOCITIZENDEATHS_START": "[EP1] Don't let any citizens die when escorting them to the escape train (start).",
            "ACHIEVEMENT_EVENT_EP1_BEAT_CITIZENESCORT_NOCITIZENDEATHS_END": "[EP1] Don't let any citizens die when escorting them to the escape train (end).",
            "ACHIEVEMENT_EVENT_EP1_BEAT_GAME_NOHEALTHPICKUPS_START": "[EP1] Beat EP1 without picking up any health. (start)",
            "ACHIEVEMENT_EVENT_EP1_BEAT_GAME_NOHEALTHPICKUPS_END": "[EP1] Beat EP1 without picking up any health. (end)",
            "ACHIEVEMENT_EVENT_EP1_START_GAME": "[EP1] Began EP1 (for tracking One Free Bullet)",
            "ACHIEVEMENT_EVENT_EP1_BEAT_GAME": "[EP1] Beat EP1 (for tracking One Free Bullet)",
            "ACHIEVEMENT_EVENT_EP2_BEAT_ANTLIONINVASION": "[EP2] Hold off the antlion invasion inside the mine shaft",
            "ACHIEVEMENT_EVENT_EP2_BEAT_ANTLIONGUARDS": "[EP2] Defeat both antlion guards outside the White Forest",
            "ACHIEVEMENT_EVENT_EP2_BEAT_HUNTERAMBUSH": "[EP2] Survive the Hunter ambush at the radio tower.",
            "ACHIEVEMENT_EVENT_EP2_KILL_CHOPPER_NOMISSES_START": "[EP2] Start of the chopper arena battle.",
            "ACHIEVEMENT_EVENT_EP2_KILL_CHOPPER_NOMISSES_END": "[EP2] End of the chopper arena battle.",
            "ACHIEVEMENT_EVENT_EP2_KILL_COMBINECANNON": "[EP2] Destroy the Combine Cannon in the junkyard.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_RACEWITHDOG": "[EP2] Beat DOG in the race to the White Forest.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_ROCKETCACHEPUZZLE": "[EP2] Unlock the Rocket Launcher lambda cache in chapter Under The Radar.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_WHITEFORESTINN": "[EP2] Survive the invasion at White Forest Inn",
            "ACHIEVEMENT_EVENT_EP2_PUT_ITEMINROCKET": "[EP2] Send <some object from chapter 1> into space.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_MISSILESILO2": "[EP2] Secure the launch doors on missile silo 2.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_GAME": "[EP2] Save the missile silo from the Combine offensive.",
            "ACHIEVEMENT_EVENT_EP2_BEAT_OUTLAND12_NOBUILDINGSDESTROYED": "[EP2] Save the missile silo without losing any buildings.",
            "ACHIEVEMENT_EVENT_EP2_FIND_RADAR_CACHE": "[EP2] Found a radar cache in chapter Under The Radar.",
            "ACHIEVEMENT_EVENT_EP2_RADARCACHE_VAN": "[EP2] Radar Cache: 09 first van cache",
            "ACHIEVEMENT_EVENT_EP2_RADARCACHE_RPG": "[EP2] Radar Cache: 09 rpg cache",
            "ACHIEVEMENT_EVENT_EP2_RADARCACHE_SHACK": "[EP2] Radar Cache: 09 shack floor board cache",
            "ACHIEVEMENT_EVENT_EP2_RADARCACHE_CAVE": "[EP2] Radar Cache: 10 cave cache",
            "ACHIEVEMENT_EVENT_EP2_RADARCACHE_HANGING": "[EP2] Radar Cache: 10 hanging crate cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_01": "[EP2] Web Cache: ep2_outland_01a underwater cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_02": "[EP2] Web Cache: ep2_outland_03 grim pinata cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_03": "[EP2] Web Cache: ep2_outland_03 first arena exit tunnel wall cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_04": "[EP2] Web Cache: ep2_outland_03 second arena exit tunnel ceiling cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_05": "[EP2] Web Cache: ep2_outland_03 zombine grenade trap cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_06": "[EP2] Web Cache: ep2_outland_04 gear cave entry wall cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_07": "[EP2] Web Cache: ep2_outland_04 gear cave rockfall ceiling cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_08": "[EP2] Web Cache: ep2_outland_04 gear cave barnacle ceiling cache",
            "ACHIEVEMENT_EVENT_EP2_WEBCACHE_09": "[EP2] Web Cache: ep2_outland_04 gear cave poison crab wall cache",
            "ACHIEVEMENT_EVENT_PORTAL_GET_PORTALGUNS": "[PORTAL] Acquire the fully powered Aperture Science Handheld Portal Device.",
            "ACHIEVEMENT_EVENT_PORTAL_KILL_COMPANIONCUBE": "[PORTAL] Do whatever it takes to survive.",
            "ACHIEVEMENT_EVENT_PORTAL_ESCAPE_TESTCHAMBERS": "[PORTAL] Make the correct party escort submission position decision.",
            "ACHIEVEMENT_EVENT_PORTAL_BEAT_GAME": "[PORTAL] Complete Portal."
          }
        }
      ],
      "inputs": [
        {
          "name": "Toggle",
          "description": "Toggle the relay between enabled and disabled.",
          "type": "void"
        },
        {
          "name": "FireEvent",
          "description": "Tells the achievement system the specifed event has occured.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFired",
          "description": "When the event fires, this fires.",
          "type": "void"
        }
      ]
    },
    {
      "name": "point_camera",
      "type": "PointClass",
      "description": "Camera",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Parentname",
            "Angles"
          ]
        },
        {
          "name": "studioprop",
          "values": [
            "models/editor/camera.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Start Off",
          "value": 1,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "target_source",
          "name": "targetname",
          "title": "Name",
          "description": "The name that other entities refer to this entity by."
        },
        {
          "type": "float",
          "name": "FOV",
          "title": "FOV",
          "description": "Field of view in degrees",
          "deflt": 90
        },
        {
          "type": "choices",
          "name": "UseScreenAspectRatio",
          "title": "Screen Aspect Ratio",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "fogEnable",
          "title": "Fog Enable",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "color255",
          "name": "fogColor",
          "title": "Fog Color",
          "deflt": "0 0 0"
        },
        {
          "type": "float",
          "name": "fogStart",
          "title": "Fog Start",
          "description": "The near fog plane.",
          "deflt": 2048
        },
        {
          "type": "float",
          "name": "fogEnd",
          "title": "Fog End",
          "description": "The far fog/clipping plane.",
          "deflt": 4096
        },
        {
          "type": "float",
          "name": "fogMaxDensity",
          "title": "Fog Max Density [0..1]",
          "description": "The maximum fog density. 0=no fog, 1=full fog.",
          "deflt": 1
        }
      ],
      "inputs": [
        {
          "name": "ChangeFOV",
          "description": "Changes camera's FOV over time",
          "type": "string"
        },
        {
          "name": "SetOnAndTurnOthersOff",
          "description": "Turn the camera on, and turn all other cameras off.",
          "type": "void"
        },
        {
          "name": "SetOn",
          "description": "Turn the camera on.",
          "type": "void"
        },
        {
          "name": "SetOff",
          "description": "Turn the camera off.",
          "type": "void"
        }
      ]
    },
    {
      "name": "func_monitor",
      "type": "SolidClass",
      "description": "A monitor that renders the view from a given point_camera entity.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "func_brush"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Camera name"
        }
      ],
      "inputs": [
        {
          "name": "Toggle",
          "description": "Toggle - If on, turn off, if off, turn on.",
          "type": "void"
        },
        {
          "name": "Enable",
          "description": "Enable.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable.",
          "type": "void"
        },
        {
          "name": "SetCamera",
          "description": "Sets the camera to use for this monitor. Takes the name of a point_camera entity in the map.",
          "type": "string"
        }
      ]
    },
    {
      "name": "func_bulletshield",
      "type": "SolidClass",
      "description": "A shield that stops only bullets.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "func_brush"
          ]
        }
      ]
    },
    {
      "name": "BaseVehicle",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Origin",
            "Global",
            "prop_static_base",
            "GMODSandbox"
          ]
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "vehiclescript",
          "title": "Vehicle Script File",
          "deflt": "scripts/vehicles/jeep_test.txt"
        },
        {
          "type": "float",
          "name": "actionScale",
          "title": "Scale of action input / framerate",
          "deflt": "1"
        }
      ],
      "inputs": [
        {
          "name": "Action",
          "description": "Set the speed of the action animation",
          "type": "float"
        },
        {
          "name": "TurnOn",
          "description": "Turn on: Start engine & enable throttle",
          "type": "void"
        },
        {
          "name": "TurnOff",
          "description": "Turn off: Stop engine, disable throttle, engage brakes.",
          "type": "void"
        },
        {
          "name": "Lock",
          "description": "Prevent the player from entering or exiting the vehicle.",
          "type": "void"
        },
        {
          "name": "Unlock",
          "description": "Re-allow the player to enter or exit the vehicle.",
          "type": "void"
        }
      ]
    },
    {
      "name": "BaseDriveableVehicle",
      "type": "BaseClass",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseVehicle"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "VehicleLocked",
          "title": "Start locked",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "outputs": [
        {
          "name": "PlayerOn",
          "description": "Player entered the vehicle",
          "type": "void"
        },
        {
          "name": "PlayerOff",
          "description": "Player exited the vehicle",
          "type": "void"
        },
        {
          "name": "PressedAttack",
          "description": "Player Pressed attack key",
          "type": "void"
        },
        {
          "name": "PressedAttack2",
          "description": "Player Pressed attack2 key",
          "type": "void"
        },
        {
          "name": "AttackAxis",
          "description": "State of attack button [0,1]",
          "type": "string"
        },
        {
          "name": "Attack2Axis",
          "description": "State of attack2 button [0,1]",
          "type": "string"
        }
      ],
      "inputs": [
        {
          "name": "HandBrakeOn",
          "description": "Turns the handbrake on",
          "type": "void"
        },
        {
          "name": "HandBrakeOff",
          "description": "Releases the handbrake",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle",
      "type": "PointClass",
      "description": "Studiomodel vehicle that can be driven via inputs.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "inputs": [
        {
          "name": "Steer",
          "description": "Steer the vehicle +/-1",
          "type": "float"
        },
        {
          "name": "Throttle",
          "description": "Throttle +/-1",
          "type": "float"
        }
      ],
      "flags": [
        {
          "title": "Always Think (Run physics every frame)",
          "value": 1,
          "enabled": false
        }
      ]
    },
    {
      "name": "prop_vehicle_driveable",
      "type": "PointClass",
      "description": "Generic driveable studiomodel vehicle.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ]
    },
    {
      "name": "point_apc_controller",
      "type": "PointClass",
      "description": "APC Controller",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "studio",
          "values": []
        }
      ],
      "flags": [
        {
          "title": "Active",
          "value": 1,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "string",
          "name": "yawrate",
          "title": "Yaw rate",
          "deflt": "30"
        },
        {
          "type": "string",
          "name": "yawtolerance",
          "title": "Yaw tolerance",
          "deflt": "15"
        },
        {
          "type": "string",
          "name": "pitchrate",
          "title": "Pitch rate",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "pitchtolerance",
          "title": "Pitch tolerance",
          "deflt": "20"
        },
        {
          "type": "sound",
          "name": "rotatestartsound",
          "title": "Rotate Start Sound",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "rotatesound",
          "title": "Rotate Loop Sound",
          "deflt": ""
        },
        {
          "type": "sound",
          "name": "rotatestopsound",
          "title": "Rotate Stop Sound",
          "deflt": ""
        },
        {
          "type": "string",
          "name": "minRange",
          "title": "Minmum target range",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "maxRange",
          "title": "Maximum target range",
          "deflt": "0"
        },
        {
          "type": "string",
          "name": "targetentityname",
          "title": "Name of entity I should follow/attack",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Turn the APC rockets on",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Turn the APC rockets off (go dormant)",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFireAtTarget",
          "description": "Fires when a valid target is found and the APC should shoot rockets",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle_apc",
      "type": "PointClass",
      "description": "APC with mounted guns, can only be driven by a vehicle driver or a npc_apcdriver.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "missilehint",
          "title": "Missile Hint Target",
          "description": "Name of one or more info_apc_missile_hint entities to use to determine what to hit.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "FireMissileAt",
          "description": "A target to fire a missile at",
          "type": "target_destination"
        },
        {
          "name": "Destroy",
          "description": "Causes the APC to blow up.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnFiredMissile",
          "description": "Fired when the APC shoots a missile.",
          "type": "void"
        },
        {
          "name": "OnDeath",
          "description": "Fired when the APC is killed.",
          "type": "void"
        },
        {
          "name": "OnDamaged",
          "description": "Fired when the APC is damaged.",
          "type": "void"
        },
        {
          "name": "OnDamagedByPlayer",
          "description": "Fired when the APC is damaged by the player.",
          "type": "void"
        }
      ]
    },
    {
      "name": "info_apc_missile_hint",
      "type": "SolidClass",
      "description": "Something that helps APC missiles guide. If the missile can hit the associated target entitybetween the time it takes the current enemy to enter + leave the hint, then the missile will guide to the entity.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Origin",
            "Angles",
            "EnableDisable"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Target Entity",
          "description": "The entity that the missile will guide towards if the conditions are met.",
          "deflt": ""
        }
      ]
    },
    {
      "name": "prop_vehicle_jeep",
      "type": "PointClass",
      "description": "Driveable studiomodel jeep.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "inputs": [
        {
          "name": "StartRemoveTauCannon",
          "description": "Start the tau removal sequence.",
          "type": "void"
        },
        {
          "name": "FinishRemoveTauCannon",
          "description": "Finish the tau removal sequence.",
          "type": "void"
        },
        {
          "name": "LockEntrance",
          "description": "Stops NPC's from entering the vehicle until unlocked.",
          "type": "void"
        },
        {
          "name": "UnlockEntrance",
          "description": "Allows NPC's to enter the vehicle.",
          "type": "void"
        },
        {
          "name": "LockExit",
          "description": "Stops NPC's from exiting the vehicle until unlocked.",
          "type": "void"
        },
        {
          "name": "UnlockExit",
          "description": "Allows NPC's to exit the vehicle.",
          "type": "void"
        },
        {
          "name": "EnableRadar",
          "description": "Turn on the Jalopy radar",
          "type": "void"
        },
        {
          "name": "DisableRadar",
          "description": "Turn off the Jalopy radar",
          "type": "void"
        },
        {
          "name": "EnableRadarDetectEnemies",
          "description": "Enable Jalopy radar to detect Striders and Hunters",
          "type": "void"
        },
        {
          "name": "AddBusterToCargo",
          "description": "Put a striderbuster in the cargo trigger",
          "type": "void"
        },
        {
          "name": "SetCargoHopperVisibility",
          "description": "Set the strider buster hopper thingy to be visible, or invisible.",
          "type": "bool"
        },
        {
          "name": "DisablePhysGun",
          "description": "Disable Gravity Gun interactions with the jeep.",
          "type": "void"
        },
        {
          "name": "EnablePhysGun",
          "description": "Enable Gravity Gun interactions with the jeep (default).",
          "type": "void"
        },
        {
          "name": "CreateLinkController",
          "description": "Automatically builds and attaches a link controller to the car, which cuts the node connections under the car while the car is standing still.",
          "type": "void"
        },
        {
          "name": "DestroyLinkController",
          "description": "Destroys the link controller created by CreateLinkController.",
          "type": "void"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "CargoVisible",
          "title": "Hopper Visible",
          "description": "Is the striderbuster cargo hopper visible?",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "flags": [
        {
          "title": "HUD Locator Precache",
          "value": 1,
          "enabled": false
        }
      ],
      "outputs": [
        {
          "name": "OnCompanionEnteredVehicle",
          "description": "Companion has entered the vehicle.",
          "type": "void"
        },
        {
          "name": "OnCompanionExitedVehicle",
          "description": "Companion has exited the vehicle.",
          "type": "void"
        },
        {
          "name": "OnHostileEnteredVehicle",
          "description": "Hostile has entered the vehicle.",
          "type": "void"
        },
        {
          "name": "OnHostileExitedVehicle",
          "description": "Hostile has exited the vehicle.",
          "type": "void"
        }
      ]
    },
    {
      "name": "vehicle_viewcontroller",
      "type": "PointClass",
      "description": "Vehicle hack to control player view",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "inputs": [
        {
          "name": "ForcePlayerIn",
          "description": "Force the player into the vehicle. The animation to use can be specified in the parameter. Without a parameter, the player just teleports.",
          "type": "string"
        },
        {
          "name": "ForcePlayerOut",
          "description": "Force the player out of the vehicle.",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle_airboat",
      "type": "PointClass",
      "description": "Driveable studiomodel airboat.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/airboat.mdl"
        },
        {
          "type": "string",
          "name": "vehiclescript",
          "title": "Vehicle Script File",
          "deflt": "scripts/vehicles/airboat.txt"
        },
        {
          "type": "choices",
          "name": "EnableGun",
          "title": "Has Gun",
          "description": "Whether the airboat's gun is enabled or disabled.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "EnableGun",
          "description": "Enables or disables the airboat gun and associated crosshair.",
          "type": "bool"
        },
        {
          "name": "InputStartRotorWashForces",
          "description": "The airboat will start to be blown around by the helicopter rotor wash.",
          "type": "void"
        },
        {
          "name": "InputStopRotorWashForces",
          "description": "The airboat will no longer be blown around by the helicopter rotor wash.",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle_cannon",
      "type": "PointClass",
      "description": "Driveable studiomodel cannon.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ]
    },
    {
      "name": "prop_vehicle_crane",
      "type": "PointClass",
      "description": "Driveable studiomodel crane.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "magnetname",
          "title": "Magnet entity",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "ForcePlayerIn",
          "description": "Force the player to get into the crane. Only works in singleplayer.",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle_prisoner_pod",
      "type": "PointClass",
      "description": "Combine prisoner pod that the player can ride in.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle",
            "Parentname"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/vehicles/prisoner_pod.mdl"
        },
        {
          "type": "string",
          "name": "vehiclescript",
          "title": "Vehicle Script File",
          "deflt": "scripts/vehicles/prisoner_pod.txt"
        }
      ],
      "inputs": [
        {
          "name": "Open",
          "description": "Plays the pod's open animation and unlocks the pod for entry or exit.",
          "type": "void"
        },
        {
          "name": "Close",
          "description": "Plays the pod's close animation and locks the pod for entry or exit.",
          "type": "void"
        },
        {
          "name": "EnterVehicle",
          "description": "Forces the activator (or player) into the pod.",
          "type": "void"
        },
        {
          "name": "EnterVehicleImmediate",
          "description": "Forces the activator (or player) into the pod without enter/exit animations.",
          "type": "void"
        },
        {
          "name": "ExitVehicle",
          "description": "Boots the prisoner out of the pod.",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnOpen",
          "description": "Fired when the pod is open enough to enter.",
          "type": "void"
        },
        {
          "name": "OnClose",
          "description": "Fired when the pod too closed to enter.",
          "type": "void"
        }
      ]
    },
    {
      "name": "env_speaker",
      "type": "PointClass",
      "description": "Announcement Speaker",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseSpeaker"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/ambient_generic.vmt"
          ]
        }
      ]
    },
    {
      "name": "script_tauremoval",
      "type": "PointClass",
      "description": "Script: Custom entity used to handle the tau removal sequence in coast. (unused)",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Angles",
            "Targetname",
            "Parentname"
          ]
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "vortigaunt",
          "title": "Vortigaunt to use"
        }
      ],
      "inputs": [
        {
          "name": "StartScript",
          "description": "Start the script.",
          "type": "void"
        },
        {
          "name": "RemoveTau",
          "description": "Start removing the Tau cannon now.",
          "type": "void"
        }
      ]
    },
    {
      "name": "script_intro",
      "type": "PointClass",
      "description": "Script: Custom entity used to handle the intro sequence.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Take control of the player's view and start blending the two scenes.",
          "type": "void"
        },
        {
          "name": "Deactivate",
          "description": "Stop controlling the view.",
          "type": "void"
        },
        {
          "name": "SetCameraViewEntity",
          "description": "Set the viewpoint to blend with the player's viewpoint.",
          "type": "string"
        },
        {
          "name": "SetBlendMode",
          "description": "Set the blending mode to use.",
          "type": "integer"
        },
        {
          "name": "SetFOV",
          "description": "Set the fov for the second camera.",
          "type": "integer"
        },
        {
          "name": "SetNextFOV",
          "description": "Set the FOV to blend to over time. Follow this with a SetFOVBlendTime input to start the fov blend.",
          "type": "integer"
        },
        {
          "name": "SetFOVBlendTime",
          "description": "Set the amount of time it should take to blend to the next fov target, and start blending.",
          "type": "float"
        },
        {
          "name": "SetNextBlendMode",
          "description": "Set the blending mode to blend to over time. Follow this with a SetNextBlendTime input to start the mode blend.",
          "type": "integer"
        },
        {
          "name": "SetNextBlendTime",
          "description": "Set the amount of time it should take to blend to the next mode, and start blending.",
          "type": "float"
        },
        {
          "name": "FadeTo",
          "description": "Fade to a specific alpha amount of an amount of time. Parameters: <alpha> <duration>",
          "type": "string"
        },
        {
          "name": "SetFadeColor",
          "description": "Set the fade color. Parameters: <Red> <Green> <Blue>",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "alternatefovchange",
          "title": "Match env_zoom's FOV transition",
          "description": "Whether the script should match env_zoom's FOV transition.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ]
    },
    {
      "name": "env_citadel_energy_core",
      "type": "PointClass",
      "description": "Special effect for the energy cores in citadel.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Angles",
            "Targetname",
            "Parentname"
          ]
        }
      ],
      "flags": [
        {
          "title": "No small particles",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Start on",
          "value": 2,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "scale",
          "title": "Scale",
          "description": "Scale of the effect.  1 is the default size, 2 is twice that, etc.",
          "deflt": 1
        }
      ],
      "inputs": [
        {
          "name": "StartCharge",
          "description": "Start charging the core over specified number of seconds.",
          "type": "float"
        },
        {
          "name": "StartDischarge",
          "description": "Start discharging the core over specified number of seconds.",
          "type": "void"
        },
        {
          "name": "Stop",
          "description": "Stops the effect at any point.",
          "type": "float"
        }
      ]
    },
    {
      "name": "env_alyxemp",
      "type": "PointClass",
      "description": "Special effect for the Alyx's EMP device.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Angles",
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "size",
          "values": [
            -4,
            -4,
            -4,
            4,
            4,
            4
          ]
        },
        {
          "name": "color",
          "values": [
            0,
            0,
            255
          ]
        },
        {
          "name": "line",
          "values": [
            0,
            0,
            255,
            "targetname",
            "EndTargetName"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "Type",
          "title": "EMP Type",
          "deflt": 0,
          "choices": {
            "0": "Small",
            "1": "Large"
          }
        },
        {
          "type": "target_destination",
          "name": "EndTargetName",
          "title": "Target Entity",
          "description": "Entity to use as a target endpoint.",
          "deflt": ""
        }
      ],
      "inputs": [
        {
          "name": "StartCharge",
          "description": "Start charging the effect over specified number of seconds.",
          "type": "float"
        },
        {
          "name": "StartDischarge",
          "description": "Start discharging the effect over specified number of seconds.",
          "type": "void"
        },
        {
          "name": "Stop",
          "description": "Stops the effect at any point.",
          "type": "float"
        },
        {
          "name": "SetTargetEnt",
          "description": "Sets the target entity for the effect.",
          "type": "string"
        }
      ]
    },
    {
      "name": "test_sidelist",
      "type": "PointClass",
      "description": "Test entity for Ken!",
      "properties": [
        {
          "type": "sidelist",
          "name": "sides",
          "title": "Sides"
        }
      ]
    },
    {
      "name": "info_teleporter_countdown",
      "type": "PointClass",
      "description": "Countdown timer for the teleporter. The status of the teleporter will appear on vgui_screen entities whose panel is 'teleport_countdown_screen'.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/info_target.vmt"
          ]
        }
      ],
      "inputs": [
        {
          "name": "StartCountdown",
          "description": "Starts the teleporter countdown. Requires an argument which is the number of seconds for the countdown.",
          "type": "float"
        },
        {
          "name": "StopCountdown",
          "description": "Stops the countdown permanently",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Pauses the countdown due to a temporary malfunction. A warning sign will appear on the linked vgui screens.",
          "type": "void"
        },
        {
          "name": "Enable",
          "description": "Restarts the countdown since the malfunction is finished.",
          "type": "void"
        }
      ]
    },
    {
      "name": "prop_vehicle_choreo_generic",
      "type": "PointClass",
      "description": "Generic Choreo vehicle used for magical events.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseDriveableVehicle",
            "Parentname"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "properties": [
        {
          "type": "studio",
          "name": "model",
          "title": "World model",
          "deflt": "models/vehicles/prisoner_pod.mdl"
        },
        {
          "type": "string",
          "name": "vehiclescript",
          "title": "Vehicle Script File",
          "deflt": "scripts/vehicles/choreo_vehicle.txt"
        },
        {
          "type": "choices",
          "name": "ignoremoveparent",
          "title": "Ignore Move Parent on Exit",
          "description": "Should the player ignore this vehicle's move parent went performing exit checks.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "choices",
          "name": "ignoreplayer",
          "title": "Ignore Player collision",
          "description": "The player wont collide against this vehicle when moving around.",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "inputs": [
        {
          "name": "Open",
          "description": "Plays the vehicle's open animation and unlocks the vehicle for entry or exit.",
          "type": "void"
        },
        {
          "name": "Close",
          "description": "Plays the vehicle's close animation and locks the vehicle for entry or exit.",
          "type": "void"
        },
        {
          "name": "EnterVehicle",
          "description": "Forces the activator (or player) into the vehicle.",
          "type": "void"
        },
        {
          "name": "EnterVehicleImmediate",
          "description": "Forces the activator (or player) into the vehicle without enter/exit animations.",
          "type": "void"
        },
        {
          "name": "ExitVehicle",
          "description": "Boots the prisoner out of the vehicle.",
          "type": "void"
        },
        {
          "name": "Viewlock",
          "description": "Set true to prevent Gordon from looking around *at all*. Set false to let him look within limits.",
          "type": "bool"
        },
        {
          "name": "SetAnimation",
          "description": "Force the prop to play an animation. The parameter should be the name of the animation.",
          "type": "string"
        }
      ],
      "outputs": [
        {
          "name": "OnOpen",
          "description": "Fired when the vehicle is open enough to enter.",
          "type": "void"
        },
        {
          "name": "OnClose",
          "description": "Fired when the vehicle too closed to enter.",
          "type": "void"
        }
      ]
    },
    {
      "name": "filter_combineball_type",
      "type": "FilterClass",
      "description": "A filter that filters by combine ball type.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BaseFilter"
          ]
        },
        {
          "name": "iconsprite",
          "values": [
            "editor/filter_class.vmt"
          ]
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "balltype",
          "title": "Ball Type",
          "deflt": 1,
          "choices": {
            "0": "Not Thrown (in combine ball field, etc)",
            "2": "Thrown/Launched by the player's Gravity Gun",
            "3": "Launched by point_combine_ball_launcher"
          }
        }
      ]
    },
    {
      "name": "env_entity_dissolver",
      "type": "PointClass",
      "description": "Entity Dissolver",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname"
          ]
        }
      ],
      "inputs": [
        {
          "name": "Dissolve",
          "description": "Dissolve target, if no target is passed it'll use the target specified in the target field.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "type": "target_destination",
          "name": "target",
          "title": "Target to Dissolve",
          "description": "Targetname of the entity you want to dissolve.",
          "deflt": ""
        },
        {
          "type": "integer",
          "name": "magnitude",
          "title": "Magnitude",
          "description": "How strongly to push away from the center.",
          "deflt": 250
        },
        {
          "type": "choices",
          "name": "dissolvetype",
          "title": "Dissolve Type",
          "deflt": "Energy",
          "choices": {
            "0": "Energy",
            "1": "Heavy electrical",
            "2": "Light electrical",
            "3": "Core Effect"
          }
        }
      ]
    },
    {
      "name": "prop_coreball",
      "type": "PointClass",
      "description": "Core Ball",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/props_combine/coreball.mdl"
          ]
        }
      ],
      "inputs": [
        {
          "name": "SetScaleX",
          "description": "Scales the coreball in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        },
        {
          "name": "SetScaleY",
          "description": "Scales the coreball in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        },
        {
          "name": "SetScaleZ",
          "description": "Scales the coreball in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        }
      ]
    },
    {
      "name": "prop_scalable",
      "type": "PointClass",
      "description": "Scalable Prop",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Studiomodel",
            "Angles",
            "RenderFields"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        }
      ],
      "inputs": [
        {
          "name": "SetScaleX",
          "description": "Scales the prop in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        },
        {
          "name": "SetScaleY",
          "description": "Scales the prop in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        },
        {
          "name": "SetScaleZ",
          "description": "Scales the prop in one Axis. Params: <New Size> <Time>",
          "type": "vector"
        }
      ]
    },
    {
      "name": "point_push",
      "type": "PointClass",
      "description": "Point Push",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "radius"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "inner_radius"
          ]
        }
      ],
      "flags": [
        {
          "title": "Test LOS before pushing",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Use angles for push direction",
          "value": 2,
          "enabled": false
        },
        {
          "title": "No falloff (constant push at any distance)",
          "value": 4,
          "enabled": false
        },
        {
          "title": "Push players",
          "value": 8,
          "enabled": true
        },
        {
          "title": "Push physics",
          "value": 16,
          "enabled": true
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "enabled",
          "title": "Start Enabled",
          "deflt": 1,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        },
        {
          "type": "float",
          "name": "magnitude",
          "title": "Magnitude",
          "description": "How strongly to push away from the center.",
          "deflt": 100
        },
        {
          "type": "float",
          "name": "radius",
          "title": "Radius",
          "description": "Radius to affect items in.",
          "deflt": 128
        },
        {
          "type": "float",
          "name": "inner_radius",
          "title": "Inner radius",
          "description": "If not zero, the LOS is calculated from a point intersecting this sphere.",
          "deflt": "0"
        }
      ],
      "inputs": [
        {
          "name": "Enable",
          "description": "Enable the push.",
          "type": "void"
        },
        {
          "name": "Disable",
          "description": "Disable the push.",
          "type": "void"
        }
      ]
    },
    {
      "name": "npc_antlion_grub",
      "type": "NPCClass",
      "description": "Antlion grub",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Angles",
            "BaseFadeProp",
            "Global"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/antlion_grub.mdl"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademindist"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademaxdist"
          ]
        }
      ],
      "flags": [
        {
          "title": "Do not automatically attach to surface",
          "value": 1,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Squash",
          "description": "Squash the grub!",
          "type": "void"
        }
      ],
      "outputs": [
        {
          "name": "OnAgitated",
          "description": "Fired when the grub is stepped on or damaged.",
          "type": "void"
        },
        {
          "name": "OnDeath",
          "description": "Fired when the grub is killed.",
          "type": "void"
        },
        {
          "name": "OnDeathByPlayer",
          "description": "Fired when the grub is killed (only by the player).",
          "type": "void"
        }
      ]
    },
    {
      "name": "weapon_striderbuster",
      "type": "PointClass",
      "description": "Strider Buster",
      "parameters": [
        {
          "name": "base",
          "values": [
            "BasePropPhysics"
          ]
        },
        {
          "name": "studioprop",
          "values": []
        },
        {
          "name": "sphere",
          "values": [
            "fademindist"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "fademaxdist"
          ]
        },
        {
          "name": "studio",
          "values": [
            "models/magnusson_device.mdl"
          ]
        }
      ],
      "flags": [
        {
          "title": "Don't use game_weapon_manager",
          "value": 8388608,
          "enabled": false
        }
      ],
      "properties": [
        {
          "type": "choices",
          "name": "dud",
          "title": "Dud Bomb",
          "description": "This striderbuster is not armed (to be used for training).",
          "deflt": 0,
          "choices": {
            "0": "No",
            "1": "Yes"
          }
        }
      ],
      "outputs": [
        {
          "name": "OnAttachToStrider",
          "description": "Fired when the striderbuster successfully attaches to a strider.",
          "type": "void"
        },
        {
          "name": "OnDetonate",
          "description": "Fired when the striderbuster detonates.",
          "type": "void"
        },
        {
          "name": "OnShatter",
          "description": "Fired when the striderbuster shatters without detonating.",
          "type": "void"
        },
        {
          "name": "OnShotDown",
          "description": "Fired when the striderbuster shatters after being shot down by Hunters",
          "type": "void"
        }
      ]
    },
    {
      "name": "point_flesh_effect_target",
      "type": "PointClass",
      "description": "Flesh Effect Target",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Parentname"
          ]
        },
        {
          "name": "sphere",
          "values": [
            "radius"
          ]
        }
      ],
      "properties": [
        {
          "type": "float",
          "name": "radius",
          "title": "Radius",
          "description": "Radius of the effect when active",
          "deflt": 8
        }
      ],
      "inputs": [
        {
          "name": "SetRadius",
          "description": "Sets a new radius and time to interpolate to it(as a vector <Size> <Time in Seconds>).",
          "type": "vector"
        }
      ]
    },
    {
      "name": "func_pendulum",
      "type": "SolidClass",
      "description": "A brush entity from Half-Life: Source that's swings on an axis like a pendulum.",
      "parameters": [
        {
          "name": "base",
          "values": [
            "Targetname",
            "Origin",
            "RenderFields",
            "Shadow"
          ]
        }
      ],
      "properties": [
        {
          "type": "integer",
          "name": "speed",
          "title": "Speed",
          "deflt": 10
        },
        {
          "type": "integer",
          "name": "distance",
          "title": "Distance (deg)",
          "deflt": 90
        },
        {
          "type": "integer",
          "name": "damp",
          "title": "Damping (0-1000)",
          "deflt": 0
        },
        {
          "type": "integer",
          "name": "dmg",
          "title": "Damage inflicted when blocked",
          "deflt": 0
        }
      ],
      "flags": [
        {
          "title": "Start ON",
          "value": 1,
          "enabled": false
        },
        {
          "title": "Passable",
          "value": 8,
          "enabled": false
        },
        {
          "title": "Auto-return",
          "value": 16,
          "enabled": false
        },
        {
          "title": "X Axis",
          "value": 64,
          "enabled": false
        },
        {
          "title": "Y Axis",
          "value": 128,
          "enabled": false
        }
      ],
      "inputs": [
        {
          "name": "Activate",
          "description": "Starts the swing",
          "type": "void"
        }
      ]
    }
  ]
}